{"version":3,"sources":["meteor://ðŸ’»app/folder/parent/funcs.coffee","meteor://ðŸ’»app/folder/parent/funcs.coffee.js","meteor://ðŸ’»app/folder/hooks.coffee","meteor://ðŸ’»app/folder/hooks.coffee.js","meteor://ðŸ’»app/folder/modules.coffee","meteor://ðŸ’»app/folder/pdf.coffee","meteor://ðŸ’»app/folder/pdf.coffee.js","meteor://ðŸ’»app/folder/rights.coffee","meteor://ðŸ’»app/folder/rights.coffee.js","meteor://ðŸ’»app/folder/selects.coffee","meteor://ðŸ’»app/folder/selects.coffee.js","meteor://ðŸ’»app/both.coffee","meteor://ðŸ’»app/both.coffee.js","meteor://ðŸ’»app/client.coffee","meteor://ðŸ’»app/client.coffee.js","meteor://ðŸ’»app/server.coffee","meteor://ðŸ’»app/server.coffee.js"],"names":["_","lodash","coll","schema","look","list","val","find","selects","i","value","look2","id","fetch","_id","randomId","Math","random","toString","slice","zeros","num","size","repeat","Meteor","isClient","AutoForm","setDefaultTemplate","currentRoute","Router","current","route","getName","currentPar","param","params","search","Session","get","formDoc","limit","page","roles","user","tag","sessNull","map","tail","keys","set","modForm","doc","idbayar","begin","l","len","ref","stop","tanggal","Date","jenis","total","tindakan","labor","radio","obat","j","results","length","tarif","k","nama","harga","push","idobat","gudang","subtotal","jumlah","semua","reduce","values","acc","cara_bayar","anamesa_perawat","billRegis","status_bayar","moment","spm","diff","petugas","userId","nobill","parseInt","now","substr","addHooks","before","call","result","after","insert","err","res","formToDoc","idbarang","batch","idbatch","modules","name","full","icon","color","makePdf","card","pdf","pasien","findOne","pdfMake","createPdf","content","regis","nama_lengkap","no_mr","pageSize","pageMargins","pageOrientation","download","consent","text","alignment","columns","tmpt_lahir","tgl_lahir","format","concat","label","table","body","startCase","username","payRawat","len1","m","ref1","rows","widths","kelamin","klinik","numeral","payRegCard","amount","words","rekap","strings","rights","group","rawat","pekerjaan","agama","pendidikan","darah","nikah","bentuk","tipe_dokter","rujukan","keluar","barang","satuan","anggaran","x","karcis","selector","sub","subscribe","jalan","ready","dokter","snakeCase","poli","filter","arr","configure","layoutTemplate","loadingTemplate","action","render","type","Number","Object","String","autoform","pickadateOptions","selectYears","selectMonths","optional","options","autoValue","Boolean","fisik","tekanan_darah","nadi","suhu","decimal","pernapasan","berat","tinggi","lila","idtindakan","idlabor","hasil","idradio","puyer","aturan","Array","afFieldInput","SimpleSchema","assign","inap","igd","farmasi","logistik","tipe","grup","obj","active","Collection","allow","zipObject","waitOn","globalHelpers","indexOf","item","onBeforeAction","next","onAfterAction","uniq","flatMap","go","date","JSON","stringify","reverse","sel","sort","sortBy","getTime","a","b","option","field","end","apply","Template","registerHelper","events","event","term","key","target","layout","onRendered","menu","helpers","menus","navTitle","today","logout","formType","umur","showButton","showButtonText","preview","omitFields","split","roleFilter","userPoli","insurance","selPol","pasiens","byName","byNoMR","elem","kliniks","past","selSub","fields","$options","$regex","$or","getDate","$elemMatch","$in","$gt","c","$ne","$exists","later","$","trigger","prepend","attr","checked","disabled","setTimeout","dialog","title","message","Confirmation","ok","nodes","attributes","nodeValue","MaterializeModal","prompt","callback","submit","flat","flatten","toPairs","headers","modal","self","template","Papa","parse","files","header","step","data","modifier","alamat","ayah","tmpt_kelahiran","password","role","beli","diapotik","digudang","jual","kadaluarsa","masuk","merek","nobatch","pengadaan","suplier","schemagudang","gudangs","byBatch","manajemen","material_select","users","onUser","selRoles","schemadokter","schematarif","dokters","skip","tarifs","theRole","preventDefault","children","Materialize","toast","select","blob","Blob","saveAs","currentTarget","className","login","slider","loginWithPassword","pagination","innerText","report","datas","pickadate","onSet","start","exportcsv","exportToCSV","csv","isServer","startup","_ensureIndex","publish","methods","arrName","upsert","$set","update","$push","billCard","state","bayar","request","idjenis","filtered","findPasien","findStock","give","len2","len3","n","o","p","q","ref2","ref3","ref4","sortedEd","sortedIn","transfer","$inc","rmPasien","remove","rmRawat","$pull","addRole","Roles","addUsersToRoles","rmRole","newUser","Accounts","findUserByUsername","setUsername","setPassword","createUser","rmBarang","inactive","mod","pindah","last","docs","no_bill","diagnosa","saring","baru_lama","pick"],"mappings":"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","file":"/app.js","sourcesContent":["@_ = lodash\n@coll = {}; @schema = {}\n@look = (list, val) -> _.find selects[list], (i) -> i.value is val\n@look2 = (list, id) -> _.find coll[list].find().fetch(), (i) -> i._id is id\n@randomId = -> Math.random().toString(36).slice(2)\n@zeros = (num) ->\n\tsize = _.size _.toString num\n\tif size < 7 then '0'.repeat(6-size) + _.toString num\n\nif Meteor.isClient\n\n\t# SimpleSchema.debug = true\n\tAutoForm.setDefaultTemplate 'materialize'\n\t@currentRoute = -> Router.current().route.getName()\n\t@currentPar = (param) -> Router.current().params[param]\n\t@search = -> Session.get 'search'\n\t@formDoc = -> Session.get 'formDoc'\n\t@limit = -> Session.get 'limit'\n\t@page = -> Session.get 'page'\n\t@roles = -> Meteor.user().roles\n\t@tag = (tag, val) -> '<'+tag+'>'+val+'</'+tag+'>'\n\t@sessNull = -> _.map (_.tail _.keys Session.keys), (i) ->\n\t\tSession.set i, null\n","this._ = lodash;\n\nthis.coll = {};\n\nthis.schema = {};\n\nthis.look = function(list, val) {\n  return _.find(selects[list], function(i) {\n    return i.value === val;\n  });\n};\n\nthis.look2 = function(list, id) {\n  return _.find(coll[list].find().fetch(), function(i) {\n    return i._id === id;\n  });\n};\n\nthis.randomId = function() {\n  return Math.random().toString(36).slice(2);\n};\n\nthis.zeros = function(num) {\n  var size;\n  size = _.size(_.toString(num));\n  if (size < 7) {\n    return '0'.repeat(6 - size) + _.toString(num);\n  }\n};\n\nif (Meteor.isClient) {\n  AutoForm.setDefaultTemplate('materialize');\n  this.currentRoute = function() {\n    return Router.current().route.getName();\n  };\n  this.currentPar = function(param) {\n    return Router.current().params[param];\n  };\n  this.search = function() {\n    return Session.get('search');\n  };\n  this.formDoc = function() {\n    return Session.get('formDoc');\n  };\n  this.limit = function() {\n    return Session.get('limit');\n  };\n  this.page = function() {\n    return Session.get('page');\n  };\n  this.roles = function() {\n    return Meteor.user().roles;\n  };\n  this.tag = function(tag, val) {\n    return '<' + tag + '>' + val + '</' + tag + '>';\n  };\n  this.sessNull = function() {\n    return _.map(_.tail(_.keys(Session.keys)), function(i) {\n      return Session.set(i, null);\n    });\n  };\n}\n","if Meteor.isClient\n\n\t@modForm = (doc, idbayar) -> if currentRoute() is 'jalan'\n\t\tdoc.tanggal = new Date()\n\t\tdoc.idbayar = if idbayar then idbayar else randomId()\n\t\tdoc.jenis = currentRoute()\n\t\tdoc.total = tindakan: 0, labor: 0, radio: 0, obat: 0\n\t\t_.map ['tindakan', 'labor', 'radio'], (i) ->\n\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\tj['id'+i] = randomId()\n\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\tj.harga = find.harga\n\t\t\t\tdoc.total[i] += j.harga\n\t\tfor i in doc.obat?\n\t\t\ti.idobat = randomId()\n\t\t\tfind = _.find coll.gudang.find().fetch(), (k) -> k._id is i.nama\n\t\t\ti.harga = 0 # find.batch[find.batch.length-1].jual\n\t\t\ti.subtotal = i.harga * i.jumlah\n\t\t\tdoc.total.obat += i.subtotal\n\t\tdoc.total.semua = _.reduce _.values(doc.total), (acc, val) -> acc + val\n\t\tdoc.billRegis = true if doc.total.semua > 0 or doc.cara_bayar isnt 1 or doc.anamesa_perawat\n\t\tdoc.status_bayar = true if doc.total.semua > 0 and doc.cara_bayar isnt 1\n\t\tif doc.obat and 0 is doc.total.semua\n\t\t\tdoc.billRegis = true\n\t\t\tdoc.status_bayar = true\n\t\tbegin = Session.get 'begin'; stop = moment()\n\t\tdoc.spm = stop.diff begin, 'minutes'\n\t\tdoc.petugas = Meteor.userId()\n\t\tdoc.nobill = parseInt _.toString(Date.now()).substr 7, 13\n\t\tdoc\n\n\tAutoForm.addHooks 'formPasien',\n\t\tbefore:\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tformDoc = Session.get 'formDoc'\n\t\t\t\tif formDoc then Meteor.call 'rmRawat', currentPar('no_mr'), formDoc.idbayar\n\t\t\t\tthis.result modForm doc\n\t\tafter:\n\t\t\tinsert: -> sessNull()\n\t\t\t'update-pushArray': (err, res) ->\n\t\t\t\tsessNull()\n\t\t\t\tif res then Meteor.call 'pindah', currentPar 'no_mr'\n\t\tformToDoc: (doc) ->\n\t\t\tSession.set 'preview', modForm doc\n\t\t\tdoc\n\n\tAutoForm.addHooks 'formGudang',\n\t\tbefore:\n\t\t\tinsert: (doc) ->\n\t\t\t\tdoc.idbarang = randomId()\n\t\t\t\tdoc.batch[0].idbatch = randomId()\n\t\t\t\tthis.result doc\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tdoc.idbatch = randomId()\n\t\t\t\tthis.result doc\n","if (Meteor.isClient) {\n  this.modForm = function(doc, idbayar) {\n    var begin, find, i, l, len, ref, stop;\n    if (currentRoute() === 'jalan') {\n      doc.tanggal = new Date();\n      doc.idbayar = idbayar ? idbayar : randomId();\n      doc.jenis = currentRoute();\n      doc.total = {\n        tindakan: 0,\n        labor: 0,\n        radio: 0,\n        obat: 0\n      };\n      _.map(['tindakan', 'labor', 'radio'], function(i) {\n        var find, j, l, len, ref, results;\n        if (doc[i]) {\n          ref = doc[i];\n          results = [];\n          for (l = 0, len = ref.length; l < len; l++) {\n            j = ref[l];\n            j['id' + i] = randomId();\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            j.harga = find.harga;\n            results.push(doc.total[i] += j.harga);\n          }\n          return results;\n        }\n      });\n      ref = doc.obat != null;\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        i.idobat = randomId();\n        find = _.find(coll.gudang.find().fetch(), function(k) {\n          return k._id === i.nama;\n        });\n        i.harga = 0;\n        i.subtotal = i.harga * i.jumlah;\n        doc.total.obat += i.subtotal;\n      }\n      doc.total.semua = _.reduce(_.values(doc.total), function(acc, val) {\n        return acc + val;\n      });\n      if (doc.total.semua > 0 || doc.cara_bayar !== 1 || doc.anamesa_perawat) {\n        doc.billRegis = true;\n      }\n      if (doc.total.semua > 0 && doc.cara_bayar !== 1) {\n        doc.status_bayar = true;\n      }\n      if (doc.obat && 0 === doc.total.semua) {\n        doc.billRegis = true;\n        doc.status_bayar = true;\n      }\n      begin = Session.get('begin');\n      stop = moment();\n      doc.spm = stop.diff(begin, 'minutes');\n      doc.petugas = Meteor.userId();\n      doc.nobill = parseInt(_.toString(Date.now()).substr(7, 13));\n      return doc;\n    }\n  };\n  AutoForm.addHooks('formPasien', {\n    before: {\n      'update-pushArray': function(doc) {\n        var formDoc;\n        formDoc = Session.get('formDoc');\n        if (formDoc) {\n          Meteor.call('rmRawat', currentPar('no_mr'), formDoc.idbayar);\n        }\n        return this.result(modForm(doc));\n      }\n    },\n    after: {\n      insert: function() {\n        return sessNull();\n      },\n      'update-pushArray': function(err, res) {\n        sessNull();\n        if (res) {\n          return Meteor.call('pindah', currentPar('no_mr'));\n        }\n      }\n    },\n    formToDoc: function(doc) {\n      Session.set('preview', modForm(doc));\n      return doc;\n    }\n  });\n  AutoForm.addHooks('formGudang', {\n    before: {\n      insert: function(doc) {\n        doc.idbarang = randomId();\n        doc.batch[0].idbatch = randomId();\n        return this.result(doc);\n      },\n      'update-pushArray': function(doc) {\n        doc.idbatch = randomId();\n        return this.result(doc);\n      }\n    }\n  });\n}\n","@modules = [\n\tname: 'regis'\n\tfull: 'Pendaftaran'\n\ticon: 'people'\n\tcolor: 'orange'\n,\n\tname: 'bayar'\n\tfull: 'Pembayaran'\n\ticon: 'monetization_on'\n\tcolor: 'green'\n,\n\tname: 'jalan'\n\tfull: 'Rawat Jalan'\n\ticon: 'directions'\n\tcolor: 'blue'\n,\n\tname: 'igd'\n\tfull: 'IGD'\n\ticon: 'airport_shuttle'\n\tcolor: 'red'\n,\n\tname: 'inap'\n\tfull: 'Rawat Inap'\n\ticon: 'hotel'\n\tcolor: 'cyan'\n,\n\tname: 'labor'\n\tfull: 'Laboratorium'\n\ticon: 'wb_incandescent'\n\tcolor: 'amber'\n,\n\tname: 'radio'\n\tfull: 'Radiologi'\n\ticon: 'airline_seat_flat'\n\tcolor: 'indigo'\n,\n\tname: 'obat'\n\tfull: 'Apotek'\n\ticon: 'enhanced_encryption'\n\tcolor: 'light-green'\n,\n\tname: 'admisi'\n\tfull: 'Admisi'\n\ticon: 'assignment'\n\tcolor: 'purple'\n,\n\tname: 'rekam'\n\tfull: 'Rekam Medik'\n\ticon: 'content_copy'\n\tcolor: 'brown'\n,\n\tname: 'farmasi'\n\tfull: 'Gudang Farmasi'\n\ticon: 'local_pharmacy'\n\tcolor: 'orange'\n,\n\tname: 'logistik'\n\tfull: 'Gudang Logistik'\n\ticon: 'rv_hookup'\n\tcolor: 'blue-grey'\n,\n\tname: 'manajemen'\n\tfull: 'Manajemen'\n\ticon: 'people'\n\tcolor: 'orange'\n]\n","if Meteor.isClient\n\n\t@makePdf =\n\t\tcard: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t'Nama  : ' + doc.regis.nama_lengkap\n\t\t\t\t\t'No. MR: ' + zeros doc.no_mr\n\t\t\t\t]\n\t\t\t\tpageSize: 'B8'\n\t\t\t\tpageMargins: [110, 50, 0, 0]\n\t\t\t\tpageOrientation: 'landscape'\n\t\t\tpdf.download zeros(doc.no_mr) + '_card.pdf'\n\t\tconsent: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024', alignment: 'center'}\n\t\t\t\t\t{text: '\\nDATA UMUM PASIEN', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['NAMA LENGKAP', 'TEMPAT & TANGGAL LAHIR', 'GOLONGAN DARAH', 'JENIS KELAMIN', 'AGAMA', 'PENDIDIKAN', 'PEKERJAAN', 'NAMA AYAH', 'NAMA IBU', 'NAMA SUAMI / ISTRI', 'ALAMAT', 'NO. TELP / HP']\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t': ' + doc.regis.nama_lengkap\n\t\t\t\t\t\t\t': ' + doc.regis.tmpt_lahir + ', ' + moment(doc.regis.tgl_lahir).format('D/MM/YYYY')\n\t\t\t\t\t\t\t(_.map ['darah', 'kelamin', 'agama', 'pendidikan', 'pekerjaan'], (i) ->\n\t\t\t\t\t\t\t\t': ' + look(i, doc.regis[i]).label)...\n\t\t\t\t\t\t\t(_.map ['ayah', 'ibu', 'pasangan', 'alamat', 'kontak'], (i) ->\n\t\t\t\t\t\t\t\t': ' + doc.regis[i])...\n\t\t\t\t\t\t]\n\t\t\t\t\t]}\n\t\t\t\t\t{text: '\\nPERSETUJUAN UMUM (GENERAL CONSENT)', alignment: 'center'}\n\t\t\t\t\t{table: body: [\n\t\t\t\t\t\t['Cek', {text: 'Keterangan', alignment: 'center'}]\n\t\t\t\t\t\t[' ', 'Saya akan mentaati peraturan yang berlaku di RSUD Petala Bumi']\n\t\t\t\t\t\t[' ', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas']\n\t\t\t\t\t\t[' ', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.']\n\t\t\t\t\t\t[' ', 'Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat']\n\t\t\t\t\t\t[' ', 'Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan']\n\t\t\t\t\t]}\n\t\t\t\t\t'\\nPetunjuk :'\n\t\t\t\t\t'S: Setuju'\n\t\t\t\t\t'TS: Tidak Setuju'\n\t\t\t\t\t{alignment: 'justify', columns: [\n\t\t\t\t\t\t{text: '\\n\\n\\n\\n__________________\\n'+(_.startCase Meteor.user().username), alignment: 'center'}\n\t\t\t\t\t\t{text: 'Pekanbaru, '+moment().format('DD/MM/YYYY')+'\\n\\n\\n\\n__________________\\n'+(_.startCase doc.regis.nama_lengkap), alignment: 'center'}\n\t\t\t\t\t]}\n\t\t\t\t]\n\t\t\tpdf.download zeros(doc.no_mr) + '_consent.pdf'\n\t\tpayRawat: (doc) ->\n\t\t\tpasien = coll.pasien.findOne()\n\t\t\trows = [['Uraian', 'Harga']]\n\t\t\tfor i in ['tindakan', 'labor', 'radio']\n\t\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\t\trows.push [_.startCase(find.nama), _.toString(j.harga)]\n\t\t\ttable = table: widths: ['*', 'auto'], body: rows\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t{text: '\\nRINCIAN BIAYA RAWAT JALAN\\n', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['NO. MR', 'NAMA PASIEN', 'JENIS KELAMIN', 'TANGGAL LAHIR', 'UMUR', 'KLINIK']\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t': ' + zeros pasien.no_mr\n\t\t\t\t\t\t\t': ' + _.startCase pasien.regis.nama_lengkap\n\t\t\t\t\t\t\t': ' + look('kelamin', pasien.regis.kelamin).label\n\t\t\t\t\t\t\t': ' + moment().format('D/MM/YYYY')\n\t\t\t\t\t\t\t': ' + moment().diff(pasien.regis.tgl_lahir, 'years') + ' tahun'\n\t\t\t\t\t\t\t': ' + look('klinik', doc.klinik).label\n\t\t\t\t\t\t]\n\t\t\t\t\t]}\n\t\t\t\t\t{text: '\\n\\nRINCIAN PEMBAYARAN', alignment: 'center'}\n\t\t\t\t\ttable\n\t\t\t\t\t'\\nTOTAL BIAYA' + 'Rp ' + _.toString numeral(doc.total.semua).format('0,0')\n\t\t\t\t\t{text: '\\nPEKANBARU, ' + moment().format('D/MM/YYYY') +\n\t\t\t\t\t'\\n\\n\\n\\n\\n' + (_.startCase Meteor.user().username), alignment: 'right'}\n\t\t\t\t]\n\t\t\tpdf.download zeros(pasien.no_mr) + '_payRawat.pdf'\n\t\tpayRegCard: (amount, words) ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t{text: '\\n\\nKARCIS', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['TANGGAL', 'NO. MR', 'NAMA PASIEN', 'TARIF', '\\n\\nPETUGAS']\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t': ' + moment().format('DD/MM/YYYY')\n\t\t\t\t\t\t\t': ' + _.toString zeros doc.no_mr\n\t\t\t\t\t\t\t': ' + _.startCase doc.regis.nama_lengkap\n\t\t\t\t\t\t\t': ' + 'Rp ' + _.toString amount\n\t\t\t\t\t\t\t'\\n\\n: ' + _.startCase Meteor.user().username\n\t\t\t\t\t\t]\n\t\t\t\t\t]}\n\t\t\t\t]\n\t\t\tpdf.download zeros(doc.no_mr) + '_payRegCard.pdf'\n\t\trekap: (rows) ->\n\t\t\tstrings = _.map rows, (i) -> _.map i, (j) -> _.toString j\n\t\t\tpdf = pdfMake.createPdf content: [table: body: strings]\n\t\t\tpdf.download 'rekap.pdf'\n","var slice = [].slice;\n\nif (Meteor.isClient) {\n  this.makePdf = {\n    card: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: ['Nama  : ' + doc.regis.nama_lengkap, 'No. MR: ' + zeros(doc.no_mr)],\n        pageSize: 'B8',\n        pageMargins: [110, 50, 0, 0],\n        pageOrientation: 'landscape'\n      });\n      return pdf.download(zeros(doc.no_mr) + '_card.pdf');\n    },\n    consent: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024',\n            alignment: 'center'\n          }, {\n            text: '\\nDATA UMUM PASIEN',\n            alignment: 'center'\n          }, {\n            columns: [\n              ['NAMA LENGKAP', 'TEMPAT & TANGGAL LAHIR', 'GOLONGAN DARAH', 'JENIS KELAMIN', 'AGAMA', 'PENDIDIKAN', 'PEKERJAAN', 'NAMA AYAH', 'NAMA IBU', 'NAMA SUAMI / ISTRI', 'ALAMAT', 'NO. TELP / HP'], [': ' + doc.regis.nama_lengkap, ': ' + doc.regis.tmpt_lahir + ', ' + moment(doc.regis.tgl_lahir).format('D/MM/YYYY')].concat(slice.call(_.map(['darah', 'kelamin', 'agama', 'pendidikan', 'pekerjaan'], function(i) {\n                  return ': ' + look(i, doc.regis[i]).label;\n                })), slice.call(_.map(['ayah', 'ibu', 'pasangan', 'alamat', 'kontak'], function(i) {\n                  return ': ' + doc.regis[i];\n                })))\n            ]\n          }, {\n            text: '\\nPERSETUJUAN UMUM (GENERAL CONSENT)',\n            alignment: 'center'\n          }, {\n            table: {\n              body: [\n                [\n                  'Cek', {\n                    text: 'Keterangan',\n                    alignment: 'center'\n                  }\n                ], [' ', 'Saya akan mentaati peraturan yang berlaku di RSUD Petala Bumi'], [' ', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas'], [' ', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.'], [' ', 'Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat'], [' ', 'Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan']\n              ]\n            }\n          }, '\\nPetunjuk :', 'S: Setuju', 'TS: Tidak Setuju', {\n            alignment: 'justify',\n            columns: [\n              {\n                text: '\\n\\n\\n\\n__________________\\n' + (_.startCase(Meteor.user().username)),\n                alignment: 'center'\n              }, {\n                text: 'Pekanbaru, ' + moment().format('DD/MM/YYYY') + '\\n\\n\\n\\n__________________\\n' + (_.startCase(doc.regis.nama_lengkap)),\n                alignment: 'center'\n              }\n            ]\n          }\n        ]\n      });\n      return pdf.download(zeros(doc.no_mr) + '_consent.pdf');\n    },\n    payRawat: function(doc) {\n      var find, i, j, l, len, len1, m, pasien, pdf, ref, ref1, rows, table;\n      pasien = coll.pasien.findOne();\n      rows = [['Uraian', 'Harga']];\n      ref = ['tindakan', 'labor', 'radio'];\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        if (doc[i]) {\n          ref1 = doc[i];\n          for (m = 0, len1 = ref1.length; m < len1; m++) {\n            j = ref1[m];\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            rows.push([_.startCase(find.nama), _.toString(j.harga)]);\n          }\n        }\n      }\n      table = {\n        table: {\n          widths: ['*', 'auto'],\n          body: rows\n        }\n      };\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, {\n            text: '\\nRINCIAN BIAYA RAWAT JALAN\\n',\n            alignment: 'center'\n          }, {\n            columns: [['NO. MR', 'NAMA PASIEN', 'JENIS KELAMIN', 'TANGGAL LAHIR', 'UMUR', 'KLINIK'], [': ' + zeros(pasien.no_mr), ': ' + _.startCase(pasien.regis.nama_lengkap), ': ' + look('kelamin', pasien.regis.kelamin).label, ': ' + moment().format('D/MM/YYYY'), ': ' + moment().diff(pasien.regis.tgl_lahir, 'years') + ' tahun', ': ' + look('klinik', doc.klinik).label]]\n          }, {\n            text: '\\n\\nRINCIAN PEMBAYARAN',\n            alignment: 'center'\n          }, table, '\\nTOTAL BIAYA' + 'Rp ' + _.toString(numeral(doc.total.semua).format('0,0')), {\n            text: '\\nPEKANBARU, ' + moment().format('D/MM/YYYY') + '\\n\\n\\n\\n\\n' + (_.startCase(Meteor.user().username)),\n            alignment: 'right'\n          }\n        ]\n      });\n      return pdf.download(zeros(pasien.no_mr) + '_payRawat.pdf');\n    },\n    payRegCard: function(amount, words) {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, {\n            text: '\\n\\nKARCIS',\n            alignment: 'center'\n          }, {\n            columns: [['TANGGAL', 'NO. MR', 'NAMA PASIEN', 'TARIF', '\\n\\nPETUGAS'], [': ' + moment().format('DD/MM/YYYY'), ': ' + _.toString(zeros(doc.no_mr)), ': ' + _.startCase(doc.regis.nama_lengkap), ': ' + 'Rp ' + _.toString(amount), '\\n\\n: ' + _.startCase(Meteor.user().username)]]\n          }\n        ]\n      });\n      return pdf.download(zeros(doc.no_mr) + '_payRegCard.pdf');\n    },\n    rekap: function(rows) {\n      var pdf, strings;\n      strings = _.map(rows, function(i) {\n        return _.map(i, function(j) {\n          return _.toString(j);\n        });\n      });\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            table: {\n              body: strings\n            }\n          }\n        ]\n      });\n      return pdf.download('rekap.pdf');\n    }\n  };\n}\n","if Meteor.isClient\n\n\t@rights = [\n\t\tgroup: 'regis'\n\t\tlist: ['regis', 'jalan']\n\t,\n\t\tgroup: 'bayar'\n\t\tlist: ['bayar']\n\t,\n\t\tgroup: 'jalan'\n\t\tlist: ['jalan', 'farmasi']\n\t,\n\t\tgroup: 'inap'\n\t\tlist: ['inap', 'farmasi']\n\t,\n\t\tgroup: 'labor'\n\t\tlist: ['labor']\n\t,\n\t\tgroup: 'radio'\n\t\tlist: ['radio']\n\t,\n\t\tgroup: 'obat'\n\t\tlist: ['obat', 'farmasi']\n\t,\n\t\tgroup: 'rekam'\n\t\tlist: ['rekam', 'regis']\n\t,\n\t\tgroup: 'admisi'\n\t\tlist: ['admisi']\n\t,\n\t\tgroup: 'manajemen'\n\t\tlist: ['manajemen']\n\t,\n\t\tgroup: 'farmasi'\n\t\tlist: ['farmasi']\n\t]\n\n\t_.map rights, (i) ->\n\t\ti.list = [i.list..., 'panduan']\n\t\ti\n","var slice = [].slice;\n\nif (Meteor.isClient) {\n  this.rights = [\n    {\n      group: 'regis',\n      list: ['regis', 'jalan']\n    }, {\n      group: 'bayar',\n      list: ['bayar']\n    }, {\n      group: 'jalan',\n      list: ['jalan', 'farmasi']\n    }, {\n      group: 'inap',\n      list: ['inap', 'farmasi']\n    }, {\n      group: 'labor',\n      list: ['labor']\n    }, {\n      group: 'radio',\n      list: ['radio']\n    }, {\n      group: 'obat',\n      list: ['obat', 'farmasi']\n    }, {\n      group: 'rekam',\n      list: ['rekam', 'regis']\n    }, {\n      group: 'admisi',\n      list: ['admisi']\n    }, {\n      group: 'manajemen',\n      list: ['manajemen']\n    }, {\n      group: 'farmasi',\n      list: ['farmasi']\n    }\n  ];\n  _.map(rights, function(i) {\n    i.list = slice.call(i.list).concat(['panduan']);\n    return i;\n  });\n}\n","@selects =\n\trawat: ['Rawat Jalan', 'Rawat Inap', 'IGD']\n\tpekerjaan: ['PNS', 'BUMN/BUMD', 'TNI/Polri', 'Dokter', 'Karyawan Swasta', 'Wirausaha', 'Honorer', 'Pensiun', 'Petani', 'Buruh', 'Tidak Bekerja', 'Dan Lain-lain']\n\tkelamin: ['Laki-laki', 'Perempuan']\n\tagama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu']\n\tpendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah']\n\tdarah: ['A', 'B', 'C', 'AB', 'O']\n\tcara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free']\n\tnikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda']\n\tklinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio']\n\tbentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh']\n\ttipe_dokter: ['Umum', 'Spesialis']\n\trujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya']\n\tkeluar: ['Pulang', 'Rujuk']\n\tbarang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP']\n\tsatuan: ['Botol', 'Vial', 'Ampul', 'Pcs']\n\tanggaran: ['BLUD']\n\n_.map (_.keys selects), (i) -> selects[i] = _.map selects[i], (j, x) -> label: j, value: x+1\n\nselects.karcis = _.map [15000, 20000, 25000, 30000, 40000], (i) -> value: i, label: 'Rp ' + i\n\nselects.tindakan = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\tselector = jenis: Meteor.user().roles.jalan[0]\n\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: _.startCase i.nama\n\nselects.dokter = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'dokter', {}, {}\n\tfind = _.find selects.klinik, (i) ->\n\t\tMeteor.user().roles.jalan[0] is _.snakeCase i.label\n\tselector = poli: find.value\n\tif sub.ready() then _.map coll.dokter.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: i.nama\n\nselects.obat = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\tfilter = (arr) -> _.filter arr, (i) -> i.jenis is 1\n\tif sub.ready() then _.map filter(coll.gudang.find().fetch()), (i) ->\n\t\tvalue: i._id, label: i.nama\n\n_.map ['labor', 'radio'], (i) ->\n\tselects[i] = -> if Meteor.isClient\n\t\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\t\tselector = jenis: i\n\t\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (j) ->\n\t\t\tvalue: j._id, label: _.startCase j.nama\n","this.selects = {\n  rawat: ['Rawat Jalan', 'Rawat Inap', 'IGD'],\n  pekerjaan: ['PNS', 'BUMN/BUMD', 'TNI/Polri', 'Dokter', 'Karyawan Swasta', 'Wirausaha', 'Honorer', 'Pensiun', 'Petani', 'Buruh', 'Tidak Bekerja', 'Dan Lain-lain'],\n  kelamin: ['Laki-laki', 'Perempuan'],\n  agama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu'],\n  pendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah'],\n  darah: ['A', 'B', 'C', 'AB', 'O'],\n  cara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free'],\n  nikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda'],\n  klinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio'],\n  bentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh'],\n  tipe_dokter: ['Umum', 'Spesialis'],\n  rujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya'],\n  keluar: ['Pulang', 'Rujuk'],\n  barang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP'],\n  satuan: ['Botol', 'Vial', 'Ampul', 'Pcs'],\n  anggaran: ['BLUD']\n};\n\n_.map(_.keys(selects), function(i) {\n  return selects[i] = _.map(selects[i], function(j, x) {\n    return {\n      label: j,\n      value: x + 1\n    };\n  });\n});\n\nselects.karcis = _.map([15000, 20000, 25000, 30000, 40000], function(i) {\n  return {\n    value: i,\n    label: 'Rp ' + i\n  };\n});\n\nselects.tindakan = function() {\n  var selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'tarif', {}, {});\n    selector = {\n      jenis: Meteor.user().roles.jalan[0]\n    };\n    if (sub.ready()) {\n      return _.map(coll.tarif.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: _.startCase(i.nama)\n        };\n      });\n    }\n  }\n};\n\nselects.dokter = function() {\n  var find, selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'dokter', {}, {});\n    find = _.find(selects.klinik, function(i) {\n      return Meteor.user().roles.jalan[0] === _.snakeCase(i.label);\n    });\n    selector = {\n      poli: find.value\n    };\n    if (sub.ready()) {\n      return _.map(coll.dokter.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\nselects.obat = function() {\n  var filter, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'gudang', {}, {});\n    filter = function(arr) {\n      return _.filter(arr, function(i) {\n        return i.jenis === 1;\n      });\n    };\n    if (sub.ready()) {\n      return _.map(filter(coll.gudang.find().fetch()), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\n_.map(['labor', 'radio'], function(i) {\n  return selects[i] = function() {\n    var selector, sub;\n    if (Meteor.isClient) {\n      sub = Meteor.subscribe('coll', 'tarif', {}, {});\n      selector = {\n        jenis: i\n      };\n      if (sub.ready()) {\n        return _.map(coll.tarif.find(selector).fetch(), function(j) {\n          return {\n            value: j._id,\n            label: _.startCase(j.nama)\n          };\n        });\n      }\n    }\n  };\n});\n","Router.configure\n\tlayoutTemplate: 'layout'\n\tloadingTemplate: 'loading'\n\nRouter.route '/',\n\taction: -> this.render 'home'\n\nschema.regis =\n\tno_mr: type: Number\n\tregis: type: Object\n\t'regis.nama_lengkap': type: String\n\t'regis.tgl_lahir': type: Date, autoform: type: 'pickadate', pickadateOptions: selectYears: 150, selectMonths: true\n\t'regis.tmpt_lahir': type: String, optional: true\n\t'regis.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'regis.kelamin': type: Number, autoform: options: selects.kelamin, type: 'select-radio-inline'\n\t'regis.agama': type: Number, autoform: options: selects.agama, type: 'select-radio-inline'\n\t'regis.nikah': type: Number, autoform: options: selects.nikah, type: 'select-radio-inline'\n\t'regis.pendidikan': type: Number, optional: true, autoform: options: selects.pendidikan, type: 'select-radio-inline'\n\t'regis.darah': type: Number, optional: true, autoform: options: selects.darah, type: 'select-radio-inline'\n\t'regis.pekerjaan': type: Number, optional: true, autoform: options: selects.pekerjaan, type: 'select-radio-inline'\n\t'regis.kabupaten': type: String, optional: true\n\t'regis.kecamatan': type: String, optional: true\n\t'regis.kelurahan': type: String, optional: true\n\t'regis.alamat': type: String\n\t'regis.kontak': type: String, optional: true\n\t'regis.ayah': type: String, optional: true\n\t'regis.ibu': type: String, optional: true\n\t'regis.pasangan': type: String, optional: true\n\t'regis.petugas':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> if Meteor.isClient then Meteor.userId()\n\t'regis.date':\n\t\ttype: Date\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> new Date\n\t'regis.billCard': type: Boolean, optional: true, autoform: type: 'hidden'\n\nschema.fisik =\n\ttekanan_darah: type: String, optional: true\n\tnadi: type: Number, optional: true\n\tsuhu: type: Number, decimal: true, optional: true\n\tpernapasan: type: Number, optional: true\n\tberat: type: Number, optional: true\n\ttinggi: type: Number, optional: true\n\tlila: type: Number, optional: true\n\nschema.tindakan =\n\tidtindakan: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.tindakan, type: 'universe-select'\n\tdokter: type: String, autoform: options: selects.dokter\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\nschema.labor =\n\tidlabor: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.labor\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.radio =\n\tidradio: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.radio\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.obat =\n\tidobat: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.obat\n\tpuyer: type: String, optional: true\n\taturan: type: Object\n\t'aturan.kali': type: Number\n\t'aturan.dosis': type: Number\n\t'aturan.bentuk': type: Number, autoform: options: selects.bentuk\n\tjumlah: type: Number\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\tsubtotal: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.rawat =\n\tno_mr: type: Number\n\trawat: type: Array\n\t'rawat.$': type: Object\n\t'rawat.$.tanggal': type: Date, autoform: type: 'hidden'\n\t'rawat.$.idbayar': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.jenis': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'rawat.$.klinik': type: Number, autoform: options: selects.klinik, type: 'select-radio-inline'\n\t'rawat.$.karcis': type: Number, optional: true, autoform: options: selects.karcis, type: 'select-radio-inline'\n\t'rawat.$.rujukan': type: Number, optional: true, autoform: options: selects.rujukan, type: 'select-radio-inline'\n\t'rawat.$.billRegis': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.nobill': type: Number, autoform: type: 'hidden'\n\t'rawat.$.status_bayar': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.anamesa_perawat': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.fisik': optional: true, type: [new SimpleSchema schema.fisik]\n\t'rawat.$.anamesa_dokter': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.diagnosa': type: String, optional: true\n\t'rawat.$.tindakan': type: [new SimpleSchema schema.tindakan], optional: true\n\t'rawat.$.labor': type: [new SimpleSchema schema.labor], optional: true\n\t'rawat.$.radio': type: [new SimpleSchema schema.radio], optional: true\n\t'rawat.$.obat': type: [new SimpleSchema schema.obat], optional: true\n\t'rawat.$.total': type: Object, optional: true, autoform: type: 'hidden'\n\t'rawat.$.total.tindakan': type: Number, optional: true\n\t'rawat.$.total.labor': type: Number, optional: true\n\t'rawat.$.total.radio': type: Number, optional: true\n\t'rawat.$.total.obat': type: Number, optional: true\n\t'rawat.$.total.semua': type: Number, optional: true\n\t'rawat.$.spm': type: Number, optional: true, autoform: type: 'hidden'\n\t'rawat.$.pindah': type: Number, optional: true, autoform: options: selects.klinik\n\t'rawat.$.keluar': type: Number, optional: true, autoform: options: selects.keluar\n\t'rawat.$.petugas': type: String, autoform: type: 'hidden'\n\nschema.jalan = _.assign schema.rawat, {}\nschema.inap = _.assign schema.rawat, {}\nschema.igd = _.assign schema.rawat, {}\n\nschema.gudang =\n\tidbarang:\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\tjenis: type: Number, autoform: options: selects.barang\n\tnama: type: String\n\tbatch: type: Array\n\t'batch.$': type: Object\n\t'batch.$.idbatch':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\t'batch.$.nobatch': type: String\n\t'batch.$.merek': type: String\n\t'batch.$.satuan': type: Number, autoform: options: selects.satuan\n\t'batch.$.masuk': type: Date, autoform: type: 'pickadate'\n\t'batch.$.kadaluarsa': type: Date, autoform: type: 'pickadate'\n\t'batch.$.digudang': type: Number\n\t'batch.$.diapotik': type: Number\n\t'batch.$.beli': type: Number, decimal: true\n\t'batch.$.jual': type: Number, decimal: true\n\t'batch.$.suplier': type: String\n\t'batch.$.anggaran': type: Number, autoform: options: selects.anggaran\n\t'batch.$.pengadaan': type: Number\n\nschema.farmasi = _.assign schema.gudang, {}\nschema.logistik = _.assign schema.gudang, {}\n\nschema.dokter =\n\tnama: type: String\n\ttipe: type: Number, autoform: options: selects.tipe_dokter\n\tpoli: type: Number, autoform: options: selects.klinik\n\nschema.tarif =\n\tjenis: type: String\n\tnama: type: String\n\tharga: type: Number\n\tgrup: type: String, optional: true\n\n_.map ['dokter', 'tarif'], (i) ->\n\tobj = active:\n\t\ttype: Boolean\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> true\n\t_.assign schema[i], obj\n\n_.map ['pasien', 'gudang', 'dokter', 'tarif'], (i) ->\n\tcoll[i] = new Meteor.Collection i\n\tarr = ['insert', 'update', 'remove']\n\tcoll[i].allow _.zipObject arr, _.map arr, (i) -> -> true\n\n_.map modules[0..9], (i) ->\n\tRouter.route '/'+i.name+'/:no_mr?',\n\t\tname: i.name\n\t\taction: -> this.render 'pasien'\n\t\twaitOn: ->\n\t\t\t_.map ['dokter', 'tarif', 'gudang'], (j) ->\n\t\t\t\tMeteor.subscribe 'coll', j, {}, {}\n\n_.map modules[10..11], (i) ->\n\tRouter.route '/'+i.name+'/:idbarang?',\n\t\tname: i.name\n\t\taction: -> this.render 'gudang'\n\n_.map ['panduan'], (i) ->\n\tRouter.route '/' + i,\n\t\taction: -> this.render i\n\nRouter.route '/manajemen',\n\taction: -> this.render 'manajemen'\n\twaitOn: -> [\n\t\tMeteor.subscribe 'users'\n\t\tMeteor.subscribe 'coll', 'dokter', {}, {}\n\t\tMeteor.subscribe 'coll', 'tarif', {}, {}\n\t]\n\nRouter.route '/login', ->\n\taction: -> this.render 'login'\n","Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading'\n});\n\nRouter.route('/', {\n  action: function() {\n    return this.render('home');\n  }\n});\n\nschema.regis = {\n  no_mr: {\n    type: Number\n  },\n  regis: {\n    type: Object\n  },\n  'regis.nama_lengkap': {\n    type: String\n  },\n  'regis.tgl_lahir': {\n    type: Date,\n    autoform: {\n      type: 'pickadate',\n      pickadateOptions: {\n        selectYears: 150,\n        selectMonths: true\n      }\n    }\n  },\n  'regis.tmpt_lahir': {\n    type: String,\n    optional: true\n  },\n  'regis.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kelamin': {\n    type: Number,\n    autoform: {\n      options: selects.kelamin,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.agama': {\n    type: Number,\n    autoform: {\n      options: selects.agama,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.nikah': {\n    type: Number,\n    autoform: {\n      options: selects.nikah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pendidikan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pendidikan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.darah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.darah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pekerjaan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pekerjaan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kabupaten': {\n    type: String,\n    optional: true\n  },\n  'regis.kecamatan': {\n    type: String,\n    optional: true\n  },\n  'regis.kelurahan': {\n    type: String,\n    optional: true\n  },\n  'regis.alamat': {\n    type: String\n  },\n  'regis.kontak': {\n    type: String,\n    optional: true\n  },\n  'regis.ayah': {\n    type: String,\n    optional: true\n  },\n  'regis.ibu': {\n    type: String,\n    optional: true\n  },\n  'regis.pasangan': {\n    type: String,\n    optional: true\n  },\n  'regis.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      if (Meteor.isClient) {\n        return Meteor.userId();\n      }\n    }\n  },\n  'regis.date': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return new Date;\n    }\n  },\n  'regis.billCard': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.fisik = {\n  tekanan_darah: {\n    type: String,\n    optional: true\n  },\n  nadi: {\n    type: Number,\n    optional: true\n  },\n  suhu: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  pernapasan: {\n    type: Number,\n    optional: true\n  },\n  berat: {\n    type: Number,\n    optional: true\n  },\n  tinggi: {\n    type: Number,\n    optional: true\n  },\n  lila: {\n    type: Number,\n    optional: true\n  }\n};\n\nschema.tindakan = {\n  idtindakan: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.tindakan,\n      type: 'universe-select'\n    }\n  },\n  dokter: {\n    type: String,\n    autoform: {\n      options: selects.dokter\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.labor = {\n  idlabor: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.labor\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.radio = {\n  idradio: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.radio\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.obat = {\n  idobat: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.obat\n    }\n  },\n  puyer: {\n    type: String,\n    optional: true\n  },\n  aturan: {\n    type: Object\n  },\n  'aturan.kali': {\n    type: Number\n  },\n  'aturan.dosis': {\n    type: Number\n  },\n  'aturan.bentuk': {\n    type: Number,\n    autoform: {\n      options: selects.bentuk\n    }\n  },\n  jumlah: {\n    type: Number\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  subtotal: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.rawat = {\n  no_mr: {\n    type: Number\n  },\n  rawat: {\n    type: Array\n  },\n  'rawat.$': {\n    type: Object\n  },\n  'rawat.$.tanggal': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.idbayar': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.jenis': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.klinik': {\n    type: Number,\n    autoform: {\n      options: selects.klinik,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.karcis': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.karcis,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.rujukan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.rujukan,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.billRegis': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.nobill': {\n    type: Number,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.status_bayar': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.anamesa_perawat': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.fisik': {\n    optional: true,\n    type: [new SimpleSchema(schema.fisik)]\n  },\n  'rawat.$.anamesa_dokter': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.diagnosa': {\n    type: String,\n    optional: true\n  },\n  'rawat.$.tindakan': {\n    type: [new SimpleSchema(schema.tindakan)],\n    optional: true\n  },\n  'rawat.$.labor': {\n    type: [new SimpleSchema(schema.labor)],\n    optional: true\n  },\n  'rawat.$.radio': {\n    type: [new SimpleSchema(schema.radio)],\n    optional: true\n  },\n  'rawat.$.obat': {\n    type: [new SimpleSchema(schema.obat)],\n    optional: true\n  },\n  'rawat.$.total': {\n    type: Object,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.total.tindakan': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.labor': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.radio': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.obat': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.semua': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.spm': {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.pindah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.klinik\n    }\n  },\n  'rawat.$.keluar': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.keluar\n    }\n  },\n  'rawat.$.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.jalan = _.assign(schema.rawat, {});\n\nschema.inap = _.assign(schema.rawat, {});\n\nschema.igd = _.assign(schema.rawat, {});\n\nschema.gudang = {\n  idbarang: {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  jenis: {\n    type: Number,\n    autoform: {\n      options: selects.barang\n    }\n  },\n  nama: {\n    type: String\n  },\n  batch: {\n    type: Array\n  },\n  'batch.$': {\n    type: Object\n  },\n  'batch.$.idbatch': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  'batch.$.nobatch': {\n    type: String\n  },\n  'batch.$.merek': {\n    type: String\n  },\n  'batch.$.satuan': {\n    type: Number,\n    autoform: {\n      options: selects.satuan\n    }\n  },\n  'batch.$.masuk': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.kadaluarsa': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.digudang': {\n    type: Number\n  },\n  'batch.$.diapotik': {\n    type: Number\n  },\n  'batch.$.beli': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.jual': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.suplier': {\n    type: String\n  },\n  'batch.$.anggaran': {\n    type: Number,\n    autoform: {\n      options: selects.anggaran\n    }\n  },\n  'batch.$.pengadaan': {\n    type: Number\n  }\n};\n\nschema.farmasi = _.assign(schema.gudang, {});\n\nschema.logistik = _.assign(schema.gudang, {});\n\nschema.dokter = {\n  nama: {\n    type: String\n  },\n  tipe: {\n    type: Number,\n    autoform: {\n      options: selects.tipe_dokter\n    }\n  },\n  poli: {\n    type: Number,\n    autoform: {\n      options: selects.klinik\n    }\n  }\n};\n\nschema.tarif = {\n  jenis: {\n    type: String\n  },\n  nama: {\n    type: String\n  },\n  harga: {\n    type: Number\n  },\n  grup: {\n    type: String,\n    optional: true\n  }\n};\n\n_.map(['dokter', 'tarif'], function(i) {\n  var obj;\n  obj = {\n    active: {\n      type: Boolean,\n      autoform: {\n        type: 'hidden'\n      },\n      autoValue: function() {\n        return true;\n      }\n    }\n  };\n  return _.assign(schema[i], obj);\n});\n\n_.map(['pasien', 'gudang', 'dokter', 'tarif'], function(i) {\n  var arr;\n  coll[i] = new Meteor.Collection(i);\n  arr = ['insert', 'update', 'remove'];\n  return coll[i].allow(_.zipObject(arr, _.map(arr, function(i) {\n    return function() {\n      return true;\n    };\n  })));\n});\n\n_.map(modules.slice(0, 10), function(i) {\n  return Router.route('/' + i.name + '/:no_mr?', {\n    name: i.name,\n    action: function() {\n      return this.render('pasien');\n    },\n    waitOn: function() {\n      return _.map(['dokter', 'tarif', 'gudang'], function(j) {\n        return Meteor.subscribe('coll', j, {}, {});\n      });\n    }\n  });\n});\n\n_.map(modules.slice(10, 12), function(i) {\n  return Router.route('/' + i.name + '/:idbarang?', {\n    name: i.name,\n    action: function() {\n      return this.render('gudang');\n    }\n  });\n});\n\n_.map(['panduan'], function(i) {\n  return Router.route('/' + i, {\n    action: function() {\n      return this.render(i);\n    }\n  });\n});\n\nRouter.route('/manajemen', {\n  action: function() {\n    return this.render('manajemen');\n  },\n  waitOn: function() {\n    return [Meteor.subscribe('users'), Meteor.subscribe('coll', 'dokter', {}, {}), Meteor.subscribe('coll', 'tarif', {}, {})];\n  }\n});\n\nRouter.route('/login', function() {\n  return {\n    action: function() {\n      return this.render('login');\n    }\n  };\n});\n","if Meteor.isClient\n\n\tRouter.onBeforeAction ->\n\t\tunless Meteor.userId() then this.render 'login' else this.next()\n\tRouter.onAfterAction ->\n\t\tsessNull()\n\t\tRouter.go '/' unless currentRoute() in\n\t\t\t_.uniq _.flatMap _.keys(roles()), (i) ->\n\t\t\t\t_.find(rights, (j) -> j.group is i).list\n\n\tglobalHelpers = [\n\t\t['coll', -> coll]\n\t\t['schema', -> new SimpleSchema schema[currentRoute()]]\n\t\t['zeros', (num) -> zeros num]\n\t\t['showForm', -> Session.get 'showForm']\n\t\t['hari', (date) -> moment(date).format('D MMM YYYY')]\n\t\t['rupiah', (val) -> 'Rp ' + numeral(val).format('0,0')]\n\t\t['currentPar', (param) -> currentPar param]\n\t\t['stringify', (obj) -> JSON.stringify obj]\n\t\t['startCase', (val) -> _.startCase val]\n\t\t['modules', -> modules]\n\t\t['reverse', (arr) -> _.reverse arr]\n\t\t['sortBy', (arr, sel, sort) -> _.sortBy arr, (i) -> -i.tanggal.getTime()]\n\t\t['isTrue', (a, b) -> a is b]\n\t\t['isFalse', (a, b) -> a isnt b]\n\t\t['look', (option, value, field) -> look(option, value)[field]]\n\t\t['look2', (option, value, field) -> look2(option, value)[field]]\n\t\t['routeIs', (name) -> currentRoute() is name]\n\t\t['userGroup', (name) -> roles()[name]]\n\t\t['userRole', (name) -> roles()[currentRoute()][0] is name]\n\t\t['pagins', (name) ->\n\t\t\tlimit = Session.get 'limit'\n\t\t\tlength = coll[name].find().fetch().length\n\t\t\tend = (length - (length % limit)) / limit\n\t\t\t[1..end]\n\t\t]\n\t]\n\t_.map globalHelpers, (i) -> Template.registerHelper i...\n\n\tTemplate.body.events\n\t\t'keypress #search': (event) ->\n\t\t\tif event.key is 'Enter'\n\t\t\t\tterm = event.target.value\n\t\t\t\tif term.length > 2\n\t\t\t\t\tSession.set 'search', term\n\n\tTemplate.layout.onRendered ->\n\t\tSession.set 'limit', 10\n\t\tSession.set 'page', 0\n\n\tTemplate.menu.helpers\n\t\tmenus: ->\t\t\t\n\t\t\t_.flatMap _.keys(roles()), (i) ->\n\t\t\t\tfind = _.find rights, (j) -> j.group is i\n\t\t\t\t_.map find.list, (j) -> _.find modules, (k) -> k.name is j\n\t\tnavTitle: ->\n\t\t\tfind = _.find modules, (i) -> i.name is currentRoute()\n\t\t\tfind?.full or _.startCase currentRoute()\n\t\ttoday: -> moment().format('LLL')\n\n\tTemplate.menu.events\n\t\t'click #logout': -> Meteor.logout()\n\n\tTemplate.pasien.helpers\n\t\troute: -> currentRoute()\n\t\tformType: ->\n\t\t\tif currentRoute() is 'regis'\n\t\t\t\tif currentPar 'no_mr' then 'update' else 'insert'\n\t\t\telse\n\t\t\t\t'update-pushArray'\n\t\tumur: (date) -> moment().diff(date, 'years') + ' tahun'\n\t\tshowButton: -> Router.current().params.no_mr or currentRoute() is 'regis'\n\t\tshowButtonText: ->\n\t\t\tswitch currentRoute()\n\t\t\t\twhen 'regis' then '+ Pasien'\n\t\t\t\twhen 'jalan' then '+ Rawat'\n\t\tformDoc: -> formDoc()\n\t\tpreview: -> Session.get 'preview'\n\t\tomitFields: ->\n\t\t\tarr = ['fisik', 'anamesa_perawat', 'anamesa_dokter', 'diagnosa', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah']\n\t\t\tunless formDoc() and formDoc().billRegis\n\t\t\t\tarr\n\t\t\telse unless _.split(Meteor.user().username, '.')[0] is 'dr'\n\t\t\t\tarr[2..arr.length]\n\t\troleFilter: (arr) -> _.reverse _.filter arr, (i) ->\n\t\t\tfind = _.find selects.klinik, (j) ->\n\t\t\t\tj.label is _.startCase roles().jalan[0]\n\t\t\ti.klinik is find.value\n\t\tuserPoli: -> roles().jalan\n\t\tinsurance: (val) -> 'Rp ' + numeral(val+30000).format('0,0')\n\t\tselPol: -> _.map roles().jalan, (i) ->\n\t\t\t_.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\tpasiens: ->\n\t\t\tif currentPar 'no_mr'\n\t\t\t\tselector = no_mr: parseInt currentPar 'no_mr'\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tarr = ['bayar', 'jalan', 'labor', 'radio', 'obat']\n\t\t\t\toptions.fields.rawat = 1 if currentRoute() in arr\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = 'regis.nama_lengkap': $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyNoMR = no_mr: parseInt search()\n\t\t\t\tselector = $or: [byName, byNoMR]\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if roles().jalan\n\t\t\t\tnow = new Date(); past = new Date now.getDate()-2\n\t\t\t\tkliniks = _.map roles().jalan, (i) ->\n\t\t\t\t\tfind = _.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\t\t\t\tfind.value\n\t\t\t\tselector = rawat: $elemMatch:\n\t\t\t\t\tklinik: $in: kliniks\n\t\t\t\t\ttanggal: $gt: past\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready()\n\t\t\t\t\tfilter = _.filter coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\t\ta = -> i.rawat[i.rawat.length-1].klinik in kliniks\n\t\t\t\t\t\tb = -> not i.rawat[i.rawat.length-1].total.semua\n\t\t\t\t\t\tselPol = Session.get 'selPol'\n\t\t\t\t\t\tc = -> i.rawat[i.rawat.length-1].klinik is selPol\n\t\t\t\t\t\tif selPol then b() and c() else a() and b()\n\t\t\t\t\t_.sortBy filter, (i) -> i.rawat[i.rawat.length-1].tanggal\n\t\t\telse if currentRoute() is 'bayar'\n\t\t\t\tselector = rawat: $elemMatch: $or: ['status_bayar': $ne: true]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if currentRoute() in ['labor', 'radio', 'obat']\n\t\t\t\telem = 'status_bayar': true\n\t\t\t\telem[currentRoute()] = $exists: true, $elemMatch: hasil: $exists: false\n\t\t\t\tselSub = rawat: $elemMatch: elem\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selSub, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\n\tTemplate.pasien.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t\tlater = ->\n\t\t\t\t$('.autoform-remove-item').trigger 'click'\n\t\t\t\tif currentRoute() is 'jalan'\n\t\t\t\t\t_.map ['cara_bayar', 'klinik', 'karcis', 'rujukan'], (i) ->\n\t\t\t\t\t\t$('div[data-schema-key=\"'+i+'\"]').prepend tag 'p', _.startCase i\n\t\t\t\t\t\tif formDoc()\n\t\t\t\t\t\t\t$('input[name=\"'+i+'\"][value=\"'+formDoc()[i]+'\"]').attr checked: true\n\t\t\t\t\t\t\t$('input[name=\"'+i+'\"]').attr disabled: 'disabled'\n\t\t\t\t\t_.map ['anamesa_perawat'], (i) ->\n\t\t\t\t\t\t$('textarea[name=\"'+i+'\"]').val formDoc()[i]\n\t\t\t\tlist = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan']\n\t\t\t\tif currentRoute() is 'regis' then _.map list, (i) ->\n\t\t\t\t\t$('div[data-schema-key=\"regis.'+i+'\"]').prepend tag 'p', _.startCase i\n\t\t\tMeteor.setTimeout later, 1000\n\t\t\tMeteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\tSession.set 'begin', moment()\n\t\t'dblclick #row': ->\n\t\t\tRouter.go '/' + currentRoute() + '/' + this.no_mr\n\t\t'click #close': -> sessNull(); Router.go currentRoute()\n\t\t'click #card': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak Kartu'\n\t\t\t\tmessage: 'Yakin untuk cetak kartu ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\t# Meteor.call 'billCard', currentPar('no_mr'), true\n\t\t\t\tmakePdf.card()\n\t\t'click #consent': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak General Consent'\n\t\t\t\tmessage: 'Yakin untuk cetak persetujuan pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> makePdf.consent() if ok\n\t\t'dblclick #bill': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'karcis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Pembayaran Pendaftaran'\n\t\t\t\tmessage: 'Apakah yakin pasien sudah membayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tif nodes[1]\n\t\t\t\t\tMeteor.call 'billRegis', nodes[0..1]..., true\n\t\t\t\t\tmakePdf.payRegCard nodes[2], '...'\n\t\t\t\telse\n\t\t\t\t\tMeteor.call 'billCard', nodes[0], false\n\t\t\t\t\tmakePdf.payRegCard 10000, 'Sepuluh Ribu Rupiah'\n\t\t'dblclick #bayar': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Pembayaran'\n\t\t\t\tmessage: 'Apakah yakin tagihan ini sudah dibayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'bayar', nodes...\n\t\t\t\tpasien = coll.pasien.findOne no_mr: parseInt nodes[0]\n\t\t\t\tdoc = _.find pasien.rawat, (i) -> i.idbayar is nodes[1]\n\t\t\t\tmakePdf.payRawat doc\n\t\t'dblclick #request': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'jenis', 'idjenis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tMaterializeModal.prompt\n\t\t\t\tmessage: 'Isikan data requestnya'\n\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\tparams = ['request', nodes..., res.value]\n\t\t\t\t\tMeteor.call params..., (err, res) -> if res\n\t\t\t\t\t\tmessage = ''\n\t\t\t\t\t\tfor key, val of res\n\t\t\t\t\t\t\tmessage += '</p>'+key+': '+val+'</p>'\n\t\t\t\t\t\tMaterializeModal.message\n\t\t\t\t\t\t\ttitle: 'Penyerahan Obat'\n\t\t\t\t\t\t\tmessage: message\n\t\t\t\t\t\trekap = Session.get('rekap') or []\n\t\t\t\t\t\tflat = _.flatten _.toPairs res\n\t\t\t\t\t\tSession.set 'rekap', [rekap..., [nodes..., flat...]]\n\t\t'dblclick #rekap': ->\n\t\t\theaders = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah']\n\t\t\tmakePdf.rekap [headers, Session.get('rekap')...]\n\t\t\tSession.set 'rekap', null\n\t\t'click .modal-trigger': (event) ->\n\t\t\tif this.idbayar\n\t\t\t\tSession.set 'formDoc', this\n\t\t\t\tSession.set 'preview', modForm this, this.idbayar\n\t\t\t$('#preview').modal 'open'\n\t\t'click #rmRawat': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Hapus'\n\t\t\t\tmessage: 'Apakah yakin hapus data rawat pasien ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRawat', currentPar('no_mr'), self.idbayar\n\t\t'change #selPol': (event) ->\n\t\t\tSession.set 'selPol', parseInt event.target.id\n\t\t'click #rmPasien': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Pasien'\n\t\t\t\tmessage: 'Apakah yakin untuk menghapus pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmPasien', currentPar 'no_mr'\n\t\t\t\tRouter.go '/' + currentRoute()\n\n\tTemplate.import.events\n\t\t'change :file': (event, template) ->\n\t\t\tPapa.parse event.target.files[0],\n\t\t\t\theader: true\n\t\t\t\tstep: (result) ->\n\t\t\t\t\tdata = result.data[0]\n\t\t\t\t\tif currentRoute() is 'regis'\n\t\t\t\t\t\tselector = no_mr: parseInt data.no_mr\n\t\t\t\t\t\tmodifier = regis:\n\t\t\t\t\t\t\tnama_lengkap: _.startCase data.nama_lengkap\n\t\t\t\t\t\t\talamat: _.startCase data.alamat\n\t\t\t\t\t\t\tagama: parseInt data.agama\n\t\t\t\t\t\t\tayah: _.startCase data.ayah\n\t\t\t\t\t\t\tnikah: parseInt data.nikah\n\t\t\t\t\t\t\tpekerjaan: parseInt data.pekerjaan\n\t\t\t\t\t\t\tpendidikan: parseInt data.pendidikan\n\t\t\t\t\t\t\ttgl_lahir: new Date data.tgl_lahir\n\t\t\t\t\t\t\ttmpt_kelahiran: _.startCase data.tmpt_kelahiran\n\t\t\t\t\t\tMeteor.call 'import', 'pasien', selector, modifier\n\t\t\t\t\telse if currentRoute() is 'manajemen'\n\t\t\t\t\t\tif data.tipe\n\t\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\ttipe: parseInt data.tipe\n\t\t\t\t\t\t\t\tpoli: parseInt data.poli\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tMeteor.call 'import', 'dokter', selector, modifier\n\t\t\t\t\t\telse if data.harga\n\t\t\t\t\t\t\tselector = nama: _.snakeCase data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\tharga: parseInt data.harga\n\t\t\t\t\t\t\t\tjenis: _.snakeCase data.jenis\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tdata.grup and modifier.grup = _.startCase data.grup\n\t\t\t\t\t\t\tMeteor.call 'import', 'tarif', selector, modifier\n\t\t\t\t\t\telse if data.password\n\t\t\t\t\t\t\tMeteor.call 'newUser', data\n\t\t\t\t\t\t\tMeteor.call 'addRole', data.username, [data.role], data.group\n\t\t\t\t\telse if currentRoute() is 'farmasi'\n\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\tidbarang: randomId()\n\t\t\t\t\t\t\tbatch: [\n\t\t\t\t\t\t\t\tidbatch: randomId()\n\t\t\t\t\t\t\t\tanggaran: data.anggaran\n\t\t\t\t\t\t\t\tbeli: parseInt data.beli\n\t\t\t\t\t\t\t\tdiapotik: parseInt data.diapotik\n\t\t\t\t\t\t\t\tdigudang: parseInt data.digudang\n\t\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\t\tjual: parseInt data.jual\n\t\t\t\t\t\t\t\tkadaluarsa: new Date data.kadaluarsa\n\t\t\t\t\t\t\t\tmasuk: new Date data.masuk\n\t\t\t\t\t\t\t\tmerek: data.merek or ''\n\t\t\t\t\t\t\t\tnobatch: data.nobatch\n\t\t\t\t\t\t\t\tpengadaan: parseInt data.pengadaan\n\t\t\t\t\t\t\t\tsatuan: parseInt data.satuan\n\t\t\t\t\t\t\t\tsuplier: data.suplier\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\tdata.nama and Meteor.call 'import', 'gudang', selector, modifier, 'batch'\n\n\tTemplate.gudang.helpers\n\t\tschemagudang: -> new SimpleSchema schema.gudang\n\t\tformType: -> if currentPar('idbarang') then 'update-pushArray' else 'insert'\n\t\tgudangs: ->\n\t\t\tif currentPar 'idbarang'\n\t\t\t\tselector = idbarang: currentPar 'idbarang'\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tif sub.ready() then coll.gudang.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = nama: $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyBatch = idbatch: search()\n\t\t\t\tselector = $or: [byName, byBatch]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tsub.ready() and coll.gudang.find().fetch()\n\t\t\telse\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\t\tsub.ready() and coll.gudang.find().fetch()\n\n\tTemplate.gudang.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t'dblclick #row': -> Router.go '/' + currentRoute() + '/' + this.idbarang\n\t\t'dblclick #transfer': ->\n\t\t\tdata = this\n\t\t\tif roles().farmasi\n\t\t\t\tMaterializeModal.prompt\n\t\t\t\t\tmessage: 'Transfer Gudang > Apotek'\n\t\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\t\tMeteor.call 'transfer', currentPar('idbarang'), data.idbatch, parseInt res.value\n\t\t'click #rmBarang': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Jenis Obat'\n\t\t\t\tmessage: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmBarang', self.idbarang\n\n\tTemplate.manajemen.onRendered ->\n\t\t$('select#export').material_select()\n\n\tTemplate.manajemen.helpers\n\t\tusers: -> Meteor.users.find().fetch()\n\t\tonUser: -> Session.get 'onUser'\n\t\tselRoles: -> ['petugas', 'admin']\n\t\tklinik: -> selects.klinik\n\t\tschemadokter: -> new SimpleSchema schema.dokter\n\t\tschematarif: -> new SimpleSchema schema.tarif\n\t\tdokters: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.dokter.find(selector, options).fetch()\n\t\ttarifs: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.tarif.find(selector, options).fetch()\n\n\tTemplate.manajemen.events\n\t\t'submit #userForm': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tonUser = Session.get 'onUser'\n\t\t\tunless onUser\n\t\t\t\tdoc =\n\t\t\t\t\tusername: event.target.children.username.value\n\t\t\t\t\tpassword: event.target.children.password.value\n\t\t\t\trepeat = event.target.children.repeat.value\n\t\t\t\tif doc.password is repeat\n\t\t\t\t\tMeteor.call 'newUser', doc\n\t\t\t\t\t$('input').val ''\n\t\t\t\telse\n\t\t\t\t\tMaterialize.toast 'Password tidak mirip', 3000\n\t\t\telse\n\t\t\t\trole = $('input[name=\"role\"]:checked', event.target)[0].id\n\t\t\t\tgroup = $('input[name=\"group\"]:checked', event.target)[0].id\n\t\t\t\tpoli = $('input[name=\"poli\"]:checked', event.target)[0]\n\t\t\t\ttheRole = unless poli then role else _.snakeCase poli.id\n\t\t\t\tMeteor.call 'addRole', onUser._id, [theRole], group\n\t\t'dblclick #row': -> Session.set 'onUser', this\n\t\t'dblclick #reset': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Reset Peranan'\n\t\t\t\tmessage: 'Anda yakin untuk menghapus semua perannya?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRole', self._id\n\t\t'click #close': -> sessNull()\n\t\t'click #export': ->\n\t\t\tselect = $('select#export').val()\n\t\t\tMeteor.call 'export', select, (err, content) -> if content\n\t\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\t\tsaveAs blob, select+'.csv'\n\t\t'dblclick #baris': (event) ->\n\t\t\tjenis = event.currentTarget.className\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus ' + _.startCase jenis\n\t\t\t\tmessage: 'Yakin untuk menghapus '+jenis+' dari daftar?'\n\t\t\tself = this\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'inactive', jenis, self._id\n\n\tTemplate.login.onRendered ->\n\t\t$('.slider').slider()\n\n\tTemplate.login.events\n\t\t'submit form': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tusername = event.target.children.username.value\n\t\t\tpassword = event.target.children.password.value\n\t\t\tMeteor.loginWithPassword username, password, (err) ->\n\t\t\t\tif err\n\t\t\t\t\tMaterialize.toast 'Salah username / password', 3000\n\t\t\t\telse\n\t\t\t\t\tRouter.go '/' + _.keys(roles())[0]\n\n\tTemplate.pagination.events\n\t\t'click #next': -> Session.set 'page', 1 + page()\n\t\t'click #prev': -> Session.set 'page', -1 + page()\n\t\t'click #num': (event) ->\n\t\t\tSession.set 'page', parseInt event.target.innerText\n\n\tTemplate.report.helpers\n\t\tdatas: -> Session.get 'laporan'\n\n\tTemplate.report.events\n\t\t'click .datepicker': (event, template) ->\n\t\t\ttype = event.target.attributes.date.nodeValue\n\t\t\t$('#'+type).pickadate onSet: (data) ->\n\t\t\t\tSession.set type+'Date', data.select\n\t\t\t\tstart = Session.get 'startDate'\n\t\t\t\tend = Session.get 'endDate'\n\t\t\t\tif start and end\n\t\t\t\t\tMeteor.call 'report', template.data.jenis, start, end, (err, res) ->\n\t\t\t\t\t\tres and Session.set 'laporan', res\n\t\t'click #export': (event, template) ->\n\t\t\tcontent = exportcsv.exportToCSV Session.get('laporan').csv, true, ';'\n\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\tsaveAs blob, template.data.jenis+'.csv'\n","var globalHelpers,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  slice = [].slice;\n\nif (Meteor.isClient) {\n  Router.onBeforeAction(function() {\n    if (!Meteor.userId()) {\n      return this.render('login');\n    } else {\n      return this.next();\n    }\n  });\n  Router.onAfterAction(function() {\n    var ref;\n    sessNull();\n    if (ref = currentRoute(), indexOf.call(_.uniq(_.flatMap(_.keys(roles()), function(i) {\n      return _.find(rights, function(j) {\n        return j.group === i;\n      }).list;\n    })), ref) < 0) {\n      return Router.go('/');\n    }\n  });\n  globalHelpers = [\n    [\n      'coll', function() {\n        return coll;\n      }\n    ], [\n      'schema', function() {\n        return new SimpleSchema(schema[currentRoute()]);\n      }\n    ], [\n      'zeros', function(num) {\n        return zeros(num);\n      }\n    ], [\n      'showForm', function() {\n        return Session.get('showForm');\n      }\n    ], [\n      'hari', function(date) {\n        return moment(date).format('D MMM YYYY');\n      }\n    ], [\n      'rupiah', function(val) {\n        return 'Rp ' + numeral(val).format('0,0');\n      }\n    ], [\n      'currentPar', function(param) {\n        return currentPar(param);\n      }\n    ], [\n      'stringify', function(obj) {\n        return JSON.stringify(obj);\n      }\n    ], [\n      'startCase', function(val) {\n        return _.startCase(val);\n      }\n    ], [\n      'modules', function() {\n        return modules;\n      }\n    ], [\n      'reverse', function(arr) {\n        return _.reverse(arr);\n      }\n    ], [\n      'sortBy', function(arr, sel, sort) {\n        return _.sortBy(arr, function(i) {\n          return -i.tanggal.getTime();\n        });\n      }\n    ], [\n      'isTrue', function(a, b) {\n        return a === b;\n      }\n    ], [\n      'isFalse', function(a, b) {\n        return a !== b;\n      }\n    ], [\n      'look', function(option, value, field) {\n        return look(option, value)[field];\n      }\n    ], [\n      'look2', function(option, value, field) {\n        return look2(option, value)[field];\n      }\n    ], [\n      'routeIs', function(name) {\n        return currentRoute() === name;\n      }\n    ], [\n      'userGroup', function(name) {\n        return roles()[name];\n      }\n    ], [\n      'userRole', function(name) {\n        return roles()[currentRoute()][0] === name;\n      }\n    ], [\n      'pagins', function(name) {\n        var end, l, length, limit, results;\n        limit = Session.get('limit');\n        length = coll[name].find().fetch().length;\n        end = (length - (length % limit)) / limit;\n        return (function() {\n          results = [];\n          for (var l = 1; 1 <= end ? l <= end : l >= end; 1 <= end ? l++ : l--){ results.push(l); }\n          return results;\n        }).apply(this);\n      }\n    ]\n  ];\n  _.map(globalHelpers, function(i) {\n    return Template.registerHelper.apply(Template, i);\n  });\n  Template.body.events({\n    'keypress #search': function(event) {\n      var term;\n      if (event.key === 'Enter') {\n        term = event.target.value;\n        if (term.length > 2) {\n          return Session.set('search', term);\n        }\n      }\n    }\n  });\n  Template.layout.onRendered(function() {\n    Session.set('limit', 10);\n    return Session.set('page', 0);\n  });\n  Template.menu.helpers({\n    menus: function() {\n      return _.flatMap(_.keys(roles()), function(i) {\n        var find;\n        find = _.find(rights, function(j) {\n          return j.group === i;\n        });\n        return _.map(find.list, function(j) {\n          return _.find(modules, function(k) {\n            return k.name === j;\n          });\n        });\n      });\n    },\n    navTitle: function() {\n      var find;\n      find = _.find(modules, function(i) {\n        return i.name === currentRoute();\n      });\n      return (find != null ? find.full : void 0) || _.startCase(currentRoute());\n    },\n    today: function() {\n      return moment().format('LLL');\n    }\n  });\n  Template.menu.events({\n    'click #logout': function() {\n      return Meteor.logout();\n    }\n  });\n  Template.pasien.helpers({\n    route: function() {\n      return currentRoute();\n    },\n    formType: function() {\n      if (currentRoute() === 'regis') {\n        if (currentPar('no_mr')) {\n          return 'update';\n        } else {\n          return 'insert';\n        }\n      } else {\n        return 'update-pushArray';\n      }\n    },\n    umur: function(date) {\n      return moment().diff(date, 'years') + ' tahun';\n    },\n    showButton: function() {\n      return Router.current().params.no_mr || currentRoute() === 'regis';\n    },\n    showButtonText: function() {\n      switch (currentRoute()) {\n        case 'regis':\n          return '+ Pasien';\n        case 'jalan':\n          return '+ Rawat';\n      }\n    },\n    formDoc: function() {\n      return formDoc();\n    },\n    preview: function() {\n      return Session.get('preview');\n    },\n    omitFields: function() {\n      var arr;\n      arr = ['fisik', 'anamesa_perawat', 'anamesa_dokter', 'diagnosa', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah'];\n      if (!(formDoc() && formDoc().billRegis)) {\n        return arr;\n      } else if (_.split(Meteor.user().username, '.')[0] !== 'dr') {\n        return arr.slice(2, +arr.length + 1 || 9e9);\n      }\n    },\n    roleFilter: function(arr) {\n      return _.reverse(_.filter(arr, function(i) {\n        var find;\n        find = _.find(selects.klinik, function(j) {\n          return j.label === _.startCase(roles().jalan[0]);\n        });\n        return i.klinik === find.value;\n      }));\n    },\n    userPoli: function() {\n      return roles().jalan;\n    },\n    insurance: function(val) {\n      return 'Rp ' + numeral(val + 30000).format('0,0');\n    },\n    selPol: function() {\n      return _.map(roles().jalan, function(i) {\n        return _.find(selects.klinik, function(j) {\n          return i === _.snakeCase(j.label);\n        });\n      });\n    },\n    pasiens: function() {\n      var arr, byName, byNoMR, elem, filter, kliniks, now, options, past, ref, ref1, selSub, selector, sub;\n      if (currentPar('no_mr')) {\n        selector = {\n          no_mr: parseInt(currentPar('no_mr'))\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        arr = ['bayar', 'jalan', 'labor', 'radio', 'obat'];\n        if (ref = currentRoute(), indexOf.call(arr, ref) >= 0) {\n          options.fields.rawat = 1;\n        }\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          'regis.nama_lengkap': {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byNoMR = {\n          no_mr: parseInt(search())\n        };\n        selector = {\n          $or: [byName, byNoMR]\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if (roles().jalan) {\n        now = new Date();\n        past = new Date(now.getDate() - 2);\n        kliniks = _.map(roles().jalan, function(i) {\n          var find;\n          find = _.find(selects.klinik, function(j) {\n            return i === _.snakeCase(j.label);\n          });\n          return find.value;\n        });\n        selector = {\n          rawat: {\n            $elemMatch: {\n              klinik: {\n                $in: kliniks\n              },\n              tanggal: {\n                $gt: past\n              }\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          filter = _.filter(coll.pasien.find().fetch(), function(i) {\n            var a, b, c, selPol;\n            a = function() {\n              var ref1;\n              return ref1 = i.rawat[i.rawat.length - 1].klinik, indexOf.call(kliniks, ref1) >= 0;\n            };\n            b = function() {\n              return !i.rawat[i.rawat.length - 1].total.semua;\n            };\n            selPol = Session.get('selPol');\n            c = function() {\n              return i.rawat[i.rawat.length - 1].klinik === selPol;\n            };\n            if (selPol) {\n              return b() && c();\n            } else {\n              return a() && b();\n            }\n          });\n          return _.sortBy(filter, function(i) {\n            return i.rawat[i.rawat.length - 1].tanggal;\n          });\n        }\n      } else if (currentRoute() === 'bayar') {\n        selector = {\n          rawat: {\n            $elemMatch: {\n              $or: [\n                {\n                  'status_bayar': {\n                    $ne: true\n                  }\n                }\n              ]\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if ((ref1 = currentRoute()) === 'labor' || ref1 === 'radio' || ref1 === 'obat') {\n        elem = {\n          'status_bayar': true\n        };\n        elem[currentRoute()] = {\n          $exists: true,\n          $elemMatch: {\n            hasil: {\n              $exists: false\n            }\n          }\n        };\n        selSub = {\n          rawat: {\n            $elemMatch: elem\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selSub, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      }\n    }\n  });\n  Template.pasien.events({\n    'click #showForm': function() {\n      var later;\n      Session.set('showForm', !Session.get('showForm'));\n      later = function() {\n        var list;\n        $('.autoform-remove-item').trigger('click');\n        if (currentRoute() === 'jalan') {\n          _.map(['cara_bayar', 'klinik', 'karcis', 'rujukan'], function(i) {\n            $('div[data-schema-key=\"' + i + '\"]').prepend(tag('p', _.startCase(i)));\n            if (formDoc()) {\n              $('input[name=\"' + i + '\"][value=\"' + formDoc()[i] + '\"]').attr({\n                checked: true\n              });\n              return $('input[name=\"' + i + '\"]').attr({\n                disabled: 'disabled'\n              });\n            }\n          });\n          _.map(['anamesa_perawat'], function(i) {\n            return $('textarea[name=\"' + i + '\"]').val(formDoc()[i]);\n          });\n        }\n        list = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan'];\n        if (currentRoute() === 'regis') {\n          return _.map(list, function(i) {\n            return $('div[data-schema-key=\"regis.' + i + '\"]').prepend(tag('p', _.startCase(i)));\n          });\n        }\n      };\n      Meteor.setTimeout(later, 1000);\n      Meteor.subscribe('coll', 'gudang', {}, {});\n      return Session.set('begin', moment());\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.no_mr);\n    },\n    'click #close': function() {\n      sessNull();\n      return Router.go(currentRoute());\n    },\n    'click #card': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak Kartu',\n        message: 'Yakin untuk cetak kartu ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.card();\n        }\n      });\n    },\n    'click #consent': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak General Consent',\n        message: 'Yakin untuk cetak persetujuan pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.consent();\n        }\n      });\n    },\n    'dblclick #bill': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar', 'karcis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Pembayaran Pendaftaran',\n        message: 'Apakah yakin pasien sudah membayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          if (nodes[1]) {\n            Meteor.call.apply(Meteor, ['billRegis'].concat(slice.call(nodes.slice(0, 2)), [true]));\n            return makePdf.payRegCard(nodes[2], '...');\n          } else {\n            Meteor.call('billCard', nodes[0], false);\n            return makePdf.payRegCard(10000, 'Sepuluh Ribu Rupiah');\n          }\n        }\n      });\n    },\n    'dblclick #bayar': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Konfirmasi Pembayaran',\n        message: 'Apakah yakin tagihan ini sudah dibayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        var doc, pasien;\n        if (ok) {\n          Meteor.call.apply(Meteor, ['bayar'].concat(slice.call(nodes)));\n          pasien = coll.pasien.findOne({\n            no_mr: parseInt(nodes[0])\n          });\n          doc = _.find(pasien.rawat, function(i) {\n            return i.idbayar === nodes[1];\n          });\n          return makePdf.payRawat(doc);\n        }\n      });\n    },\n    'dblclick #request': function(event) {\n      var nodes;\n      nodes = _.map(['pasien', 'idbayar', 'jenis', 'idjenis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      return MaterializeModal.prompt({\n        message: 'Isikan data requestnya',\n        callback: function(err, res) {\n          var params;\n          if (res.submit) {\n            params = ['request'].concat(slice.call(nodes), [res.value]);\n            return Meteor.call.apply(Meteor, slice.call(params).concat([function(err, res) {\n              var flat, key, message, rekap, val;\n              if (res) {\n                message = '';\n                for (key in res) {\n                  val = res[key];\n                  message += '</p>' + key + ': ' + val + '</p>';\n                }\n                MaterializeModal.message({\n                  title: 'Penyerahan Obat',\n                  message: message\n                });\n                rekap = Session.get('rekap') || [];\n                flat = _.flatten(_.toPairs(res));\n                return Session.set('rekap', slice.call(rekap).concat([slice.call(nodes).concat(slice.call(flat))]));\n              }\n            }]));\n          }\n        }\n      });\n    },\n    'dblclick #rekap': function() {\n      var headers;\n      headers = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah'];\n      makePdf.rekap([headers].concat(slice.call(Session.get('rekap'))));\n      return Session.set('rekap', null);\n    },\n    'click .modal-trigger': function(event) {\n      if (this.idbayar) {\n        Session.set('formDoc', this);\n        Session.set('preview', modForm(this, this.idbayar));\n      }\n      return $('#preview').modal('open');\n    },\n    'click #rmRawat': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Konfirmasi Hapus',\n        message: 'Apakah yakin hapus data rawat pasien ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRawat', currentPar('no_mr'), self.idbayar);\n        }\n      });\n    },\n    'change #selPol': function(event) {\n      return Session.set('selPol', parseInt(event.target.id));\n    },\n    'click #rmPasien': function() {\n      var dialog;\n      dialog = {\n        title: 'Hapus Pasien',\n        message: 'Apakah yakin untuk menghapus pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          Meteor.call('rmPasien', currentPar('no_mr'));\n          return Router.go('/' + currentRoute());\n        }\n      });\n    }\n  });\n  Template[\"import\"].events({\n    'change :file': function(event, template) {\n      return Papa.parse(event.target.files[0], {\n        header: true,\n        step: function(result) {\n          var data, modifier, selector;\n          data = result.data[0];\n          if (currentRoute() === 'regis') {\n            selector = {\n              no_mr: parseInt(data.no_mr)\n            };\n            modifier = {\n              regis: {\n                nama_lengkap: _.startCase(data.nama_lengkap),\n                alamat: _.startCase(data.alamat),\n                agama: parseInt(data.agama),\n                ayah: _.startCase(data.ayah),\n                nikah: parseInt(data.nikah),\n                pekerjaan: parseInt(data.pekerjaan),\n                pendidikan: parseInt(data.pendidikan),\n                tgl_lahir: new Date(data.tgl_lahir),\n                tmpt_kelahiran: _.startCase(data.tmpt_kelahiran)\n              }\n            };\n            return Meteor.call('import', 'pasien', selector, modifier);\n          } else if (currentRoute() === 'manajemen') {\n            if (data.tipe) {\n              selector = {\n                nama: data.nama\n              };\n              modifier = {\n                tipe: parseInt(data.tipe),\n                poli: parseInt(data.poli),\n                active: true\n              };\n              return Meteor.call('import', 'dokter', selector, modifier);\n            } else if (data.harga) {\n              selector = {\n                nama: _.snakeCase(data.nama)\n              };\n              modifier = {\n                harga: parseInt(data.harga),\n                jenis: _.snakeCase(data.jenis),\n                active: true\n              };\n              data.grup && (modifier.grup = _.startCase(data.grup));\n              return Meteor.call('import', 'tarif', selector, modifier);\n            } else if (data.password) {\n              Meteor.call('newUser', data);\n              return Meteor.call('addRole', data.username, [data.role], data.group);\n            }\n          } else if (currentRoute() === 'farmasi') {\n            selector = {\n              nama: data.nama\n            };\n            modifier = {\n              jenis: parseInt(data.jenis),\n              idbarang: randomId(),\n              batch: [\n                {\n                  idbatch: randomId(),\n                  anggaran: data.anggaran,\n                  beli: parseInt(data.beli),\n                  diapotik: parseInt(data.diapotik),\n                  digudang: parseInt(data.digudang),\n                  jenis: parseInt(data.jenis),\n                  jual: parseInt(data.jual),\n                  kadaluarsa: new Date(data.kadaluarsa),\n                  masuk: new Date(data.masuk),\n                  merek: data.merek || '',\n                  nobatch: data.nobatch,\n                  pengadaan: parseInt(data.pengadaan),\n                  satuan: parseInt(data.satuan),\n                  suplier: data.suplier\n                }\n              ]\n            };\n            return data.nama && Meteor.call('import', 'gudang', selector, modifier, 'batch');\n          }\n        }\n      });\n    }\n  });\n  Template.gudang.helpers({\n    schemagudang: function() {\n      return new SimpleSchema(schema.gudang);\n    },\n    formType: function() {\n      if (currentPar('idbarang')) {\n        return 'update-pushArray';\n      } else {\n        return 'insert';\n      }\n    },\n    gudangs: function() {\n      var byBatch, byName, selector, sub;\n      if (currentPar('idbarang')) {\n        selector = {\n          idbarang: currentPar('idbarang')\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        if (sub.ready()) {\n          return coll.gudang.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          nama: {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byBatch = {\n          idbatch: search()\n        };\n        selector = {\n          $or: [byName, byBatch]\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        return sub.ready() && coll.gudang.find().fetch();\n      } else {\n        sub = Meteor.subscribe('coll', 'gudang', {}, {});\n        return sub.ready() && coll.gudang.find().fetch();\n      }\n    }\n  });\n  Template.gudang.events({\n    'click #showForm': function() {\n      return Session.set('showForm', !Session.get('showForm'));\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.idbarang);\n    },\n    'dblclick #transfer': function() {\n      var data;\n      data = this;\n      if (roles().farmasi) {\n        return MaterializeModal.prompt({\n          message: 'Transfer Gudang > Apotek',\n          callback: function(err, res) {\n            if (res.submit) {\n              return Meteor.call('transfer', currentPar('idbarang'), data.idbatch, parseInt(res.value));\n            }\n          }\n        });\n      }\n    },\n    'click #rmBarang': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Hapus Jenis Obat',\n        message: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmBarang', self.idbarang);\n        }\n      });\n    }\n  });\n  Template.manajemen.onRendered(function() {\n    return $('select#export').material_select();\n  });\n  Template.manajemen.helpers({\n    users: function() {\n      return Meteor.users.find().fetch();\n    },\n    onUser: function() {\n      return Session.get('onUser');\n    },\n    selRoles: function() {\n      return ['petugas', 'admin'];\n    },\n    klinik: function() {\n      return selects.klinik;\n    },\n    schemadokter: function() {\n      return new SimpleSchema(schema.dokter);\n    },\n    schematarif: function() {\n      return new SimpleSchema(schema.tarif);\n    },\n    dokters: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.dokter.find(selector, options).fetch();\n    },\n    tarifs: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.tarif.find(selector, options).fetch();\n    }\n  });\n  Template.manajemen.events({\n    'submit #userForm': function(event) {\n      var doc, group, onUser, poli, repeat, role, theRole;\n      event.preventDefault();\n      onUser = Session.get('onUser');\n      if (!onUser) {\n        doc = {\n          username: event.target.children.username.value,\n          password: event.target.children.password.value\n        };\n        repeat = event.target.children.repeat.value;\n        if (doc.password === repeat) {\n          Meteor.call('newUser', doc);\n          return $('input').val('');\n        } else {\n          return Materialize.toast('Password tidak mirip', 3000);\n        }\n      } else {\n        role = $('input[name=\"role\"]:checked', event.target)[0].id;\n        group = $('input[name=\"group\"]:checked', event.target)[0].id;\n        poli = $('input[name=\"poli\"]:checked', event.target)[0];\n        theRole = !poli ? role : _.snakeCase(poli.id);\n        return Meteor.call('addRole', onUser._id, [theRole], group);\n      }\n    },\n    'dblclick #row': function() {\n      return Session.set('onUser', this);\n    },\n    'dblclick #reset': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Reset Peranan',\n        message: 'Anda yakin untuk menghapus semua perannya?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRole', self._id);\n        }\n      });\n    },\n    'click #close': function() {\n      return sessNull();\n    },\n    'click #export': function() {\n      var select;\n      select = $('select#export').val();\n      return Meteor.call('export', select, function(err, content) {\n        var blob;\n        if (content) {\n          blob = new Blob([content], {\n            type: 'text/plain;charset=utf-8'\n          });\n          return saveAs(blob, select + '.csv');\n        }\n      });\n    },\n    'dblclick #baris': function(event) {\n      var dialog, jenis, self;\n      jenis = event.currentTarget.className;\n      dialog = {\n        title: 'Hapus ' + _.startCase(jenis),\n        message: 'Yakin untuk menghapus ' + jenis + ' dari daftar?'\n      };\n      self = this;\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('inactive', jenis, self._id);\n        }\n      });\n    }\n  });\n  Template.login.onRendered(function() {\n    return $('.slider').slider();\n  });\n  Template.login.events({\n    'submit form': function(event) {\n      var password, username;\n      event.preventDefault();\n      username = event.target.children.username.value;\n      password = event.target.children.password.value;\n      return Meteor.loginWithPassword(username, password, function(err) {\n        if (err) {\n          return Materialize.toast('Salah username / password', 3000);\n        } else {\n          return Router.go('/' + _.keys(roles())[0]);\n        }\n      });\n    }\n  });\n  Template.pagination.events({\n    'click #next': function() {\n      return Session.set('page', 1 + page());\n    },\n    'click #prev': function() {\n      return Session.set('page', -1 + page());\n    },\n    'click #num': function(event) {\n      return Session.set('page', parseInt(event.target.innerText));\n    }\n  });\n  Template.report.helpers({\n    datas: function() {\n      return Session.get('laporan');\n    }\n  });\n  Template.report.events({\n    'click .datepicker': function(event, template) {\n      var type;\n      type = event.target.attributes.date.nodeValue;\n      return $('#' + type).pickadate({\n        onSet: function(data) {\n          var end, start;\n          Session.set(type + 'Date', data.select);\n          start = Session.get('startDate');\n          end = Session.get('endDate');\n          if (start && end) {\n            return Meteor.call('report', template.data.jenis, start, end, function(err, res) {\n              return res && Session.set('laporan', res);\n            });\n          }\n        }\n      });\n    },\n    'click #export': function(event, template) {\n      var blob, content;\n      content = exportcsv.exportToCSV(Session.get('laporan').csv, true, ';');\n      blob = new Blob([content], {\n        type: 'text/plain;charset=utf-8'\n      });\n      return saveAs(blob, template.data.jenis + '.csv');\n    }\n  });\n}\n","if Meteor.isServer\n\n\tMeteor.startup ->\n\t\tcoll.pasien._ensureIndex 'regis.nama_lengkap': 1\n\n\tMeteor.publish 'coll', (name, selector, options) ->\n\t\tcoll[name].find selector, options\n\n\tMeteor.publish 'users', ->\n\t\tMeteor.users.find {}\n\n\tMeteor.methods\n\t\timport: (name, selector, modifier, arrName) ->\n\t\t\tfind = coll[name].findOne selector\n\t\t\tunless find\n\t\t\t\tcoll[name].upsert selector, $set: modifier\n\t\t\telse if arrName\n\t\t\t\tsel = _id: find._id\n\t\t\t\tobj = {}; obj[arrName] = modifier[arrName][0]\n\t\t\t\tcoll[name].update sel, $push: obj\n\n\t\texport: (jenis) ->\n\t\t\tif jenis is 'regis'\n\t\t\t\tarr = _.map coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\telse if jenis is 'jalan'\n\t\t\t\tfind = (type, value) ->\n\t\t\t\t\tdoc = _.find selects[type], (i) -> i.value is value\n\t\t\t\t\tdoc.label\n\t\t\t\tarr = _.flatMap coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tif i.rawat then _.map i.rawat, (j) ->\n\t\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\t\t\t\tidbayar: j.idbayar\n\t\t\t\t\t\tcara_bayar: find 'cara_bayar', j.cara_bayar\n\t\t\t\t\t\tklinik: find 'klinik', j.klinik\n\t\t\texportcsv.exportToCSV arr, true, ';'\n\n\t\tbillCard: (no_mr, state) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'regis.billCard': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbillRegis: (no_mr, idbayar, state) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'rawat.$.billRegis': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbayar: (no_mr, idbayar) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = 'rawat.$.status_bayar': true\n\t\t\tcoll.pasien.update selector, $set: modifier\n\n\t\trequest: (no_mr, idbayar, jenis, idjenis, hasil) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tfindPasien = coll.pasien.findOne selector\n\t\t\tfor i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i[jenis] then for j in i[jenis]\n\t\t\t\t\tif j['id'+jenis] is idjenis then j.hasil = hasil\n\t\t\tmodifier = rawat: findPasien.rawat\n\t\t\tcoll.pasien.update selector, $set: modifier\n\t\t\tgive = {}\n\t\t\tif jenis is 'obat' then for i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i.obat then for j in i.obat\n\t\t\t\t\tif j.idobat is idjenis\n\t\t\t\t\t\tfindStock = coll.gudang.findOne _id: j.nama\n\t\t\t\t\t\tfor k in [1..j.jumlah]\n\t\t\t\t\t\t\tfiltered = _.filter findStock.batch, (l) -> l.diapotik > 0\n\t\t\t\t\t\t\tsortedIn = _.sortBy filtered, (l) -> new Date(l.masuk).getTime()\n\t\t\t\t\t\t\tsortedEd = _.sortBy sortedIn, (l) -> new Date(l.kadaluarsa).getTime()\n\t\t\t\t\t\t\tsortedEd[0].diapotik -= 1\n\t\t\t\t\t\t\tkey = findStock.nama +';'+ sortedEd[0].nobatch\n\t\t\t\t\t\t\tgive[key] or= 0; give[key] += 1\n\t\t\t\t\t\tselector = _id: findStock._id\n\t\t\t\t\t\tmodifier = $set: batch: findStock.batch\n\t\t\t\t\t\tcoll.gudang.update selector, modifier\n\t\t\tgive if jenis is 'obat'\n\n\t\ttransfer: (idbarang, idbatch, amount) ->\n\t\t\tselector = idbarang: idbarang, 'batch.idbatch': idbatch\n\t\t\tmodifier = $inc: 'batch.$.digudang': -amount, 'batch.$.diapotik': amount\n\t\t\tcoll.gudang.update selector, modifier\n\n\t\trmPasien: (no_mr) ->\n\t\t\tcoll.pasien.remove no_mr: parseInt no_mr\n\n\t\trmRawat: (no_mr, idbayar) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $pull: rawat: idbayar: idbayar\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\taddRole: (id, roles, group, poli) ->\n\t\t\trole = poli or roles\n\t\t\tRoles.addUsersToRoles id, role, group\n\n\t\trmRole: (id) ->\n\t\t\tselector = _id: id\n\t\t\tmodifier = $set: roles: {}\n\t\t\tMeteor.users.update selector, modifier\n\n\t\tnewUser: (doc) ->\n\t\t\tfind = Accounts.findUserByUsername doc.username\n\t\t\tif find\n\t\t\t\tAccounts.setUsername find._id, doc.username\n\t\t\t\tAccounts.setPassword find._id, doc.password\n\t\t\telse\n\t\t\t\tAccounts.createUser doc\n\n\t\trmBarang: (idbarang) ->\n\t\t\tcoll.gudang.remove idbarang: idbarang\n\n\t\tinactive: (name, id) ->\n\t\t\tsel = _id: id; mod = $set: active: false\n\t\t\tcoll[name].update sel, mod\n\n\t\tpindah: (no_mr) ->\n\t\t\tfind = coll.pasien.findOne 'no_mr': parseInt no_mr\n\t\t\t[..., last] = find.rawat\n\t\t\tif last.pindah\n\t\t\t\tselector = _id: find._id\n\t\t\t\tmodifier = $push: rawat:\n\t\t\t\t\tidbayar: randomId()\n\t\t\t\t\ttanggal: new Date()\n\t\t\t\t\tcara_bayar: last.cara_bayar\n\t\t\t\t\tklinik: last.pindah\n\t\t\t\t\tbillRegis: true\n\t\t\t\t\ttotal: semua: 0\n\t\t\t\tcoll.pasien.update selector, modifier\n\n\t\treport: (jenis, start, end) ->\n\t\t\tfilter = (arr) -> _.filter arr, (i) ->\n\t\t\t\tnew Date(start) < new Date(i.tanggal) < new Date(end)\n\t\t\tdocs = _.flatMap coll.pasien.find().fetch(), (i) -> _.map filter(i.rawat), (j) ->\n\t\t\t\tobj =\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: _.startCase i.regis.nama_lengkap\n\t\t\t\t\tno_bill: j.nobill\n\t\t\t\t\tcara_bayar: look('cara_bayar', j.cara_bayar).label\n\t\t\t\t\trujukan: if j.rujukan then look('rujukan', j.rujukan).label else ''\n\t\t\t\t\tklinik: look('klinik', j.klinik).label\n\t\t\t\t\tdiagnosa: j.diagnosa or '-'\n\t\t\t\t\ttindakan: _.flatMap ['tindakan', 'labor', 'radio'], (k) ->\n\t\t\t\t\t\tsaring = _.filter j[k], (l) -> l\n\t\t\t\t\t\t_.map saring, (l) -> '/' + _.startCase look2('tarif', l.nama).nama\n\t\t\t\t\tharga: 'Rp ' + j.total.semua\n\t\t\t\t\tpetugas: Meteor.users.findOne(_id: j.petugas).username\n\t\t\t\t\tkeluar: if j.keluar then look('keluar', j.keluar).label else '-'\n\t\t\t\t\tbaru_lama: 'L'\n\t\t\t\tif jenis is 'pendaftaran'\n\t\t\t\t\t_.pick obj, ['no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']\n\t\t\t\telse if jenis is 'pembayaran'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'tindakan', 'harga', 'petugas']\n\t\t\t\telse if jenis is 'rawat_jalan'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']\n\t\t\theaders: _.map _.keys(docs[0]), (i) -> _.startCase i\n\t\t\trows: _.map docs, (i) -> _.values i\n\t\t\tcsv: docs\n","if (Meteor.isServer) {\n  Meteor.startup(function() {\n    return coll.pasien._ensureIndex({\n      'regis.nama_lengkap': 1\n    });\n  });\n  Meteor.publish('coll', function(name, selector, options) {\n    return coll[name].find(selector, options);\n  });\n  Meteor.publish('users', function() {\n    return Meteor.users.find({});\n  });\n  Meteor.methods({\n    \"import\": function(name, selector, modifier, arrName) {\n      var find, obj, sel;\n      find = coll[name].findOne(selector);\n      if (!find) {\n        return coll[name].upsert(selector, {\n          $set: modifier\n        });\n      } else if (arrName) {\n        sel = {\n          _id: find._id\n        };\n        obj = {};\n        obj[arrName] = modifier[arrName][0];\n        return coll[name].update(sel, {\n          $push: obj\n        });\n      }\n    },\n    \"export\": function(jenis) {\n      var arr, find;\n      if (jenis === 'regis') {\n        arr = _.map(coll.pasien.find().fetch(), function(i) {\n          return {\n            no_mr: i.no_mr,\n            nama_lengkap: i.regis.nama_lengkap\n          };\n        });\n      } else if (jenis === 'jalan') {\n        find = function(type, value) {\n          var doc;\n          doc = _.find(selects[type], function(i) {\n            return i.value === value;\n          });\n          return doc.label;\n        };\n        arr = _.flatMap(coll.pasien.find().fetch(), function(i) {\n          if (i.rawat) {\n            return _.map(i.rawat, function(j) {\n              return {\n                no_mr: i.no_mr,\n                nama_lengkap: i.regis.nama_lengkap,\n                idbayar: j.idbayar,\n                cara_bayar: find('cara_bayar', j.cara_bayar),\n                klinik: find('klinik', j.klinik)\n              };\n            });\n          }\n        });\n      }\n      return exportcsv.exportToCSV(arr, true, ';');\n    },\n    billCard: function(no_mr, state) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'regis.billCard': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    billRegis: function(no_mr, idbayar, state) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'rawat.$.billRegis': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    bayar: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        'rawat.$.status_bayar': true\n      };\n      return coll.pasien.update(selector, {\n        $set: modifier\n      });\n    },\n    request: function(no_mr, idbayar, jenis, idjenis, hasil) {\n      var filtered, findPasien, findStock, give, i, j, k, key, len, len1, len2, len3, m, modifier, n, o, p, q, ref, ref1, ref2, ref3, ref4, selector, sortedEd, sortedIn;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      findPasien = coll.pasien.findOne(selector);\n      ref = findPasien.rawat;\n      for (m = 0, len = ref.length; m < len; m++) {\n        i = ref[m];\n        if (i.idbayar === idbayar) {\n          if (i[jenis]) {\n            ref1 = i[jenis];\n            for (n = 0, len1 = ref1.length; n < len1; n++) {\n              j = ref1[n];\n              if (j['id' + jenis] === idjenis) {\n                j.hasil = hasil;\n              }\n            }\n          }\n        }\n      }\n      modifier = {\n        rawat: findPasien.rawat\n      };\n      coll.pasien.update(selector, {\n        $set: modifier\n      });\n      give = {};\n      if (jenis === 'obat') {\n        ref2 = findPasien.rawat;\n        for (o = 0, len2 = ref2.length; o < len2; o++) {\n          i = ref2[o];\n          if (i.idbayar === idbayar) {\n            if (i.obat) {\n              ref3 = i.obat;\n              for (p = 0, len3 = ref3.length; p < len3; p++) {\n                j = ref3[p];\n                if (j.idobat === idjenis) {\n                  findStock = coll.gudang.findOne({\n                    _id: j.nama\n                  });\n                  for (k = q = 1, ref4 = j.jumlah; 1 <= ref4 ? q <= ref4 : q >= ref4; k = 1 <= ref4 ? ++q : --q) {\n                    filtered = _.filter(findStock.batch, function(l) {\n                      return l.diapotik > 0;\n                    });\n                    sortedIn = _.sortBy(filtered, function(l) {\n                      return new Date(l.masuk).getTime();\n                    });\n                    sortedEd = _.sortBy(sortedIn, function(l) {\n                      return new Date(l.kadaluarsa).getTime();\n                    });\n                    sortedEd[0].diapotik -= 1;\n                    key = findStock.nama(+';' + sortedEd[0].nobatch);\n                    give[key] || (give[key] = 0);\n                    give[key] += 1;\n                  }\n                  selector = {\n                    _id: findStock._id\n                  };\n                  modifier = {\n                    $set: {\n                      batch: findStock.batch\n                    }\n                  };\n                  coll.gudang.update(selector, modifier);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (jenis === 'obat') {\n        return give;\n      }\n    },\n    transfer: function(idbarang, idbatch, amount) {\n      var modifier, selector;\n      selector = {\n        idbarang: idbarang,\n        'batch.idbatch': idbatch\n      };\n      modifier = {\n        $inc: {\n          'batch.$.digudang': -amount,\n          'batch.$.diapotik': amount\n        }\n      };\n      return coll.gudang.update(selector, modifier);\n    },\n    rmPasien: function(no_mr) {\n      return coll.pasien.remove({\n        no_mr: parseInt(no_mr)\n      });\n    },\n    rmRawat: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $pull: {\n          rawat: {\n            idbayar: idbayar\n          }\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    addRole: function(id, roles, group, poli) {\n      var role;\n      role = poli || roles;\n      return Roles.addUsersToRoles(id, role, group);\n    },\n    rmRole: function(id) {\n      var modifier, selector;\n      selector = {\n        _id: id\n      };\n      modifier = {\n        $set: {\n          roles: {}\n        }\n      };\n      return Meteor.users.update(selector, modifier);\n    },\n    newUser: function(doc) {\n      var find;\n      find = Accounts.findUserByUsername(doc.username);\n      if (find) {\n        Accounts.setUsername(find._id, doc.username);\n        return Accounts.setPassword(find._id, doc.password);\n      } else {\n        return Accounts.createUser(doc);\n      }\n    },\n    rmBarang: function(idbarang) {\n      return coll.gudang.remove({\n        idbarang: idbarang\n      });\n    },\n    inactive: function(name, id) {\n      var mod, sel;\n      sel = {\n        _id: id\n      };\n      mod = {\n        $set: {\n          active: false\n        }\n      };\n      return coll[name].update(sel, mod);\n    },\n    pindah: function(no_mr) {\n      var find, last, modifier, ref, selector;\n      find = coll.pasien.findOne({\n        'no_mr': parseInt(no_mr)\n      });\n      ref = find.rawat, last = ref[ref.length - 1];\n      if (last.pindah) {\n        selector = {\n          _id: find._id\n        };\n        modifier = {\n          $push: {\n            rawat: {\n              idbayar: randomId(),\n              tanggal: new Date(),\n              cara_bayar: last.cara_bayar,\n              klinik: last.pindah,\n              billRegis: true,\n              total: {\n                semua: 0\n              }\n            }\n          }\n        };\n        return coll.pasien.update(selector, modifier);\n      }\n    },\n    report: function(jenis, start, end) {\n      var docs, filter;\n      filter = function(arr) {\n        return _.filter(arr, function(i) {\n          var ref;\n          return (new Date(start) < (ref = new Date(i.tanggal)) && ref < new Date(end));\n        });\n      };\n      docs = _.flatMap(coll.pasien.find().fetch(), function(i) {\n        return _.map(filter(i.rawat), function(j) {\n          var obj;\n          obj = {\n            no_mr: i.no_mr,\n            nama_lengkap: _.startCase(i.regis.nama_lengkap),\n            no_bill: j.nobill,\n            cara_bayar: look('cara_bayar', j.cara_bayar).label,\n            rujukan: j.rujukan ? look('rujukan', j.rujukan).label : '',\n            klinik: look('klinik', j.klinik).label,\n            diagnosa: j.diagnosa || '-',\n            tindakan: _.flatMap(['tindakan', 'labor', 'radio'], function(k) {\n              var saring;\n              saring = _.filter(j[k], function(l) {\n                return l;\n              });\n              return _.map(saring, function(l) {\n                return '/' + _.startCase(look2('tarif', l.nama).nama);\n              });\n            }),\n            harga: 'Rp ' + j.total.semua,\n            petugas: Meteor.users.findOne({\n              _id: j.petugas\n            }).username,\n            keluar: j.keluar ? look('keluar', j.keluar).label : '-',\n            baru_lama: 'L'\n          };\n          if (jenis === 'pendaftaran') {\n            return _.pick(obj, ['no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']);\n          } else if (jenis === 'pembayaran') {\n            return _.pick(obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'tindakan', 'harga', 'petugas']);\n          } else if (jenis === 'rawat_jalan') {\n            return _.pick(obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']);\n          }\n        });\n      });\n      return {\n        headers: _.map(_.keys(docs[0]), function(i) {\n          return _.startCase(i);\n        }),\n        rows: _.map(docs, function(i) {\n          return _.values(i);\n        }),\n        csv: docs\n      };\n    }\n  });\n}\n"]}
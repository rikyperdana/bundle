{"version":3,"sources":["meteor://ðŸ’»app/folder/parent/funcs.coffee","meteor://ðŸ’»app/folder/parent/funcs.coffee.js","meteor://ðŸ’»app/folder/hooks.coffee","meteor://ðŸ’»app/folder/hooks.coffee.js","meteor://ðŸ’»app/folder/modules.coffee","meteor://ðŸ’»app/folder/pdf.coffee","meteor://ðŸ’»app/folder/pdf.coffee.js","meteor://ðŸ’»app/folder/rights.coffee","meteor://ðŸ’»app/folder/rights.coffee.js","meteor://ðŸ’»app/folder/selects.coffee","meteor://ðŸ’»app/folder/selects.coffee.js","meteor://ðŸ’»app/both.coffee","meteor://ðŸ’»app/both.coffee.js","meteor://ðŸ’»app/client.coffee","meteor://ðŸ’»app/client.coffee.js","meteor://ðŸ’»app/server.coffee","meteor://ðŸ’»app/server.coffee.js"],"names":["_","lodash","coll","schema","look","list","val","find","selects","i","value","look2","id","fetch","_id","randomId","Math","random","toString","slice","zeros","num","size","repeat","monthDiff","date","diff","getTime","Date","round","Meteor","isClient","AutoForm","setDefaultTemplate","currentRoute","Router","current","route","getName","currentPar","param","params","search","Session","get","formDoc","limit","page","roles","user","userGroup","name","userRole","tag","userName","users","findOne","username","sessNull","map","tail","keys","set","modForm","doc","idbayar","begin","l","len","ref","stop","tanggal","jenis","total","tindakan","labor","radio","obat","j","results","length","tarif","k","nama","harga","push","idobat","gudang","subtotal","jumlah","semua","reduce","values","acc","anamesa_perawat","anamesa_dokter","billRegis","cara_bayar","status_bayar","moment","spm","petugas","userId","nobill","parseInt","now","substr","addHooks","before","call","result","after","insert","err","res","formToDoc","no_mr","Materialize","toast","$","idbarang","batch","idbatch","assign","idamprah","peminta","ruangan","modules","full","icon","color","makePdf","card","pdf","pasien","pdfMake","createPdf","content","regis","nama_lengkap","pageSize","pageMargins","pageOrientation","download","consent","text","alignment","columns","tmpt_lahir","tgl_lahir","format","concat","label","table","body","startCase","payRawat","len1","m","ref1","ref2","ref3","rows","widths","kelamin","klinik","numeral","payRegCard","amount","words","rekap","strings","rights","group","rawat","pekerjaan","agama","pendidikan","darah","nikah","bentuk","tipe_dokter","rujukan","keluar","barang","satuan","anggaran","alias","x","karcis","selector","sub","subscribe","jalan","ready","dokter","snakeCase","poli","filter","arr","configure","layoutTemplate","loadingTemplate","action","render","type","Number","max","Object","optional","autoform","options","String","pickadateOptions","selectYears","selectMonths","autoValue","Boolean","fisik","tekanan_darah","nadi","suhu","decimal","pernapasan","berat","tinggi","lila","idtindakan","idlabor","hasil","idradio","puyer","aturan","Array","afFieldInput","SimpleSchema","inap","igd","farmasi","kandungan","amprah","logistik","tipe","grup","obj","active","Collection","allow","zipObject","waitOn","fields","globalHelpers","indexOf","item","onBeforeAction","next","onAfterAction","uniq","flatMap","go","JSON","stringify","reverse","sel","sort","sortBy","a","b","option","field","Template","registerHelper","apply","events","event","term","key","target","layout","onRendered","menu","helpers","menus","initial","navTitle","today","logout","heads","bayar","previewDokter","previewLabor","previewRadio","previewObat","formType","umur","showButton","showButtonText","preview","omitFields","split","roleFilter","userPoli","insurance","selPol","pasiens","byName","byNoMR","elem","kliniks","past","selSub","$options","$regex","$or","getDate","$elemMatch","$in","$gt","c","$ne","$exists","later","trigger","prepend","attr","checked","disabled","setTimeout","dialog","title","message","Confirmation","ok","nodes","attributes","nodeValue","MaterializeModal","prompt","callback","submit","flat","flatten","toPairs","headers","modal","self","template","Papa","parse","files","header","step","data","modifier","alamat","ayah","tmpt_kelahiran","password","role","beli","diapotik","digudang","jual","kadaluarsa","masuk","merek","nobatch","pengadaan","suplier","material_select","select","blob","Blob","saveAs","warning","gudangs","aggr","byBatch","reduced","sum","n","akumulasi","nearEds","addAmprah","schemaAmprah","returnable","is","diserah","manajemen","onUser","selRoles","schemadokter","schematarif","dokters","skip","tarifs","theRole","preventDefault","children","currentTarget","className","login","slider","loginWithPassword","pagination","pagins","end","innerText","report","datas","pickadate","onSet","start","exportcsv","exportToCSV","csv","isServer","startup","_ensureIndex","publish","methods","arrName","upsert","$set","update","$push","head","billCard","state","request","idjenis","filtered","findPasien","findStock","give","len2","len3","o","p","q","ref4","sortedEd","sortedIn","transfer","$inc","rmPasien","remove","rmRawat","$pull","addRole","Roles","addUsersToRoles","rmRole","newUser","Accounts","findUserByUsername","setUsername","setPassword","createUser","rmBarang","rmBatch","terbuang","without","inactive","mod","pindah","last","docs","no_bill","diagnosa","saring","baru_lama","pick","patientExist","diffed","source","returBatch","diretur","penyerah"],"mappings":";;;;;;;;;AAAA,KAACA,CAAD,GAAKC,MAAL;AACA,KAACC,IAAD,GAAQ,EAAR;AAAY,KAACC,MAAD,GAAU,EAAV;;AACZ,KAACC,IAAD,GAAQ,UAACC,IAAD,EAAOC,GAAP;ACKN,SDLqBN,EAAEO,IAAF,CAAOC,QAAQH,IAAR,CAAP,EAAsB,UAACI,CAAD;ACMzC,WDNgDA,EAAEC,KAAF,KAAWJ,GCM3D;ADNmB,ICKrB;ADLM,CAAR;;AACA,KAACK,KAAD,GAAS,UAACN,IAAD,EAAOO,EAAP;ACUP,SDVqBZ,EAAEO,IAAF,CAAOL,KAAKG,IAAL,EAAWE,IAAX,GAAkBM,KAAlB,EAAP,EAAkC,UAACJ,CAAD;ACWrD,WDX4DA,EAAEK,GAAF,KAASF,ECWrE;ADXmB,ICUrB;ADVO,CAAT;;AACA,KAACG,QAAD,GAAY;ACeV,SDfaC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CCeb;ADfU,CAAZ;;AACA,KAACC,KAAD,GAAS,UAACC,GAAD;AACR,MAAAC,IAAA;AAAAA,SAAOtB,EAAEsB,IAAF,CAAOtB,EAAEkB,QAAF,CAAWG,GAAX,CAAP,CAAP;ACmBC,SDlBD,IAAIE,MAAJ,CAAW,IAAED,IAAb,IAAqBtB,EAAEkB,QAAF,CAAWG,GAAX,CCkBpB;ADpBO,CAAT;;AAGA,KAACG,SAAD,GAAa,UAACC,IAAD;AACZ,MAAAC,IAAA;AAAAA,SAAOD,KAAKE,OAAL,KAAkB,IAAIC,IAAJ,EAAD,CAAaD,OAAb,EAAxB;AACAD,UAAQ,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,CAAtB,GAA0B,CAAlC;ACsBC,SDrBDV,KAAKa,KAAL,CAAWH,IAAX,CCqBC;ADxBW,CAAb;;AAKA,IAAGI,OAAOC,QAAV;AAGCC,WAASC,kBAAT,CAA4B,aAA5B;;AACA,OAACC,YAAD,GAAgB;ACqBb,WDrBgBC,OAAOC,OAAP,GAAiBC,KAAjB,CAAuBC,OAAvB,ECqBhB;ADrBa,GAAhB;;AACA,OAACC,UAAD,GAAc,UAACC,KAAD;ACuBX,WDvBsBL,OAAOC,OAAP,GAAiBK,MAAjB,CAAwBD,KAAxB,CCuBtB;ADvBW,GAAd;;AACA,OAACE,MAAD,GAAU;ACyBP,WDzBUC,QAAQC,GAAR,CAAY,QAAZ,CCyBV;ADzBO,GAAV;;AACA,OAACC,OAAD,GAAW;AC2BR,WD3BWF,QAAQC,GAAR,CAAY,SAAZ,CC2BX;AD3BQ,GAAX;;AACA,OAACE,KAAD,GAAS;AC6BN,WD7BSH,QAAQC,GAAR,CAAY,OAAZ,CC6BT;AD7BM,GAAT;;AACA,OAACG,IAAD,GAAQ;AC+BL,WD/BQJ,QAAQC,GAAR,CAAY,MAAZ,CC+BR;AD/BK,GAAR;;AACA,OAACI,KAAD,GAAS;ACiCN,WDjCSlB,OAAOmB,IAAP,GAAcD,KCiCvB;ADjCM,GAAT;;AACA,OAACE,SAAD,GAAa,UAACC,IAAD;ACmCV,WDnCoBH,QAAQG,IAAR,CCmCpB;ADnCU,GAAb;;AACA,OAACC,QAAD,GAAY,UAACD,IAAD;ACqCT,WDrCmBH,QAAQd,cAAR,EAAwB,CAAxB,MAA8BiB,ICqCjD;ADrCS,GAAZ;;AACA,OAACE,GAAD,GAAO,UAACA,GAAD,EAAM/C,GAAN;ACuCJ,WDvCkB,MAAI+C,GAAJ,GAAQ,GAAR,GAAY/C,GAAZ,GAAgB,IAAhB,GAAqB+C,GAArB,GAAyB,GCuC3C;ADvCI,GAAP;;AACA,OAACC,QAAD,GAAY,UAAC1C,EAAD;ACyCT,WDzCiBkB,OAAOyB,KAAP,CAAaC,OAAb,CAAqB;AAAA1C,WAAKF;AAAL,KAArB,EAA8B6C,QCyC/C;ADzCS,GAAZ;;AACA,OAACC,QAAD,GAAY;AC6CT,WD7CY1D,EAAE2D,GAAF,CAAO3D,EAAE4D,IAAF,CAAO5D,EAAE6D,IAAF,CAAOlB,QAAQkB,IAAf,CAAP,CAAP,EAAoC,UAACpD,CAAD;AC8C9C,aD7CJkC,QAAQmB,GAAR,CAAYrD,CAAZ,EAAe,IAAf,CC6CI;AD9CU,MC6CZ;AD7CS,GAAZ;ACiDA,0H;;;;;;;;;;;;AC7ED,IAAGqB,OAAOC,QAAV;AAEC,OAACgC,OAAD,GAAW,UAACC,GAAD,EAAMC,OAAN;AAAkB,QAAAC,KAAA,EAAA3D,IAAA,EAAAE,CAAA,EAAA0D,CAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA;;AAAA,QAAGpC,mBAAkB,OAArB;AAC5B8B,UAAIO,OAAJ,GAAc,IAAI3C,IAAJ,EAAd;AACAoC,UAAIC,OAAJ,GAAiBA,UAAaA,OAAb,GAA0BlD,UAA3C;AACAiD,UAAIQ,KAAJ,GAAYtC,cAAZ;AACA8B,UAAIS,KAAJ,GAAY;AAAAC,kBAAU,CAAV;AAAaC,eAAO,CAApB;AAAuBC,eAAO,CAA9B;AAAiCC,cAAM;AAAvC,OAAZ;;AACA7E,QAAE2D,GAAF,CAAM,CAAC,UAAD,EAAa,OAAb,EAAsB,OAAtB,CAAN,EAAsC,UAAClD,CAAD;AACrC,YAAAF,IAAA,EAAAuE,CAAA,EAAAX,CAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAU,OAAA;;AAAA,YAAGf,IAAIvD,CAAJ,CAAH;AAAe4D,gBAAAL,IAAAvD,CAAA;AAAAsE,oBAAA;;ACUR,eDVQZ,IAAA,GAAAC,MAAAC,IAAAW,MCUR,EDVQb,IAAAC,GCUR,EDVQD,GCUR,EDVQ;ACWNW,gBAAIT,IAAIF,CAAJ,CAAJ;ADVRW,cAAE,OAAKrE,CAAP,IAAYM,UAAZ;AACAR,mBAAOP,EAAEO,IAAF,CAAOL,KAAK+E,KAAL,CAAW1E,IAAX,GAAkBM,KAAlB,EAAP,EAAkC,UAACqE,CAAD;ACY/B,qBDZsCA,EAAEpE,GAAF,KAASgE,EAAEK,ICYjD;ADZH,cAAP;AACAL,cAAEM,KAAF,GAAU7E,KAAK6E,KAAf;ACcQL,oBAAQM,IAAR,CDbRrB,IAAIS,KAAJ,CAAUhE,CAAV,KAAgBqE,EAAEM,KCaV;ADjBM;;ACmBR,iBAAOL,OAAP;AACD;ADrBP;;AAMAV,YAAAL,IAAAa,IAAA;;AAAA,WAAAV,IAAA,GAAAC,MAAAC,IAAAW,MAAA,EAAAb,IAAAC,GAAA,EAAAD,GAAA;ACmBM1D,YAAI4D,IAAIF,CAAJ,CAAJ;ADlBL1D,UAAE6E,MAAF,GAAWvE,UAAX;AACAR,eAAOP,EAAEO,IAAF,CAAOL,KAAKqF,MAAL,CAAYhF,IAAZ,GAAmBM,KAAnB,EAAP,EAAmC,UAACqE,CAAD;ACoBnC,iBDpB0CA,EAAEpE,GAAF,KAASL,EAAE0E,ICoBrD;ADpBA,UAAP;AACA1E,UAAE2E,KAAF,GAAU,CAAV;AACA3E,UAAE+E,QAAF,GAAa/E,EAAE2E,KAAF,GAAU3E,EAAEgF,MAAzB;AACAzB,YAAIS,KAAJ,CAAUI,IAAV,IAAkBpE,EAAE+E,QAApB;AALD;;AAMAxB,UAAIS,KAAJ,CAAUiB,KAAV,GAAkB1F,EAAE2F,MAAF,CAAS3F,EAAE4F,MAAF,CAAS5B,IAAIS,KAAb,CAAT,EAA8B,UAACoB,GAAD,EAAMvF,GAAN;ACuB1C,eDvBwDuF,MAAMvF,GCuB9D;ADvBY,QAAlB;;AACA,UAAwB0D,IAAI8B,eAAJ,IAAuB9B,IAAI+B,cAAnD;AAAA/B,YAAIgC,SAAJ,GAAgB,IAAhB;AC0BK;;ADzBL,UAAwBhC,IAAIS,KAAJ,CAAUiB,KAAV,GAAkB,CAAlB,IAAuB1B,IAAIiC,UAAJ,KAAoB,CAAnE;AAAAjC,YAAIgC,SAAJ,GAAgB,IAAhB;AC4BK;;AD3BL,UAA2BhC,IAAIS,KAAJ,CAAUiB,KAAV,GAAkB,CAAlB,IAAwB1B,IAAIiC,UAAJ,KAAoB,CAAvE;AAAAjC,YAAIkC,YAAJ,GAAmB,IAAnB;AC8BK;;AD7BL,UAAGlC,IAAIa,IAAJ,IAAa,MAAKb,IAAIS,KAAJ,CAAUiB,KAA/B;AACC1B,YAAIgC,SAAJ,GAAgB,IAAhB;AACAhC,YAAIkC,YAAJ,GAAmB,IAAnB;AC+BI;;AD9BLhC,cAAQvB,QAAQC,GAAR,CAAY,OAAZ,CAAR;AAA6B0B,aAAO6B,QAAP;AAC7BnC,UAAIoC,GAAJ,GAAU9B,KAAK5C,IAAL,CAAUwC,KAAV,EAAiB,SAAjB,CAAV;AACAF,UAAIqC,OAAJ,GAAcvE,OAAOwE,MAAP,EAAd;AACAtC,UAAIuC,MAAJ,GAAaC,SAASxG,EAAEkB,QAAF,CAAWU,KAAK6E,GAAL,EAAX,EAAuBC,MAAvB,CAA8B,CAA9B,EAAiC,EAAjC,CAAT,CAAb;ACiCI,aDhCJ1C,GCgCI;AACD;AD7DO,GAAX;;AA8BAhC,WAAS2E,QAAT,CAAkB,YAAlB,EACC;AAAAC,YACC;AAAA,0BAAoB,UAAC5C,GAAD;AACnB,YAAAnB,OAAA;AAAAA,kBAAUF,QAAQC,GAAR,CAAY,SAAZ,CAAV;;AACA,YAAGC,OAAH;AAAgBf,iBAAO+E,IAAP,CAAY,SAAZ,EAAuBtE,WAAW,OAAX,CAAvB,EAA4CM,QAAQoB,OAApD;ACoCX;;AACD,eDpCJ,KAAK6C,MAAL,CAAY/C,QAAQC,GAAR,CAAZ,CCoCI;ADvCL;AAAA,KADD;AAKA+C,WACC;AAAAC,cAAQ;ACuCH,eDvCMtD,UCuCN;ADvCL;AACA,0BAAoB,UAACuD,GAAD,EAAMC,GAAN;AACnBxD;;AACA,YAAGwD,GAAH;ACyCM,iBDzCMpF,OAAO+E,IAAP,CAAY,QAAZ,EAAsBtE,WAAW,OAAX,CAAtB,CCyCN;AACD;AD7CN;AAAA,KAND;AAUA4E,eAAW,UAACnD,GAAD;AACVrB,cAAQmB,GAAR,CAAY,SAAZ,EAAuBC,QAAQC,GAAR,CAAvB;;AACA,UAAG9B,mBAAkB,OAArB;AACCJ,eAAO+E,IAAP,CAAY,cAAZ,EAA4B7C,IAAIoD,KAAhC,EAAuC,UAACH,GAAD,EAAMC,GAAN;AAAc,cAAGA,GAAH;AACpDG,wBAAYC,KAAZ,CAAkB,sCAAlB,EAA0D,IAA1D;AC8CO,mBD7CPC,EAAE,qBAAF,EAAyBjH,GAAzB,CAA6B,EAA7B,CC6CO;AACD;ADhDP;ACkDG;;AACD,aDhDH0D,GCgDG;ADhEJ;AAAA,GADD;AAmBAhC,WAAS2E,QAAT,CAAkB,YAAlB,EACC;AAAAC,YACC;AAAAI,cAAQ,UAAChD,GAAD;AACPA,YAAIwD,QAAJ,GAAezG,UAAf;AACAiD,YAAIyD,KAAJ,CAAU,CAAV,EAAaC,OAAb,GAAuB3G,UAAvB;ACkDI,eDjDJ,KAAK+F,MAAL,CAAY9C,GAAZ,CCiDI;ADpDL;AAIA,0BAAoB,UAACA,GAAD;ACmDf,eDlDJ,KAAK8C,MAAL,CAAY9G,EAAE2H,MAAF,CAAS3D,GAAT,EAAc;AAAA0D,mBAAS3G;AAAT,SAAd,CAAZ,CCkDI;ADvDL;AAAA;AADD,GADD;AASAiB,WAAS2E,QAAT,CAAkB,YAAlB,EACC;AAAAC,YAAQ;AAAA,0BAAoB,UAAC5C,GAAD;ACwDtB,eDvDL,KAAK8C,MAAL,CAAY9G,EAAE2H,MAAF,CAAS3D,GAAT,EACX;AAAA4D,oBAAU7G,UAAV;AACA8G,mBAAS/F,OAAOwE,MAAP,EADT;AAEA/B,mBAAS,IAAI3C,IAAJ,EAFT;AAGAkG,mBAAU9H,EAAE6D,IAAF,CAAOb,OAAP,CAAD,CAAiB,CAAjB;AAHT,SADW,CAAZ,CCuDK;ADxDE;AAAA;AAAR,GADD;ACkEA,2H;;;;;;;;;;;;AC9HD,KAAC+E,OAAD,GAAW,CACV;AAAA5E,QAAM,OAAN;AACA6E,QAAM,aADN;AAEAC,QAAM,QAFN;AAGAC,SAAO;AAHP,CADU,EAMV;AAAA/E,QAAM,OAAN;AACA6E,QAAM,YADN;AAEAC,QAAM,iBAFN;AAGAC,SAAO;AAHP,CANU,EAWV;AAAA/E,QAAM,OAAN;AACA6E,QAAM,aADN;AAEAC,QAAM,YAFN;AAGAC,SAAO;AAHP,CAXU,EAgBV;AAAA/E,QAAM,KAAN;AACA6E,QAAM,KADN;AAEAC,QAAM,iBAFN;AAGAC,SAAO;AAHP,CAhBU,EAqBV;AAAA/E,QAAM,MAAN;AACA6E,QAAM,YADN;AAEAC,QAAM,OAFN;AAGAC,SAAO;AAHP,CArBU,EA0BV;AAAA/E,QAAM,OAAN;AACA6E,QAAM,cADN;AAEAC,QAAM,iBAFN;AAGAC,SAAO;AAHP,CA1BU,EA+BV;AAAA/E,QAAM,OAAN;AACA6E,QAAM,WADN;AAEAC,QAAM,mBAFN;AAGAC,SAAO;AAHP,CA/BU,EAoCV;AAAA/E,QAAM,MAAN;AACA6E,QAAM,QADN;AAEAC,QAAM,qBAFN;AAGAC,SAAO;AAHP,CApCU,EAyCV;AAAA/E,QAAM,QAAN;AACA6E,QAAM,QADN;AAEAC,QAAM,YAFN;AAGAC,SAAO;AAHP,CAzCU,EA8CV;AAAA/E,QAAM,OAAN;AACA6E,QAAM,aADN;AAEAC,QAAM,cAFN;AAGAC,SAAO;AAHP,CA9CU,EAmDV;AAAA/E,QAAM,SAAN;AACA6E,QAAM,gBADN;AAEAC,QAAM,gBAFN;AAGAC,SAAO;AAHP,CAnDU,EAwDV;AAAA/E,QAAM,UAAN;AACA6E,QAAM,iBADN;AAEAC,QAAM,WAFN;AAGAC,SAAO;AAHP,CAxDU,EA6DV;AAAA/E,QAAM,WAAN;AACA6E,QAAM,WADN;AAEAC,QAAM,QAFN;AAGAC,SAAO;AAHP,CA7DU,CAAX,wH;;;;;;;;;;;;ACAA,IAAA/G,QAAA,GAAAA,KAAA;;AAAA,IAAGW,OAAOC,QAAV;AAEC,OAACoG,OAAD,GACC;AAAAC,UAAM;AACL,UAAApE,GAAA,EAAAqE,GAAA;AAAArE,YAAM9D,KAAKoI,MAAL,CAAY9E,OAAZ,EAAN;AACA6E,YAAME,QAAQC,SAAR,CACL;AAAAC,iBAAS,CACR,aAAazE,IAAI0E,KAAJ,CAAUC,YADf,EAER,aAAavH,MAAM4C,IAAIoD,KAAV,CAFL,CAAT;AAIAwB,kBAAU,IAJV;AAKAC,qBAAa,CAAC,GAAD,EAAM,EAAN,EAAU,CAAV,EAAa,CAAb,CALb;AAMAC,yBAAiB;AANjB,OADK,CAAN;ACQG,aDAHT,IAAIU,QAAJ,CAAa3H,MAAM4C,IAAIoD,KAAV,IAAmB,WAAhC,CCAG;ADVJ;AAWA4B,aAAS;AACR,UAAAhF,GAAA,EAAAqE,GAAA;AAAArE,YAAM9D,KAAKoI,MAAL,CAAY9E,OAAZ,EAAN;AACA6E,YAAME,QAAQC,SAAR,CACL;AAAAC,iBAAS,CACR;AAACQ,gBAAM,2GAAP;AAAoHC,qBAAW;AAA/H,SADQ,EAER;AAACD,gBAAM,oBAAP;AAA6BC,qBAAW;AAAxC,SAFQ,EAGR;AAACC,mBAAS,CACT,CAAC,QAAD,EAAW,cAAX,EAA2B,wBAA3B,EAAqD,gBAArD,EAAuE,eAAvE,EAAwF,OAAxF,EAAiG,YAAjG,EAA+G,WAA/G,EAA4H,WAA5H,EAAyI,UAAzI,EAAqJ,oBAArJ,EAA2K,QAA3K,EAAqL,eAArL,CADS,EAETnJ,EAAE2D,GAAF,CACC,CAAAvC,MAAM4C,IAAIoD,KAAV,GACApD,IAAI0E,KAAJ,CAAUC,YADV,EAEA,CAAC3E,IAAI0E,KAAJ,CAAUU,UAAV,IAAwB,GAAzB,IAAgC,IAAhC,GAAuCjD,OAAOnC,IAAI0E,KAAJ,CAAUW,SAAjB,EAA4BC,MAA5B,CAAmC,WAAnC,CAFvC,EAGAC,MAHA,CAGApI,MAAA0F,IAAA,CAAC7G,EAAE2D,GAAF,CAAM,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,EAA8B,YAA9B,EAA4C,WAA5C,CAAN,EAAgE,UAAClD,CAAD;AAChE,gBAAA4D,GAAA;ACGU,mBAAO,CAAC,CAACA,MAAMjE,KAAKK,CAAL,EAAQuD,IAAI0E,KAAJ,CAAUjI,CAAV,CAAR,CAAP,KAAiC,IAAjC,GAAwC4D,IDHlCmF,KCGN,GDHM,MCGP,KDHgB,GCGvB;ADJV,YAAD,CAHA,EAKArI,MAAA0F,IAAA,CAAC7G,EAAE2D,GAAF,CAAM,CAAC,MAAD,EAAS,KAAT,EAAgB,UAAhB,EAA4B,QAA5B,EAAsC,QAAtC,CAAN,EAAuD,UAAClD,CAAD;ACI7C,mBDHTuD,IAAI0E,KAAJ,CAAUjI,CAAV,KAAgB,GCGP;ADJV,YAAD,CALA,CADD,EAQG,UAACA,CAAD;ACIO,mBDJA,OAAOA,CCIP;ADZV,YAFS;AAAV,SAHQ,EAeR;AAACwI,gBAAM,sCAAP;AAA+CC,qBAAW;AAA1D,SAfQ,EAgBR;AAACO,iBAAO;AAAAC,kBACP,EAAC,GAAD,EAAM,IAAN,EAAY;AAACT,oBAAM,YAAP;AAAqBC,yBAAW;AAAhC,aAAZ,GACAK,MADA,CACApI,MAAA0F,IAAA,CAAC7G,EAAE2D,GAAF,CAAM,CACN,CAAC,+DAAD,CADM,EAEN,CAAC,kLAAD,CAFM,EAGN,CAAC,oLAAD,CAHM,EAIN,CAAC,8HAAD,CAJM,EAKN,CAAC,iJAAD,CALM,CAAN,EAME,UAAClD,CAAD;ACOS,qBDPD,MAAK,GAAL,EAAU8I,MAAV,CAAUpI,MAAA0F,IAAA,CAAApG,CAAA,CAAV,CCOC;ADbX,cAAD,CADA;AADO;AAAR,SAhBQ,EA0BR,cA1BQ,EA2BR,WA3BQ,EA4BR,kBA5BQ,EA6BR;AAACyI,qBAAW,SAAZ;AAAuBC,mBAAS,CAC/B;AAACF,kBAAM,iCAAgCjJ,EAAE2J,SAAF,CAAY7H,OAAOmB,IAAP,GAAcQ,QAA1B,CAAvC;AAA4EyF,uBAAW;AAAvF,WAD+B,EAE/B;AAACD,kBAAM,gBAAc9C,SAASmD,MAAT,CAAgB,YAAhB,CAAd,GAA4C,8BAA5C,GAA4EtJ,EAAE2J,SAAF,CAAY3F,IAAI0E,KAAJ,CAAUC,YAAtB,CAAnF;AAAwHO,uBAAW;AAAnI,WAF+B;AAAhC,SA7BQ;AAAT,OADK,CAAN;ACiDG,aDdHb,IAAIU,QAAJ,CAAa3H,MAAM4C,IAAIoD,KAAV,IAAmB,cAAhC,CCcG;AD9DJ;AAiDAwC,cAAU,UAACxC,KAAD,EAAQpD,GAAR;AACT,UAAAzD,IAAA,EAAAE,CAAA,EAAAqE,CAAA,EAAAX,CAAA,EAAAC,GAAA,EAAAyF,IAAA,EAAAC,CAAA,EAAAxB,MAAA,EAAAD,GAAA,EAAAhE,GAAA,EAAA0F,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAT,KAAA;AAAAnB,eAASpI,KAAKoI,MAAL,CAAY9E,OAAZ,CAAoB;AAAA4D,eAAOZ,SAASY,KAAT;AAAP,OAApB,CAAT;AACA8C,aAAO,CAAC,CAAC,QAAD,EAAW,OAAX,CAAD,CAAP;AACA7F,YAAA;;AAAA,WAAAF,IAAA,GAAAC,MAAAC,IAAAW,MAAA,EAAAb,IAAAC,GAAA,EAAAD,GAAA;ACoBK1D,YAAI4D,IAAIF,CAAJ,CAAJ;;ADnBJ,YAAGH,IAAIvD,CAAJ,CAAH;AAAesJ,iBAAA/F,IAAAvD,CAAA;;AAAA,eAAAqJ,IAAA,GAAAD,OAAAE,KAAA/E,MAAA,EAAA8E,IAAAD,IAAA,EAAAC,GAAA;ACuBPhF,gBAAIiF,KAAKD,CAAL,CAAJ;ADtBPvJ,mBAAOP,EAAEO,IAAF,CAAOL,KAAK+E,KAAL,CAAW1E,IAAX,GAAkBM,KAAlB,EAAP,EAAkC,UAACqE,CAAD;ACwBhC,qBDxBuCA,EAAEpE,GAAF,KAASgE,EAAEK,ICwBlD;ADxBF,cAAP;AACA+E,iBAAK7E,IAAL,CAAU,CAACrF,EAAE2J,SAAF,CAAYpJ,KAAK4E,IAAjB,CAAD,EAAyBnF,EAAEkB,QAAF,CAAW4D,EAAEM,KAAb,CAAzB,CAAV;AAFD;AC6BK;AD9BN;;AAIAqE,cAAQ;AAAAA,eAAO;AAAAU,kBAAQ,CAAC,GAAD,EAAM,MAAN,CAAR;AAAuBT,gBAAMQ;AAA7B;AAAP,OAAR;AACA7B,YAAME,QAAQC,SAAR,CACL;AAAAC,iBAAS,CACR;AAACQ,gBAAM,sHAAP;AAA+HC,qBAAW;AAA1I,SADQ,EAER;AAACD,gBAAM,+BAAP;AAAwCC,qBAAW;AAAnD,SAFQ,EAGR;AAACC,mBAAS,CACT,CAAC,QAAD,EAAW,aAAX,EAA0B,eAA1B,EAA2C,eAA3C,EAA4D,MAA5D,EAAoE,QAApE,CADS,EAETnJ,EAAE2D,GAAF,CAAM,CACLvC,MAAMkH,OAAOlB,KAAb,CADK,EAELpH,EAAE2J,SAAF,CAAYrB,OAAOI,KAAP,CAAaC,YAAzB,CAFK,IAAAqB,OAAA5J,KAAA,WAAAkI,OAAAI,KAAA,CAAA0B,OAAA,aAAAJ,KAGmCR,KAHnC,GAGmC,MAHnC,KAG4C,GAH5C,EAILrD,SAASmD,MAAT,CAAgB,WAAhB,CAJK,EAKLnD,SAASzE,IAAT,CAAc4G,OAAOI,KAAP,CAAaW,SAA3B,EAAsC,OAAtC,IAAiD,QAL5C,IAAAY,OAAA7J,KAAA,UAAA4D,IAAAqG,MAAA,aAAAJ,KAMwBT,KANxB,GAMwB,MANxB,KAMiC,GANjC,CAAN,EAOG,UAAC/I,CAAD;AC+BO,mBD/BA,OAAOA,CC+BP;ADtCV,YAFS;AAAV,SAHQ,EAcR;AAACwI,gBAAM,wBAAP;AAAiCC,qBAAW;AAA5C,SAdQ,EAeRO,KAfQ,EAgBR,kBAAkB,KAAlB,GAA0BzJ,EAAEkB,QAAF,CAAWoJ,QAAQtG,IAAIS,KAAJ,CAAUiB,KAAlB,EAAyB4D,MAAzB,CAAgC,KAAhC,CAAX,CAhBlB,EAiBR;AAACL,gBAAM,kBAAkB9C,SAASmD,MAAT,CAAgB,WAAhB,CAAlB,GACP,YADO,GACStJ,EAAE2J,SAAF,CAAY7H,OAAOmB,IAAP,GAAcQ,QAA1B,CADhB;AACqDyF,qBAAW;AADhE,SAjBQ;AAAT,OADK,CAAN;ACwDG,aDnCHb,IAAIU,QAAJ,CAAa3H,MAAMkH,OAAOlB,KAAb,IAAsB,eAAnC,CCmCG;ADjHJ;AA+EAmD,gBAAY,UAACnD,KAAD,EAAQoD,MAAR,EAAgBC,KAAhB;AACX,UAAAzG,GAAA,EAAAqE,GAAA;AAAArE,YAAM9D,KAAKoI,MAAL,CAAY9E,OAAZ,CAAoB;AAAA4D,eAAOZ,SAASY,KAAT;AAAP,OAApB,CAAN;AACAiB,YAAME,QAAQC,SAAR,CACL;AAAAC,iBAAS,CACR;AAACQ,gBAAM,sHAAP;AAA+HC,qBAAW;AAA1I,SADQ,EAER;AAACD,gBAAM,YAAP;AAAqBC,qBAAW;AAAhC,SAFQ,EAGR;AAACC,mBAAS,CACT,CAAC,SAAD,EAAY,QAAZ,EAAsB,aAAtB,EAAqC,OAArC,EAA8C,aAA9C,CADS,EAETnJ,EAAE2D,GAAF,CAAM,CACLwC,SAASmD,MAAT,CAAgB,YAAhB,CADK,EAELlI,MAAM4C,IAAIoD,KAAV,CAFK,EAGLpH,EAAE2J,SAAF,CAAY3F,IAAI0E,KAAJ,CAAUC,YAAtB,CAHK,EAIL,QAAQ6B,MAJH,EAKL,SAASxK,EAAE2J,SAAF,CAAY7H,OAAOmB,IAAP,GAAcQ,QAA1B,CALJ,CAAN,EAMG,UAAChD,CAAD;ACsCO,mBDtCA,OAAOA,CCsCP;AD5CV,YAFS;AAAV,SAHQ;AAAT,OADK,CAAN;ACwDG,aDzCH4H,IAAIU,QAAJ,CAAa3H,MAAM4C,IAAIoD,KAAV,IAAmB,iBAAhC,CCyCG;ADzIJ;AAiGAsD,WAAO,UAACR,IAAD;AACN,UAAA7B,GAAA,EAAAsC,OAAA;AAAAA,gBAAU3K,EAAE2D,GAAF,CAAMuG,IAAN,EAAY,UAACzJ,CAAD;AC4CjB,eD5CwBT,EAAE2D,GAAF,CAAMlD,CAAN,EAAS,UAACqE,CAAD;AC6C/B,iBD7CsC9E,EAAEkB,QAAF,CAAW4D,CAAX,CC6CtC;AD7CsB,UC4CxB;AD5CK,QAAV;AACAuD,YAAME,QAAQC,SAAR,CAAkB;AAAAC,iBAAS,CAAC;AAAAgB,iBAAO;AAAAC,kBAAMiB;AAAN;AAAP,SAAD;AAAT,OAAlB,CAAN;ACwDG,aDvDHtC,IAAIU,QAAJ,CAAa,WAAb,CCuDG;AD3JJ;AAAA,GADD;AC+JA,2H;;;;;;;;;;;;ACjKD,IAAA5H,QAAA,GAAAA,KAAA;;AAAA,IAAGW,OAAOC,QAAV;AAEC,OAAC6I,MAAD,GAAU,CACT;AAAAC,WAAO,OAAP;AACAxK,UAAM,CAAC,OAAD,EAAU,OAAV;AADN,GADS,EAIT;AAAAwK,WAAO,OAAP;AACAxK,UAAM,CAAC,OAAD;AADN,GAJS,EAOT;AAAAwK,WAAO,OAAP;AACAxK,UAAM,CAAC,OAAD,EAAU,SAAV;AADN,GAPS,EAUT;AAAAwK,WAAO,MAAP;AACAxK,UAAM,CAAC,MAAD,EAAS,SAAT;AADN,GAVS,EAaT;AAAAwK,WAAO,OAAP;AACAxK,UAAM,CAAC,OAAD;AADN,GAbS,EAgBT;AAAAwK,WAAO,OAAP;AACAxK,UAAM,CAAC,OAAD;AADN,GAhBS,EAmBT;AAAAwK,WAAO,MAAP;AACAxK,UAAM,CAAC,MAAD,EAAS,SAAT;AADN,GAnBS,EAsBT;AAAAwK,WAAO,OAAP;AACAxK,UAAM,CAAC,OAAD,EAAU,OAAV;AADN,GAtBS,EAyBT;AAAAwK,WAAO,QAAP;AACAxK,UAAM,CAAC,QAAD;AADN,GAzBS,EA4BT;AAAAwK,WAAO,WAAP;AACAxK,UAAM,CAAC,WAAD;AADN,GA5BS,EA+BT;AAAAwK,WAAO,SAAP;AACAxK,UAAM,CAAC,SAAD;AADN,GA/BS,CAAV;;AAmCAL,IAAE2D,GAAF,CAAMiH,MAAN,EAAc,UAACnK,CAAD;AACbA,MAAEJ,IAAF,GAAUc,MAAA0F,IAAA,CAAApG,EAAEJ,IAAF,EAAAkJ,MAAA,CAAW,WAAX,CAAV;ACGE,WDFF9I,CCEE;ADJH;ACMA,0H;;;;;;;;;;;;AC3CD,KAACD,OAAD,GACC;AAAAsK,SAAO,CAAC,aAAD,EAAgB,YAAhB,EAA8B,KAA9B,CAAP;AACAC,aAAW,CAAC,KAAD,EAAQ,WAAR,EAAqB,WAArB,EAAkC,QAAlC,EAA4C,iBAA5C,EAA+D,WAA/D,EAA4E,SAA5E,EAAuF,SAAvF,EAAkG,QAAlG,EAA4G,OAA5G,EAAqH,eAArH,EAAsI,eAAtI,CADX;AAEAX,WAAS,CAAC,WAAD,EAAc,WAAd,CAFT;AAGAY,SAAO,CAAC,OAAD,EAAU,SAAV,EAAqB,WAArB,EAAkC,QAAlC,EAA4C,OAA5C,EAAqD,aAArD,CAHP;AAIAC,cAAY,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,SAArB,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,IAA5C,EAAkD,eAAlD,CAJZ;AAKAC,SAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,EAAsB,GAAtB,CALP;AAMAjF,cAAY,CAAC,MAAD,EAAS,MAAT,EAAiB,oBAAjB,EAAuC,iBAAvC,EAA0D,cAA1D,EAA0E,MAA1E,CANZ;AAOAkF,SAAO,CAAC,OAAD,EAAU,aAAV,EAAyB,OAAzB,EAAkC,MAAlC,CAPP;AAQAd,UAAQ,CAAC,gBAAD,EAAmB,MAAnB,EAA2B,WAA3B,EAAwC,KAAxC,EAA+C,MAA/C,EAAuD,OAAvD,EAAgE,MAAhE,EAAwE,OAAxE,EAAiF,MAAjF,EAAyF,UAAzF,EAAqG,OAArG,EAA8G,aAA9G,EAA6H,MAA7H,EAAqI,SAArI,EAAgJ,WAAhJ,EAA6J,UAA7J,EAAyK,WAAzK,EAAsL,WAAtL,CARR;AASAe,UAAQ,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,cAA9B,EAA8C,YAA9C,CATR;AAUAC,eAAa,CAAC,MAAD,EAAS,WAAT,CAVb;AAWAC,WAAS,CAAC,gBAAD,EAAmB,SAAnB,EAA8B,WAA9B,EAA2C,gBAA3C,CAXT;AAYAC,UAAQ,CAAC,QAAD,EAAW,OAAX,CAZR;AAaAC,UAAQ,CAAC,SAAD,EAAY,aAAZ,EAA2B,gBAA3B,EAA6C,KAA7C,CAbR;AAcAC,UAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,KAA3B,EAAkC,QAAlC,EAA4C,MAA5C,EAAoD,MAApD,EAA4D,QAA5D,EAAsE,UAAtE,EAAkF,KAAlF,EAAyF,YAAzF,EAAuG,QAAvG,CAdR;AAeAC,YAAU,CAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB,EAA6B,QAA7B,CAfV;AAgBAC,SAAO,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B;AAhBP,CADD;;AAmBA3L,EAAE2D,GAAF,CAAO3D,EAAE6D,IAAF,CAAOrD,OAAP,CAAP,EAAwB,UAACC,CAAD;ACEtB,SDF6BD,QAAQC,CAAR,IAAaT,EAAE2D,GAAF,CAAMnD,QAAQC,CAAR,CAAN,EAAkB,UAACqE,CAAD,EAAI8G,CAAJ;ACG1D,WDHoE;AAAApC,aAAO1E,CAAP;AAAUpE,aAAOkL,IAAE;AAAnB,KCGpE;ADHwC,ICE1C;ADFF;;AAEApL,QAAQqL,MAAR,GAAiB7L,EAAE2D,GAAF,CAAM,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAAN,EAA2C,UAAClD,CAAD;ACS1D,SDTiE;AAAAC,WAAOD,CAAP;AAAU+I,WAAO,QAAQ/I;AAAzB,GCSjE;ADTe,EAAjB;;AAEAD,QAAQkE,QAAR,GAAmB;AAAG,MAAAoH,QAAA,EAAAC,GAAA;;AAAA,MAAGjK,OAAOC,QAAV;AACrBgK,UAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC,CAAN;AACAF,eAAW;AAAAtH,aAAO1C,OAAOmB,IAAP,GAAcD,KAAd,CAAoBiJ,KAApB,CAA0B,CAA1B;AAAP,KAAX;;AACA,QAAGF,IAAIG,KAAJ,EAAH;ACkBK,aDlBelM,EAAE2D,GAAF,CAAMzD,KAAK+E,KAAL,CAAW1E,IAAX,CAAgBuL,QAAhB,EAA0BjL,KAA1B,EAAN,EAAyC,UAACJ,CAAD;ACmBtD,eDlBN;AAAAC,iBAAOD,EAAEK,GAAT;AAAc0I,iBAAOxJ,EAAE2J,SAAF,CAAYlJ,EAAE0E,IAAd;AAArB,SCkBM;ADnBa,QCkBf;ADrBgB;AC4BnB;AD5BgB,CAAnB;;AAMA3E,QAAQ2L,MAAR,GAAiB;AAAG,MAAA5L,IAAA,EAAAuL,QAAA,EAAAC,GAAA;;AAAA,MAAGjK,OAAOC,QAAV;AACnBgK,UAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,EAAnC,EAAuC,EAAvC,CAAN;AACAzL,WAAOP,EAAEO,IAAF,CAAOC,QAAQ6J,MAAf,EAAuB,UAAC5J,CAAD;AC4BzB,aD3BJqB,OAAOmB,IAAP,GAAcD,KAAd,CAAoBiJ,KAApB,CAA0B,CAA1B,MAAgCjM,EAAEoM,SAAF,CAAY3L,EAAE+I,KAAd,CC2B5B;AD5BE,MAAP;AAEAsC,eAAW;AAAAO,YAAM9L,KAAKG;AAAX,KAAX;;AACA,QAAGqL,IAAIG,KAAJ,EAAH;AC+BK,aD/BelM,EAAE2D,GAAF,CAAMzD,KAAKiM,MAAL,CAAY5L,IAAZ,CAAiBuL,QAAjB,EAA2BjL,KAA3B,EAAN,EAA0C,UAACJ,CAAD;ACgCvD,eD/BN;AAAAC,iBAAOD,EAAEK,GAAT;AAAc0I,iBAAO/I,EAAE0E;AAAvB,SC+BM;ADhCa,QC+Bf;ADpCc;AC2CjB;AD3Cc,CAAjB;;AAQA3E,QAAQqE,IAAR,GAAe;AAAG,MAAAyH,MAAA,EAAAP,GAAA;;AAAA,MAAGjK,OAAOC,QAAV;AACjBgK,UAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,EAAnC,EAAuC,EAAvC,CAAN;;AACAM,aAAS,UAACC,GAAD;ACyCJ,aDzCavM,EAAEsM,MAAF,CAASC,GAAT,EAAc,UAAC9L,CAAD;AC0CzB,eD1CgCA,EAAE+D,KAAF,KAAW,CC0C3C;AD1CW,QCyCb;ADzCI,KAAT;;AACA,QAAGuH,IAAIG,KAAJ,EAAH;AC6CK,aD7CelM,EAAE2D,GAAF,CAAM2I,OAAOpM,KAAKqF,MAAL,CAAYhF,IAAZ,GAAmBM,KAAnB,EAAP,CAAN,EAA0C,UAACJ,CAAD;AC8CvD,eD7CN;AAAAC,iBAAOD,EAAEK,GAAT;AAAc0I,iBAAO/I,EAAE0E;AAAvB,SC6CM;AD9Ca,QC6Cf;ADhDY;ACuDf;ADvDY,CAAf;;AAMAnF,EAAE2D,GAAF,CAAM,CAAC,OAAD,EAAU,OAAV,CAAN,EAA0B,UAAClD,CAAD;ACqDxB,SDpDDD,QAAQC,CAAR,IAAa;AAAG,QAAAqL,QAAA,EAAAC,GAAA;;AAAA,QAAGjK,OAAOC,QAAV;AACfgK,YAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC,CAAN;AACAF,iBAAW;AAAAtH,eAAO/D;AAAP,OAAX;;AACA,UAAGsL,IAAIG,KAAJ,EAAH;ACyDM,eDzDclM,EAAE2D,GAAF,CAAMzD,KAAK+E,KAAL,CAAW1E,IAAX,CAAgBuL,QAAhB,EAA0BjL,KAA1B,EAAN,EAAyC,UAACiE,CAAD;AC0DrD,iBDzDP;AAAApE,mBAAOoE,EAAEhE,GAAT;AAAc0I,mBAAOxJ,EAAE2J,SAAF,CAAY7E,EAAEK,IAAd;AAArB,WCyDO;AD1DY,UCyDd;AD5DS;ACmEZ;ADnES,GCoDZ;ADrDF,0H;;;;;;;;;;;;AE3CAhD,OAAOqK,SAAP,CACC;AAAAC,kBAAgB,QAAhB;AACAC,mBAAiB;AADjB,CADD;AAIAvK,OAAOE,KAAP,CAAa,GAAb,EACC;AAAAsK,UAAQ;ACEL,WDFQ,KAAKC,MAAL,CAAY,MAAZ,CCER;ADFH;AAAA,CADD;AAGAzM,OAAOuI,KAAP,GACC;AAAAtB,SAAO;AAAAyF,UAAMC,MAAN;AAAcC,SAAK;AAAnB,GAAP;AACArE,SAAO;AAAAmE,UAAMG;AAAN,GADP;AAEA,iBAAe;AAAAH,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQmL,KAAjB;AAAwBkB,YAAM;AAA9B;AAAxC,GAFf;AAGA,wBAAsB;AAAAA,UAAMO;AAAN,GAHtB;AAIA,qBAAmB;AAAAP,UAAMjL,IAAN;AAAYsL,cAAU;AAAAL,YAAM,WAAN;AAAmBQ,wBAAkB;AAAAC,qBAAa,GAAb;AAAkBC,sBAAc;AAAhC;AAArC;AAAtB,GAJnB;AAKA,sBAAoB;AAAAV,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GALpB;AAMA,sBAAoB;AAAAJ,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQyF,UAAjB;AAA6B4G,YAAM;AAAnC;AAAxB,GANpB;AAOA,mBAAiB;AAAAA,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQ4J,OAAjB;AAA0ByC,YAAM;AAAhC;AAAxB,GAPjB;AAQA,iBAAe;AAAAA,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQwK,KAAjB;AAAwB6B,YAAM;AAA9B;AAAxB,GARf;AASA,iBAAe;AAAAA,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQ2K,KAAjB;AAAwB0B,YAAM;AAA9B;AAAxB,GATf;AAUA,sBAAoB;AAAAA,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQyK,UAAjB;AAA6B4B,YAAM;AAAnC;AAAxC,GAVpB;AAWA,iBAAe;AAAAA,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQ0K,KAAjB;AAAwB2B,YAAM;AAA9B;AAAxC,GAXf;AAYA,qBAAmB;AAAAA,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQuK,SAAjB;AAA4B8B,YAAM;AAAlC;AAAxC,GAZnB;AAaA,qBAAmB;AAAAA,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAbnB;AAcA,qBAAmB;AAAAJ,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAdnB;AAeA,qBAAmB;AAAAJ,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAfnB;AAgBA,kBAAgB;AAAAJ,UAAMO;AAAN,GAhBhB;AAiBA,kBAAgB;AAAAP,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAjBhB;AAkBA,gBAAc;AAAAJ,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAlBd;AAmBA,eAAa;AAAAJ,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAnBb;AAoBA,oBAAkB;AAAAJ,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GApBlB;AAqBA,mBACC;AAAAJ,UAAMO,MAAN;AACAF,cAAU;AAAAL,YAAM;AAAN,KADV;AAEAW,eAAW;AAAG,UAAG1L,OAAOC,QAAV;ACsGR,eDtGgCD,OAAOwE,MAAP,ECsGhC;AACD;ADzGL;AAAA,GAtBD;AAyBA,gBACC;AAAAuG,UAAMjL,IAAN;AACAsL,cAAU;AAAAL,YAAM;AAAN,KADV;AAEAW,eAAW;AC4GP,aD5GU,IAAI5L,IAAJ,EC4GV;AD9GJ;AAAA,GA1BD;AA6BA,oBAAkB;AAAAiL,UAAMY,OAAN;AAAeR,cAAU,IAAzB;AAA+BC,cAAU;AAAAL,YAAM;AAAN;AAAzC;AA7BlB,CADD;AAgCA1M,OAAOuN,KAAP,GACC;AAAAC,iBAAe;AAAAd,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAAf;AACAW,QAAM;AAAAf,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GADN;AAEAY,QAAM;AAAAhB,UAAMC,MAAN;AAAcgB,aAAS,IAAvB;AAA6Bb,cAAU;AAAvC,GAFN;AAGAc,cAAY;AAAAlB,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GAHZ;AAIAe,SAAO;AAAAnB,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GAJP;AAKAgB,UAAQ;AAAApB,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GALR;AAMAiB,QAAM;AAAArB,UAAMC,MAAN;AAAcG,cAAU;AAAxB;AANN,CADD;AASA9M,OAAOuE,QAAP,GACC;AAAAyJ,cAAY;AAAAtB,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAAZ;AACA1H,QAAM;AAAA0H,UAAMO,MAAN;AAAcF,cAAU;AAAAC,eAAS3M,QAAQkE,QAAjB;AAA2BmI,YAAM;AAAjC;AAAxB,GADN;AAEAV,UAAQ;AAAAU,UAAMO,MAAN;AAAcF,cAAU;AAAAC,eAAS3M,QAAQ2L;AAAjB;AAAxB,GAFR;AAGA/G,SAAO;AAAAyH,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC;AAHP,CADD;AAMA1M,OAAOwE,KAAP,GACC;AAAAyJ,WAAS;AAAAvB,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAAT;AACA1H,QAAM;AAAA0H,UAAMO,MAAN;AAAcF,cAAU;AAAAC,eAAS3M,QAAQmE;AAAjB;AAAxB,GADN;AAEAS,SAAO;AAAAyH,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAFP;AAGAwB,SAAO;AAAAxB,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC;AAHP,CADD;AAMA1M,OAAOyE,KAAP,GACC;AAAA0J,WAAS;AAAAzB,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAAT;AACA1H,QAAM;AAAA0H,UAAMO,MAAN;AAAcF,cAAU;AAAAC,eAAS3M,QAAQoE;AAAjB;AAAxB,GADN;AAEAQ,SAAO;AAAAyH,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAFP;AAGAwB,SAAO;AAAAxB,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC;AAHP,CADD;AAMA1M,OAAO0E,IAAP,GACC;AAAAS,UAAQ;AAAAuH,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAAR;AACA1H,QAAM;AAAA0H,UAAMO,MAAN;AAAcF,cAAU;AAAAC,eAAS3M,QAAQqE;AAAjB;AAAxB,GADN;AAEA0J,SAAO;AAAA1B,UAAMO,MAAN;AAAcH,cAAU;AAAxB,GAFP;AAGAuB,UAAQ;AAAA3B,UAAMG;AAAN,GAHR;AAIA,iBAAe;AAAAH,UAAMC;AAAN,GAJf;AAKA,kBAAgB;AAAAD,UAAMC;AAAN,GALhB;AAMA,mBAAiB;AAAAD,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQ4K;AAAjB;AAAxB,GANjB;AAOA3F,UAAQ;AAAAoH,UAAMC;AAAN,GAPR;AAQA1H,SAAO;AAAAyH,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GARP;AASArH,YAAU;AAAAqH,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GATV;AAUAwB,SAAO;AAAAxB,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC;AAVP,CADD;AAaA1M,OAAO2K,KAAP,GACC;AAAA1D,SAAO;AAAAyF,UAAMC;AAAN,GAAP;AACAhC,SAAO;AAAA+B,UAAM4B;AAAN,GADP;AAEA,aAAW;AAAA5B,UAAMG;AAAN,GAFX;AAGA,qBAAmB;AAAAH,UAAMjL,IAAN;AAAYsL,cAAU;AAAAL,YAAM;AAAN;AAAtB,GAHnB;AAIA,qBAAmB;AAAAA,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAJnB;AAKA,mBAAiB;AAAAA,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GALjB;AAMA,wBAAsB;AAAAA,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQyF,UAAjB;AAA6B4G,YAAM;AAAnC;AAAxB,GANtB;AAOA,oBAAkB;AAAAA,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQ6J,MAAjB;AAAyBwC,YAAM;AAA/B;AAAxB,GAPlB;AAQA,oBAAkB;AAAAA,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQqL,MAAjB;AAAyBgB,YAAM;AAA/B;AAAxC,GARlB;AASA,qBAAmB;AAAAA,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQ8K,OAAjB;AAA0BuB,YAAM;AAAhC;AAAxC,GATnB;AAUA,uBAAqB;AAAAA,UAAMY,OAAN;AAAeR,cAAU,IAAzB;AAA+BC,cAAU;AAAAL,YAAM;AAAN;AAAzC,GAVrB;AAWA,oBAAkB;AAAAA,UAAMC,MAAN;AAAcI,cAAU;AAAAL,YAAM;AAAN;AAAxB,GAXlB;AAYA,0BAAwB;AAAAA,UAAMY,OAAN;AAAeR,cAAU,IAAzB;AAA+BC,cAAU;AAAAL,YAAM;AAAN;AAAzC,GAZxB;AAaA,6BAA2B;AAAAA,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAwB,oBAAc;AAAA7B,cAAM,UAAN;AAAkB3C,cAAM;AAAxB;AAAd;AAAxC,GAb3B;AAcA,mBAAiB;AAAA+C,cAAU,IAAV;AAAgBJ,UAAM,CAAC,IAAI8B,YAAJ,CAAiBxO,OAAOuN,KAAxB,CAAD;AAAtB,GAdjB;AAeA,4BAA0B;AAAAb,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAwB,oBAAc;AAAA7B,cAAM,UAAN;AAAkB3C,cAAM;AAAxB;AAAd;AAAxC,GAf1B;AAgBA,sBAAoB;AAAA2C,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAwB,oBAAc;AAAA7B,cAAM,UAAN;AAAkB3C,cAAM;AAAxB;AAAd;AAAxC,GAhBpB;AAiBA,sBAAoB;AAAA2C,UAAMO,MAAN;AAAcH,cAAU,IAAxB;AAA8BC,cAAU;AAAAwB,oBAAc;AAAA7B,cAAM,UAAN;AAAkB3C,cAAM;AAAxB;AAAd;AAAxC,GAjBpB;AAkBA,sBAAoB;AAAA2C,UAAM,CAAC,IAAI8B,YAAJ,CAAiBxO,OAAOuE,QAAxB,CAAD,CAAN;AAA0CuI,cAAU;AAApD,GAlBpB;AAmBA,mBAAiB;AAAAJ,UAAM,CAAC,IAAI8B,YAAJ,CAAiBxO,OAAOwE,KAAxB,CAAD,CAAN;AAAuCsI,cAAU;AAAjD,GAnBjB;AAoBA,mBAAiB;AAAAJ,UAAM,CAAC,IAAI8B,YAAJ,CAAiBxO,OAAOyE,KAAxB,CAAD,CAAN;AAAuCqI,cAAU;AAAjD,GApBjB;AAqBA,kBAAgB;AAAAJ,UAAM,CAAC,IAAI8B,YAAJ,CAAiBxO,OAAO0E,IAAxB,CAAD,CAAN;AAAsCoI,cAAU;AAAhD,GArBhB;AAsBA,mBAAiB;AAAAJ,UAAMG,MAAN;AAAcC,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GAtBjB;AAuBA,4BAA0B;AAAAA,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GAvB1B;AAwBA,yBAAuB;AAAAJ,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GAxBvB;AAyBA,yBAAuB;AAAAJ,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GAzBvB;AA0BA,wBAAsB;AAAAJ,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GA1BtB;AA2BA,yBAAuB;AAAAJ,UAAMC,MAAN;AAAcG,cAAU;AAAxB,GA3BvB;AA4BA,iBAAe;AAAAJ,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAL,YAAM;AAAN;AAAxC,GA5Bf;AA6BA,oBAAkB;AAAAA,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQ6J;AAAjB;AAAxC,GA7BlB;AA8BA,oBAAkB;AAAAwC,UAAMC,MAAN;AAAcG,cAAU,IAAxB;AAA8BC,cAAU;AAAAC,eAAS3M,QAAQ+K;AAAjB;AAAxC,GA9BlB;AA+BA,qBAAmB;AAAAsB,UAAMO,MAAN;AAAcF,cAAU;AAAAL,YAAM;AAAN;AAAxB;AA/BnB,CADD;AAkCA1M,OAAO8L,KAAP,GAAejM,EAAE2H,MAAF,CAAS,EAAT,EAAaxH,OAAO2K,KAApB,EAA2B,EAA3B,CAAf;AACA3K,OAAOyO,IAAP,GAAc5O,EAAE2H,MAAF,CAAS,EAAT,EAAaxH,OAAO2K,KAApB,EAA2B,EAA3B,CAAd;AACA3K,OAAO0O,GAAP,GAAa7O,EAAE2H,MAAF,CAAS,EAAT,EAAaxH,OAAO2K,KAApB,EAA2B,EAA3B,CAAb;AAEA3K,OAAOoF,MAAP,GACC;AAAAiC,YACC;AAAAqF,UAAMO,MAAN;AACAF,cAAU;AAAAL,YAAM;AAAN,KADV;AAEAW,eAAW;ACyaP,aDzaUzM,UCyaV;AD3aJ;AAAA,GADD;AAIAyD,SAAO;AAAAqI,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQgL;AAAjB;AAAxB,GAJP;AAKArG,QAAM;AAAA0H,UAAMO;AAAN;AALN,CADD;AAQAjN,OAAO2O,OAAP,GAAiB9O,EAAE2H,MAAF,CAAS,EAAT,EAAaxH,OAAOoF,MAApB,EAChB;AAAAwJ,aAAW;AAAAlC,UAAMO;AAAN,GAAX;AACA3B,UAAQ;AAAAoB,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQiL;AAAjB;AAAxB,GADR;AAEAhE,SAAO;AAAAoF,UAAM4B;AAAN,GAFP;AAGA,aAAW;AAAA5B,UAAMG;AAAN,GAHX;AAIA,qBACC;AAAAH,UAAMO,MAAN;AACAF,cAAU;AAAAL,YAAM;AAAN,KADV;AAEAW,eAAW;ACicP,aDjcUzM,UCicV;ADncJ;AAAA,GALD;AAQA,qBAAmB;AAAA8L,UAAMO;AAAN,GARnB;AASA,mBAAiB;AAAAP,UAAMO;AAAN,GATjB;AAUA,mBAAiB;AAAAP,UAAMjL,IAAN;AAAYsL,cAAU;AAAAL,YAAM,WAAN;AAAmBQ,wBAAkB;AAAAC,qBAAa,GAAb;AAAkBC,sBAAc;AAAhC;AAArC;AAAtB,GAVjB;AAWA,wBAAsB;AAAAV,UAAMjL,IAAN;AAAYsL,cAAU;AAAAL,YAAM,WAAN;AAAmBQ,wBAAkB;AAAAC,qBAAa,GAAb;AAAkBC,sBAAc;AAAhC;AAArC;AAAtB,GAXtB;AAYA,sBAAoB;AAAAV,UAAMC;AAAN,GAZpB;AAaA,sBAAoB;AAAAD,UAAMC;AAAN,GAbpB;AAcA,qBAAmB;AAAAD,UAAMY,OAAN;AAAeR,cAAU,IAAzB;AAA+BC,cAAU;AAAAL,YAAM;AAAN;AAAzC,GAdnB;AAeA,kBAAgB;AAAAA,UAAMC,MAAN;AAAcgB,aAAS;AAAvB,GAfhB;AAgBA,kBAAgB;AAAAjB,UAAMC,MAAN;AAAcgB,aAAS;AAAvB,GAhBhB;AAiBA,qBAAmB;AAAAjB,UAAMO;AAAN,GAjBnB;AAkBA,wBAAsB;AAAAP,UAAMY,OAAN;AAAeR,cAAU;AAAzB,GAlBtB;AAmBA,sBAAoB;AAAAJ,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQkL;AAAjB;AAAxB,GAnBpB;AAoBA,uBAAqB;AAAAmB,UAAMC;AAAN;AApBrB,CADgB,CAAjB;AAuBA3M,OAAO6O,MAAP,GAAgBhP,EAAE2H,MAAF,CAAS,EAAT,EAAaxH,OAAOoF,MAApB,EACf;AAAAyJ,UAAQ;AAAAnC,UAAM4B;AAAN,GAAR;AACA,cAAY;AAAA5B,UAAMG;AAAN,GADZ;AAEA,sBAAoB;AAAAH,UAAMC;AAAN;AAFpB,CADe,CAAhB;AAKA3M,OAAO8O,QAAP,GAAkBjP,EAAE2H,MAAF,CAAS,EAAT,EAAaxH,OAAOoF,MAApB,EAA4B,EAA5B,CAAlB;AAEApF,OAAOgM,MAAP,GACC;AAAAhH,QAAM;AAAA0H,UAAMO;AAAN,GAAN;AACA8B,QAAM;AAAArC,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQ6K;AAAjB;AAAxB,GADN;AAEAgB,QAAM;AAAAQ,UAAMC,MAAN;AAAcI,cAAU;AAAAC,eAAS3M,QAAQ6J;AAAjB;AAAxB;AAFN,CADD;AAKAlK,OAAO8E,KAAP,GACC;AAAAT,SAAO;AAAAqI,UAAMO;AAAN,GAAP;AACAjI,QAAM;AAAA0H,UAAMO;AAAN,GADN;AAEAhI,SAAO;AAAAyH,UAAMC;AAAN,GAFP;AAGAqC,QAAM;AAAAtC,UAAMO,MAAN;AAAcH,cAAU;AAAxB;AAHN,CADD;;AAMAjN,EAAE2D,GAAF,CAAM,CAAC,QAAD,EAAW,OAAX,CAAN,EAA2B,UAAClD,CAAD;AAC1B,MAAA2O,GAAA;AAAAA,QAAM;AAAAC,YACL;AAAAxC,YAAMY,OAAN;AACAP,gBAAU;AAAAL,cAAM;AAAN,OADV;AAEAW,iBAAW;ACyhBL,eDzhBQ,ICyhBR;AD3hBN;AAAA;AADK,GAAN;ACgiBC,SD5hBDxN,EAAE2H,MAAF,CAASxH,OAAOM,CAAP,CAAT,EAAoB2O,GAApB,CC4hBC;ADjiBF;;AAOApP,EAAE2D,GAAF,CAAM,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,OAA/B,CAAN,EAA+C,UAAClD,CAAD;AAC9C,MAAA8L,GAAA;AAAArM,OAAKO,CAAL,IAAU,IAAIqB,OAAOwN,UAAX,CAAsB7O,CAAtB,CAAV;AACA8L,QAAM,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAN;AC+hBC,SD9hBDrM,KAAKO,CAAL,EAAQ8O,KAAR,CAAcvP,EAAEwP,SAAF,CAAYjD,GAAZ,EAAiBvM,EAAE2D,GAAF,CAAM4I,GAAN,EAAW,UAAC9L,CAAD;AC+hBvC,WD/hB8C;ACgiB5C,aDhiB+C,ICgiB/C;ADhiB4C,KC+hB9C;AD/hB4B,IAAjB,CAAd,CC8hBC;ADjiBF;;AAKAT,EAAE2D,GAAF,CAAMoE,QAAQ5G,KAAR,CAAQ,CAAR,EAAQ,EAAR,CAAN,EAAqB,UAACV,CAAD;ACoiBnB,SDniBD0B,OAAOE,KAAP,CAAa,MAAI5B,EAAE0C,IAAN,GAAW,UAAxB,EACC;AAAAA,UAAM1C,EAAE0C,IAAR;AACAwJ,YAAQ;ACoiBJ,aDpiBO,KAAKC,MAAL,CAAY,QAAZ,CCoiBP;ADriBJ;AAEA6C,YAAQ;ACsiBJ,aDriBHzP,EAAE2D,GAAF,CAAM,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAN,EAAqC,UAACmB,CAAD;ACsiBhC,eDriBJhD,OAAOkK,SAAP,CAAiB,MAAjB,EAAyBlH,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,CCqiBI;ADtiBL,QCqiBG;ADxiBJ;AAAA,GADD,CCmiBC;ADpiBF;;AAQA9E,EAAE2D,GAAF,CAAMoE,QAAQ5G,KAAR,CAAQ,EAAR,EAAQ,EAAR,CAAN,EAAuB,UAACV,CAAD;AC0iBrB,SDziBD0B,OAAOE,KAAP,CAAa,MAAI5B,EAAE0C,IAAN,GAAW,aAAxB,EACC;AAAAA,UAAM1C,EAAE0C,IAAR;AACAwJ,YAAQ;AC0iBJ,aD1iBO,KAAKC,MAAL,CAAY,QAAZ,CC0iBP;AD3iBJ;AAEA6C,YAAQ;AC4iBJ,aD5iBO3N,OAAOkK,SAAP,CAAiB,OAAjB,EAA0B,EAA1B,EAA8B;AAAA0D,gBAAQ;AAAAjM,oBAAU;AAAV;AAAR,OAA9B,CC4iBP;AD9iBJ;AAAA,GADD,CCyiBC;AD1iBF;;AAMAzD,EAAE2D,GAAF,CAAM,CAAC,SAAD,CAAN,EAAmB,UAAClD,CAAD;ACojBjB,SDnjBD0B,OAAOE,KAAP,CAAa,MAAM5B,CAAnB,EACC;AAAAkM,YAAQ;ACojBJ,aDpjBO,KAAKC,MAAL,CAAYnM,CAAZ,CCojBP;ADpjBJ;AAAA,GADD,CCmjBC;ADpjBF;;AAIA0B,OAAOE,KAAP,CAAa,YAAb,EACC;AAAAsK,UAAQ;ACwjBL,WDxjBQ,KAAKC,MAAL,CAAY,WAAZ,CCwjBR;ADxjBH;AACA6C,UAAQ;AC0jBL,WD1jBQ,CACV3N,OAAOkK,SAAP,CAAiB,OAAjB,EAA0B,EAA1B,EAA8B,EAA9B,CADU,EAEVlK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,EAAnC,EAAuC,EAAvC,CAFU,EAGVlK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC,CAHU,CC0jBR;AD3jBH;AAAA,CADD;AAQA7J,OAAOE,KAAP,CAAa,QAAb,EAAuB;ACyjBrB,SDxjBD;AAAAsK,YAAQ;AC0jBH,aD1jBM,KAAKC,MAAL,CAAY,OAAZ,CC0jBN;AD1jBL;AAAA,GCwjBC;ADzjBF,2H;;;;;;;;;;;;AE5MA,IAAA+C,aAAA;AAAA,IAAAC,UAAA,GAAAA,OAAA,cAAAC,IAAA;AAAA,WAAApP,IAAA,GAAA0D,IAAA,KAAAa,MAAA,EAAAvE,IAAA0D,CAAA,EAAA1D,GAAA;AAAA,QAAAA,KAAA,aAAAA,CAAA,MAAAoP,IAAA,SAAApP,CAAA;AAAA;;AAAA;AAAA;AAAA,ICEEU,QAAQ,GAAGA,KDFb;;AAAA,IAAGW,OAAOC,QAAV;AAECI,SAAO2N,cAAP,CAAsB;AACrB,SAAOhO,OAAOwE,MAAP,EAAP;ACII,aDJwB,KAAKsG,MAAL,CAAY,OAAZ,CCIxB;ADJJ;ACMI,aDNiD,KAAKmD,IAAL,ECMjD;AACD;ADRJ;AAEA5N,SAAO6N,aAAP,CAAqB;AACpB,QAAA3L,GAAA;AAAAX;;AACA,QAAAW,MAAqBnC,cAArB,EAAqB0N,QAAA/I,IAAA,CACpB7G,EAAEiQ,IAAF,CAAOjQ,EAAEkQ,OAAF,CAAUlQ,EAAE6D,IAAF,CAAOb,OAAP,CAAV,EAA2B,UAACvC,CAAD;ACS/B,aDRFT,EAAEO,IAAF,CAAOqK,MAAP,EAAe,UAAC9F,CAAD;ACSX,eDTkBA,EAAE+F,KAAF,KAAWpK,CCS7B;ADTJ,SAAoCJ,ICQlC;ADTI,MAAP,CADoB,EAAAgE,GAAA,KAArB;ACcI,aDdJlC,OAAOgO,EAAP,CAAU,GAAV,CCcI;AACD;ADjBJ;AAMAR,kBAAgB,CACf,CAAC,MAAD,EAAS;ACeH,WDfMzP,ICeN;ADfN,IADe,EAEf,CAAC,QAAD,EAAW;ACkBL,WDlBQ,IAAIyO,YAAJ,CAAiBxO,OAAO+B,cAAP,CAAjB,CCkBR;ADlBN,IAFe,EAGf,CAAC,OAAD,EAAU,UAACb,GAAD;ACqBJ,WDrBaD,MAAMC,GAAN,CCqBb;ADrBN,IAHe,EAIf,CAAC,UAAD,EAAa;ACwBP,WDxBUsB,QAAQC,GAAR,CAAY,UAAZ,CCwBV;ADxBN,IAJe,EAKf,CAAC,MAAD,EAAS,UAACnB,IAAD;AC2BH,WD3BaA,QAAS0E,OAAO1E,IAAP,EAAa6H,MAAb,CAAoB,YAApB,CC2BtB;AD3BN,IALe,EAMf,CAAC,QAAD,EAAW,UAAChJ,GAAD;AC8BL,WD9Bc,QAAQgK,QAAQhK,GAAR,EAAagJ,MAAb,CAAoB,KAApB,CC8BtB;AD9BN,IANe,EAOf,CAAC,YAAD,EAAe,UAAC9G,KAAD;ACiCT,WDjCoBD,WAAWC,KAAX,CCiCpB;ADjCN,IAPe,EAQf,CAAC,WAAD,EAAc,UAAC4M,GAAD;ACoCR,WDpCiBgB,KAAKC,SAAL,CAAejB,GAAf,CCoCjB;ADpCN,IARe,EASf,CAAC,WAAD,EAAc,UAAC9O,GAAD;ACuCR,WDvCiBN,EAAE2J,SAAF,CAAYrJ,GAAZ,CCuCjB;ADvCN,IATe,EAUf,CAAC,SAAD,EAAY;AC0CN,WD1CSyH,OC0CT;AD1CN,IAVe,EAWf,CAAC,SAAD,EAAY,UAACwE,GAAD;AC6CN,WD7CevM,EAAEsQ,OAAF,CAAU/D,GAAV,CC6Cf;AD7CN,IAXe,EAYf,CAAC,QAAD,EAAW,UAACA,GAAD,EAAMgE,GAAN,EAAWC,IAAX;ACgDL,WDhDyBxQ,EAAEyQ,MAAF,CAASlE,GAAT,EAAc,UAAC9L,CAAD;ACiDrC,aDjD4C,CAACA,EAAE8D,OAAF,CAAU5C,OAAV,ECiD7C;ADjDuB,MCgDzB;ADhDN,IAZe,EAaf,CAAC,QAAD,EAAW,UAAC+O,CAAD,EAAIC,CAAJ;ACqDL,WDrDeD,MAAKC,CCqDpB;ADrDN,IAbe,EAcf,CAAC,SAAD,EAAY,UAACD,CAAD,EAAIC,CAAJ;ACwDN,WDxDgBD,MAAOC,CCwDvB;ADxDN,IAde,EAef,CAAC,MAAD,EAAS,UAACC,MAAD,EAASlQ,KAAT,EAAgBmQ,KAAhB;AC2DH,WD3D6BzQ,KAAKwQ,MAAL,EAAalQ,KAAb,EAAoBmQ,KAApB,CC2D7B;AD3DN,IAfe,EAgBf,CAAC,OAAD,EAAU,UAACD,MAAD,EAASlQ,KAAT,EAAgBmQ,KAAhB;AC8DJ,WD9D8BlQ,MAAMiQ,MAAN,EAAclQ,KAAd,EAAqBmQ,KAArB,CC8D9B;AD9DN,IAhBe,EAiBf,CAAC,SAAD,EAAY,UAAC1N,IAAD;ACiEN,WDjEgBjB,mBAAkBiB,ICiElC;ADjEN,IAjBe,EAkBf,CAAC,WAAD,EAAc,UAACA,IAAD;ACoER,WDpEkBD,UAAUC,IAAV,CCoElB;ADpEN,IAlBe,EAmBf,CAAC,UAAD,EAAa,UAACA,IAAD;ACuEP,WDvEiBC,SAASD,IAAT,CCuEjB;ADvEN,IAnBe,EAoBf,CAAC,UAAD,EAAa,UAACvC,EAAD;AC0EP,WD1EeZ,EAAE2J,SAAF,CAAYrG,SAAS1C,EAAT,CAAZ,CC0Ef;AD1EN,IApBe,CAAhB;;AAsBAZ,IAAE2D,GAAF,CAAMgM,aAAN,EAAqB,UAAClP,CAAD;AC6ElB,WD7EyBqQ,SAASC,cAAT,CAAAC,KAAA,CAAAF,QAAA,EAAwBrQ,CAAxB,CC6EzB;AD7EH;;AAEAqQ,WAASpH,IAAT,CAAcuH,MAAd,CACC;AAAA,wBAAoB,UAACC,KAAD;AACnB,UAAAC,IAAA;;AAAA,UAAGD,MAAME,GAAN,KAAa,OAAhB;AACCD,eAAOD,MAAMG,MAAN,CAAa3Q,KAApB;;AACA,YAAGyQ,KAAKnM,MAAL,GAAc,CAAjB;AC+EM,iBD9ELrC,QAAQmB,GAAR,CAAY,QAAZ,EAAsBqN,IAAtB,CC8EK;ADjFP;ACmFI;ADpFL;AAAA,GADD;AAOAL,WAASQ,MAAT,CAAgBC,UAAhB,CAA2B;AAC1B5O,YAAQmB,GAAR,CAAY,OAAZ,EAAqB,EAArB;ACkFE,WDjFFnB,QAAQmB,GAAR,CAAY,MAAZ,EAAoB,CAApB,CCiFE;ADnFH;AAIAgN,WAASU,IAAT,CAAcC,OAAd,CACC;AAAAC,WAAO;ACkFH,aDjFH1R,EAAE2R,OAAF,CAAU3R,EAAEkQ,OAAF,CAAUlQ,EAAE6D,IAAF,CAAOb,OAAP,CAAV,EAA2B,UAACvC,CAAD;AACpC,YAAAF,IAAA;AAAAA,eAAOP,EAAEO,IAAF,CAAOqK,MAAP,EAAe,UAAC9F,CAAD;ACmFhB,iBDnFuBA,EAAE+F,KAAF,KAAWpK,CCmFlC;ADnFC,UAAP;ACqFI,eDpFJT,EAAE2D,GAAF,CAAMpD,KAAKF,IAAX,EAAiB,UAACyE,CAAD;ACqFX,iBDrFkB9E,EAAEO,IAAF,CAAOwH,OAAP,EAAgB,UAAC7C,CAAD;ACsFhC,mBDtFuCA,EAAE/B,IAAF,KAAU2B,CCsFjD;ADtFgB,YCqFlB;ADrFN,UCoFI;ADtFK,QAAV,CCiFG;ADlFJ;AAIA8M,cAAU;AACT,UAAArR,IAAA;AAAAA,aAAOP,EAAEO,IAAF,CAAOwH,OAAP,EAAgB,UAACtH,CAAD;AC4FlB,eD5FyBA,EAAE0C,IAAF,KAAUjB,cC4FnC;AD5FE,QAAP;AC8FG,aAAO,CAAC3B,QAAQ,IAAR,GD7FXA,KAAMyH,IC6FK,GD7FL,MC6FI,KD7FIhI,EAAE2J,SAAF,CAAYzH,cAAZ,CC6FX;ADnGJ;AAOA2P,WAAO;AC+FH,aD/FM1L,SAASmD,MAAT,CAAgB,KAAhB,CC+FN;ADtGJ;AAAA,GADD;AAUAwH,WAASU,IAAT,CAAcP,MAAd,CACC;AAAA,qBAAiB;ACiGb,aDjGgBnP,OAAOgQ,MAAP,ECiGhB;ADjGJ;AAAA,GADD;AAGAhB,WAASxI,MAAT,CAAgBmJ,OAAhB,CACC;AAAAM,WAAO;ACmGH,aDlGH;AAAAzJ,gBAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,EAA+B,QAA/B,EAAyC,eAAzC,EAA0D,WAA1D,CAAR;AACA0J,eAAO,CAAC,OAAD,EAAU,MAAV,EAAkB,SAAlB,EAA6B,aAA7B,EAA4C,YAA5C,EAA0D,QAA1D,EAAoE,MAApE,CADP;AAEArN,eAAO,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,OAA5B,EAAqC,MAArC,CAFP;AAGAC,eAAO,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,CAHP;AAIAC,cAAM,CAAC,OAAD,EAAU,QAAV,EAAoB,WAApB,EAAiC,MAAjC,EAAyC,OAAzC,EAAkD,QAAlD,EAA4D,QAA5D,EAAsE,OAAtE,CAJN;AAKAiG,eAAO,CAAC,SAAD,EAAY,QAAZ,EAAsB,YAAtB,EAAoC,mBAApC,EAAyD,gBAAzD,EAA2E,KAA3E,CALP;AAMA4C,eAAO,CAAC,eAAD,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,YAAlC,EAAgD,OAAhD,EAAyD,QAAzD,EAAmE,MAAnE,CANP;AAOAuE,uBAAe,CAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB,CAPf;AAQAC,sBAAc,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CARd;AASAC,sBAAc,CAAC,OAAD,EAAU,OAAV,CATd;AAUAC,qBAAa,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,MAA5B,EAAoC,QAApC;AAVb,OCkGG;ADnGJ;AAYA/P,WAAO;ACsGH,aDtGMH,cCsGN;ADlHJ;AAaAmQ,cAAU;AACT,UAAGnQ,mBAAkB,OAArB;AACC,YAAGK,WAAW,OAAX,CAAH;ACwGM,iBDxGqB,QCwGrB;ADxGN;AC0GM,iBD1GmC,QC0GnC;AD3GP;AAAA;AC8GK,eD3GJ,kBC2GI;AACD;AD7HL;AAkBA+P,UAAM,UAAC7Q,IAAD;AC8GF,aD9GY0E,SAASzE,IAAT,CAAcD,IAAd,EAAoB,OAApB,IAA+B,QC8G3C;ADhIJ;AAmBA8Q,gBAAY;ACgHR,aDhHWpQ,OAAOC,OAAP,GAAiBK,MAAjB,CAAwB2E,KAAxB,IAAiClF,mBAAkB,OCgH9D;ADnIJ;AAoBAsQ,oBAAgB;AACf,cAAOtQ,cAAP;AAAA,aACM,OADN;ACmHO,iBDlHY,UCkHZ;;ADnHP,aAEM,OAFN;ACqHO,iBDnHY,SCmHZ;ADrHP;AArBD;AAwBAW,aAAS;ACsHL,aDtHQA,SCsHR;AD9IJ;AAyBA4P,aAAS;ACwHL,aDxHQ9P,QAAQC,GAAR,CAAY,SAAZ,CCwHR;ADjJJ;AA0BA8P,gBAAY;AACX,UAAAnG,GAAA;AAAAA,YAAM,CAAC,iBAAD,EAAoB,OAApB,EAA6B,gBAA7B,EAA+C,UAA/C,EAA2D,UAA3D,EAAuE,UAAvE,EAAmF,OAAnF,EAA4F,OAA5F,EAAqG,MAArG,EAA6G,KAA7G,EAAoH,QAApH,EAA8H,QAA9H,CAAN;;AACA,YAAO1J,aAAcA,UAAUmD,SAA/B;AC2HK,eD1HJuG,GC0HI;AD3HL,aAEK,IAAOvM,EAAE2S,KAAF,CAAQ7Q,OAAOmB,IAAP,GAAcQ,QAAtB,EAAgC,GAAhC,EAAqC,CAArC,MAA2C,IAAlD;AC2HA,eD1HJ8I,IAAIpL,KAAJ,CAAI,CAAJ,EAAI,CAAAoL,IAAAvH,MAAA,WAAJ,CC0HI;AACD;AD1JL;AAgCA4N,gBAAY,UAACrG,GAAD;AC6HR,aD7HiBvM,EAAEsQ,OAAF,CAAUtQ,EAAEsM,MAAF,CAASC,GAAT,EAAc,UAAC9L,CAAD;AAC5C,YAAAF,IAAA;AAAAA,eAAOP,EAAEO,IAAF,CAAOC,QAAQ6J,MAAf,EAAuB,UAACvF,CAAD;AC+HvB,iBD9HNA,EAAE0E,KAAF,KAAWxJ,EAAE2J,SAAF,CAAY3G,QAAQiJ,KAAR,CAAc,CAAd,CAAZ,CC8HL;AD/HA,UAAP;ACiIK,eD/HLxL,EAAE4J,MAAF,KAAY9J,KAAKG,KC+HZ;ADlIyB,QAAV,CC6HjB;AD7JJ;AAoCAmS,cAAU;ACkIN,aDlIS7P,QAAQiJ,KCkIjB;ADtKJ;AAqCA6G,eAAW,UAACxS,GAAD;ACoIP,aDpIgB,QAAQgK,QAAQhK,MAAI,KAAZ,EAAmBgJ,MAAnB,CAA0B,KAA1B,CCoIxB;ADzKJ;AAsCAyJ,YAAQ;ACsIJ,aDtIO/S,EAAE2D,GAAF,CAAMX,QAAQiJ,KAAd,EAAqB,UAACxL,CAAD;ACuI1B,eDtILT,EAAEO,IAAF,CAAOC,QAAQ6J,MAAf,EAAuB,UAACvF,CAAD;ACuIhB,iBDvIuBrE,MAAKT,EAAEoM,SAAF,CAAYtH,EAAE0E,KAAd,CCuI5B;ADvIP,UCsIK;ADvIK,QCsIP;AD5KJ;AAwCAwJ,aAAS;AACR,UAAAzG,GAAA,EAAA0G,MAAA,EAAAC,MAAA,EAAAC,IAAA,EAAA7G,MAAA,EAAA8G,OAAA,EAAA3M,GAAA,EAAA0G,OAAA,EAAAkG,IAAA,EAAAhP,GAAA,EAAA0F,IAAA,EAAAuJ,MAAA,EAAAxH,QAAA,EAAAC,GAAA;;AAAA,UAAGxJ,WAAW,OAAX,CAAH;AACCuJ,mBAAW;AAAA1E,iBAAOZ,SAASjE,WAAW,OAAX,CAAT;AAAP,SAAX;AACA4K,kBAAU;AAAAuC,kBAAQ;AAAAtI,mBAAO,CAAP;AAAUsB,mBAAO;AAAjB;AAAR,SAAV;AACA6D,cAAM,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAAN;;AACA,YAAAlI,MAA4BnC,cAA5B,EAA4B0N,QAAA/I,IAAA,CAAkB0F,GAAlB,EAAAlI,GAAA,MAA5B;AAAA8I,kBAAQuC,MAAR,CAAe5E,KAAf,GAAuB,CAAvB;ACoJK;;ADnJLiB,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmCF,QAAnC,EAA6CqB,OAA7C,CAAN;;AACA,YAAGpB,IAAIG,KAAJ,EAAH;ACqJM,iBDrJchM,KAAKoI,MAAL,CAAY9E,OAAZ,ECqJd;AD3JP;AAAA,aAOK,IAAGd,QAAH;AACJuQ,iBAAS;AAAA,gCAAsB;AAAAM,sBAAU,IAAV;AAAgBC,oBAAQ,OAAK9Q,QAAL,GAAc;AAAtC;AAAtB,SAAT;AACAwQ,iBAAS;AAAA9L,iBAAOZ,SAAS9D,QAAT;AAAP,SAAT;AACAoJ,mBAAW;AAAA2H,eAAK,CAACR,MAAD,EAASC,MAAT;AAAL,SAAX;AACA/F,kBAAU;AAAAuC,kBAAQ;AAAAtI,mBAAO,CAAP;AAAUsB,mBAAO;AAAjB;AAAR,SAAV;AACAqD,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmCF,QAAnC,EAA6CqB,OAA7C,CAAN;;AACA,YAAGpB,IAAIG,KAAJ,EAAH;ACqKM,iBDrKchM,KAAKoI,MAAL,CAAY/H,IAAZ,GAAmBM,KAAnB,ECqKd;AD3KF;AAAA,aAOA,IAAGmC,QAAQiJ,KAAX;AACJxF,cAAM,IAAI7E,IAAJ,EAAN;AAAkByR,eAAO,IAAIzR,IAAJ,CAAS6E,IAAIiN,OAAJ,KAAc,CAAvB,CAAP;AAClBN,kBAAUpT,EAAE2D,GAAF,CAAMX,QAAQiJ,KAAd,EAAqB,UAACxL,CAAD;AAC9B,cAAAF,IAAA;AAAAA,iBAAOP,EAAEO,IAAF,CAAOC,QAAQ6J,MAAf,EAAuB,UAACvF,CAAD;ACyKvB,mBDzK8BrE,MAAKT,EAAEoM,SAAF,CAAYtH,EAAE0E,KAAd,CCyKnC;ADzKA,YAAP;AC2KK,iBD1KLjJ,KAAKG,KC0KA;AD5KI,UAAV;AAGAoL,mBAAW;AAAAhB,iBAAO;AAAA6I,wBACjB;AAAAtJ,sBAAQ;AAAAuJ,qBAAKR;AAAL,eAAR;AACA7O,uBAAS;AAAAsP,qBAAKR;AAAL;AADT;AADiB;AAAP,SAAX;AAGAtH,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmCF,QAAnC,EAA6C,EAA7C,CAAN;;AACA,YAAGC,IAAIG,KAAJ,EAAH;AACCI,mBAAStM,EAAEsM,MAAF,CAASpM,KAAKoI,MAAL,CAAY/H,IAAZ,GAAmBM,KAAnB,EAAT,EAAqC,UAACJ,CAAD;AAC7C,gBAAAiQ,CAAA,EAAAC,CAAA,EAAAmD,CAAA,EAAAf,MAAA;;AAAArC,gBAAI;AAAG,kBAAA3G,IAAA;ACuLC,qBAAOA,ODvLRtJ,EAAEqK,KAAF,CAAQrK,EAAEqK,KAAF,CAAQ9F,MAAR,GAAe,CAAvB,EAA0BqF,MCuLlB,EDvLRuF,QAAA/I,IAAA,CAAoCuM,OAApC,EAAArJ,IAAA,MCuLC;ADvLJ,aAAJ;;AACA4G,gBAAI;ACyLI,qBDzLD,CAAIlQ,EAAEqK,KAAF,CAAQrK,EAAEqK,KAAF,CAAQ9F,MAAR,GAAe,CAAvB,EAA0BP,KAA1B,CAAgCiB,KCyLnC;ADzLJ,aAAJ;;AACAqN,qBAASpQ,QAAQC,GAAR,CAAY,QAAZ,CAAT;;AACAkR,gBAAI;AC2LI,qBD3LDrT,EAAEqK,KAAF,CAAQrK,EAAEqK,KAAF,CAAQ9F,MAAR,GAAe,CAAvB,EAA0BqF,MAA1B,KAAoC0I,MC2LnC;AD3LJ,aAAJ;;AACA,gBAAGA,MAAH;AC6LQ,qBD7LOpC,OAAQmD,GC6Lf;AD7LR;AC+LQ,qBD/LwBpD,OAAQC,GC+LhC;AACD;ADrMC,YAAT;ACuMK,iBDjML3Q,EAAEyQ,MAAF,CAASnE,MAAT,EAAiB,UAAC7L,CAAD;ACkMV,mBDlMiBA,EAAEqK,KAAF,CAAQrK,EAAEqK,KAAF,CAAQ9F,MAAR,GAAe,CAAvB,EAA0BT,OCkM3C;ADlMP,YCiMK;ADjNF;AAAA,aAiBA,IAAGrC,mBAAkB,OAArB;AACJ4J,mBAAW;AAAAhB,iBAAO;AAAA6I,wBAAY;AAAAF,mBAAK,CAAC;AAAA,gCAAgB;AAAAM,uBAAK;AAAL;AAAhB,eAAD;AAAL;AAAZ;AAAP,SAAX;AACAhI,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmCF,QAAnC,EAA6C,EAA7C,CAAN;;AACA,YAAGC,IAAIG,KAAJ,EAAH;ACiNM,iBDjNchM,KAAKoI,MAAL,CAAY/H,IAAZ,GAAmBM,KAAnB,ECiNd;ADpNF;AAAA,aAIA,KAAAkJ,OAAG7H,cAAH,MAAsB,OAAtB,IAAG6H,SAA4B,OAA/B,IAAGA,SAAqC,MAAxC;AACJoJ,eAAO;AAAA,0BAAgB;AAAhB,SAAP;AACAA,aAAKjR,cAAL,IAAuB;AAAA8R,mBAAS,IAAT;AAAeL,sBAAY;AAAAtF,mBAAO;AAAA2F,uBAAS;AAAT;AAAP;AAA3B,SAAvB;AACAV,iBAAS;AAAAxI,iBAAO;AAAA6I,wBAAYR;AAAZ;AAAP,SAAT;AACApH,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmCsH,MAAnC,EAA2C,EAA3C,CAAN;;AACA,YAAGvH,IAAIG,KAAJ,EAAH;ACgOM,iBDhOchM,KAAKoI,MAAL,CAAY/H,IAAZ,GAAmBM,KAAnB,ECgOd;ADrOF;ACuOD;ADnTL;AAAA,GADD;AAoFAiQ,WAASxI,MAAT,CAAgB2I,MAAhB,CACC;AAAA,uBAAmB;AAClB,UAAAgD,KAAA;AAAAtR,cAAQmB,GAAR,CAAY,UAAZ,EAAwB,CAAInB,QAAQC,GAAR,CAAY,UAAZ,CAA5B;;AACA,UAAGM,UAAU,OAAV,CAAH;AAA0BP,gBAAQmB,GAAR,CAAY,SAAZ,EAAuB,IAAvB;ACsOtB;;ADrOJmQ,cAAQ;AACP,YAAA5T,IAAA;AAAAkH,UAAE,uBAAF,EAA2B2M,OAA3B,CAAmC,OAAnC;;AACA,YAAGhS,mBAAkB,OAArB;AACClC,YAAE2D,GAAF,CAAM,CAAC,YAAD,EAAe,QAAf,EAAyB,QAAzB,EAAmC,SAAnC,CAAN,EAAqD,UAAClD,CAAD;AACpD8G,cAAE,0BAAwB9G,CAAxB,GAA0B,IAA5B,EAAkC0T,OAAlC,CAA0C9Q,IAAI,GAAJ,EAASrD,EAAE2J,SAAF,CAAYlJ,CAAZ,CAAT,CAA1C;;AACA,gBAAGoC,SAAH;AACC0E,gBAAE,iBAAe9G,CAAf,GAAiB,YAAjB,GAA8BoC,UAAUpC,CAAV,CAA9B,GAA2C,IAA7C,EAAmD2T,IAAnD,CAAwD;AAAAC,yBAAS;AAAT,eAAxD;AC0OO,qBDzOP9M,EAAE,iBAAe9G,CAAf,GAAiB,IAAnB,EAAyB2T,IAAzB,CAA8B;AAAAE,0BAAU;AAAV,eAA9B,CCyOO;AAGD;ADhPR;;AAKAtU,YAAE2D,GAAF,CAAM,CAAC,iBAAD,CAAN,EAA2B,UAAClD,CAAD;AC8OpB,mBD7ON8G,EAAE,oBAAkB9G,CAAlB,GAAoB,IAAtB,EAA4BH,GAA5B,CAAgCuC,UAAUpC,CAAV,CAAhC,CC6OM;AD9OP;ACgPI;;AD9OLJ,eAAO,CAAC,YAAD,EAAe,SAAf,EAA0B,OAA1B,EAAmC,OAAnC,EAA4C,YAA5C,EAA0D,OAA1D,EAAmE,WAAnE,CAAP;;AACA,YAAG6B,mBAAkB,OAArB;ACgPM,iBDhP4BlC,EAAE2D,GAAF,CAAMtD,IAAN,EAAY,UAACI,CAAD;ACiPtC,mBDhPP8G,EAAE,gCAA8B9G,CAA9B,GAAgC,IAAlC,EAAwC0T,OAAxC,CAAgD9Q,IAAI,GAAJ,EAASrD,EAAE2J,SAAF,CAAYlJ,CAAZ,CAAT,CAAhD,CCgPO;ADjP0B,YCgP5B;AAGD;AD9PE,OAAR;;AAaAqB,aAAOyS,UAAP,CAAkBN,KAAlB,EAAyB,IAAzB;AACAnS,aAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,EAAnC,EAAuC,EAAvC;ACoPG,aDnPHrJ,QAAQmB,GAAR,CAAY,OAAZ,EAAqBqC,QAArB,CCmPG;ADrQJ;AAmBA,qBAAiB;ACqPb,aDpPHhE,OAAOgO,EAAP,CAAU,MAAMjO,cAAN,GAAuB,GAAvB,GAA6B,KAAKkF,KAA5C,CCoPG;ADxQJ;AAqBA,oBAAgB;AAAG1D;ACuPf,aDvP2BvB,OAAOgO,EAAP,CAAUjO,cAAV,CCuP3B;AD5QJ;AAsBA,mBAAe;AACd,UAAAsS,MAAA;AAAAA,eACC;AAAAC,eAAO,aAAP;AACAC,iBAAS;AADT,OADD;AC6PG,aD1PH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;AC4P1B,iBD1PNzM,QAAQC,IAAR,EC0PM;AACD;AD7PN,QC0PG;ADpRJ;AA6BA,sBAAkB;AACjB,UAAAoM,MAAA;AAAAA,eACC;AAAAC,eAAO,uBAAP;AACAC,iBAAS;AADT,OADD;ACkQG,aD/PH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAqBA,EAArB;ACiQ1B,iBDjQ0BzM,QAAQa,OAAR,ECiQ1B;AACD;ADlQN,QC+PG;ADhSJ;AAkCA,sBAAkB,UAACkI,KAAD;AACjB,UAAAsD,MAAA,EAAAK,KAAA;AAAAA,cAAQ7U,EAAE2D,GAAF,CAAM,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,CAAN,EAAuC,UAAClD,CAAD;ACsQ1C,eDrQJyQ,MAAMG,MAAN,CAAayD,UAAb,CAAwBrU,CAAxB,EAA2BsU,SCqQvB;ADtQG,QAAR;AAEAP,eACC;AAAAC,eAAO,wBAAP;AACAC,iBAAS;AADT,OADD;AC0QG,aDvQH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;AAChC,cAAGC,MAAM,CAAN,CAAH;AACC/S,mBAAO+E,IAAP,CAAAmK,KAAA,CAAAlP,MAAA,EAAY,cAAayH,MAAb,CAAapI,MAAA0F,IAAA,CAAAgO,MAAM1T,KAAN,CAAM,CAAN,EAAM,CAAN,EAAb,EAA6B,MAA7B,CAAZ;ACyQO,mBDxQPgH,QAAQoC,UAAR,CAAmBsK,MAAM,CAAN,CAAnB,EAA6BA,MAAM,CAAN,CAA7B,EAAuC,KAAvC,CCwQO;AD1QR;AAIC/S,mBAAO+E,IAAP,CAAY,UAAZ,EAAwBgO,MAAM,CAAN,CAAxB,EAAkC,KAAlC;ACyQO,mBDxQP1M,QAAQoC,UAAR,CAAmB,KAAnB,EAA0B,qBAA1B,CCwQO;AD9QwB;ACgR3B;ADhRN,QCuQG;AD/SJ;AA+CA,uBAAmB,UAAC2G,KAAD;AAClB,UAAAsD,MAAA,EAAAK,KAAA;AAAAA,cAAQ7U,EAAE2D,GAAF,CAAM,CAAC,QAAD,EAAW,SAAX,CAAN,EAA6B,UAAClD,CAAD;AC8QhC,eD7QJyQ,MAAMG,MAAN,CAAayD,UAAb,CAAwBrU,CAAxB,EAA2BsU,SC6QvB;AD9QG,QAAR;AAEAP,eACC;AAAAC,eAAO,uBAAP;AACAC,iBAAS;AADT,OADD;ACkRG,aD/QH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAA5Q,GAAA,EAAAsE,MAAA;;AAAA,YAAGsM,EAAH;AAChC9S,iBAAO+E,IAAP,CAAAmK,KAAA,CAAAlP,MAAA,EAAY,UAASyH,MAAT,CAASpI,MAAA0F,IAAA,CAAAgO,KAAA,CAAT,CAAZ;AACAvM,mBAASpI,KAAKoI,MAAL,CAAY9E,OAAZ,CAAoB;AAAA4D,mBAAOZ,SAASqO,MAAM,CAAN,CAAT;AAAP,WAApB,CAAT;AACA7Q,gBAAMhE,EAAEO,IAAF,CAAO+H,OAAOwC,KAAd,EAAqB,UAACrK,CAAD;ACoRnB,mBDpR0BA,EAAEwD,OAAF,KAAa4Q,MAAM,CAAN,CCoRvC;ADpRF,YAAN;ACsRM,iBDrRN1M,QAAQyB,QAAR,CAAiBiL,MAAM,CAAN,CAAjB,EAA2B7Q,GAA3B,CCqRM;AACD;AD1RN,QC+QG;ADpUJ;AA0DA,yBAAqB,UAACkN,KAAD;AACpB,UAAA2D,KAAA;AAAAA,cAAQ7U,EAAE2D,GAAF,CAAM,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,EAA+B,SAA/B,CAAN,EAAiD,UAAClD,CAAD;AC0RpD,eDzRJyQ,MAAMG,MAAN,CAAayD,UAAb,CAAwBrU,CAAxB,EAA2BsU,SCyRvB;AD1RG,QAAR;AC4RG,aD1RHC,iBAAiBC,MAAjB,CACC;AAAAP,iBAAS,wBAAT;AACAQ,kBAAU,UAACjO,GAAD,EAAMC,GAAN;AAAc,cAAAzE,MAAA;;AAAA,cAAGyE,IAAIiO,MAAP;AACvB1S,qBAAU,YAAW8G,MAAX,CAAWpI,MAAA0F,IAAA,CAAAgO,KAAA,CAAX,EAAqB,CAAA3N,IAAIxG,KAAJ,CAArB,CAAV;AC6RO,mBD5RPoB,OAAO+E,IAAP,CAAAmK,KAAA,CAAAlP,MAAA,EAAYX,MAAA0F,IAAA,CAAApE,MAAA,EAAA8G,MAAA,CAAW,WAACtC,GAAD,EAAMC,GAAN;AAAc,kBAAAkO,IAAA,EAAAhE,GAAA,EAAAsD,OAAA,EAAAhK,KAAA,EAAApK,GAAA;;AAAA,kBAAG4G,GAAH;AACpCwN,0BAAU,EAAV;;AACA,qBAAAtD,GAAA,2CAAAlK,GAAA;AC+RY5G,wBAAM4G,IAAIkK,GAAJ,CAAN;AD9RXsD,6BAAWrR,IAAI,GAAJ,EAAS+N,MAAM,IAAN,GAAa9Q,GAAtB,CAAX;AADD;;AAEA0U,iCAAiBN,OAAjB,CACC;AAAAD,yBAAO,iBAAP;AACAC,2BAASA;AADT,iBADD;AAGAhK,wBAAQ/H,QAAQC,GAAR,CAAY,OAAZ,KAAwB,EAAhC;AACAwS,uBAAOpV,EAAEqV,OAAF,CAAUrV,EAAEsV,OAAF,CAAUpO,GAAV,CAAV,CAAP;ACkSU,uBDjSVvE,QAAQmB,GAAR,CAAY,OAAZ,EAAsB3C,MAAA0F,IAAA,CAAA6D,KAAA,EAAAnB,MAAA,CAAU,CAACpI,MAAA0F,IAAA,CAAAgO,KAAA,EAAAtL,MAAA,CAAUpI,MAAA0F,IAAA,CAAAuO,IAAA,CAAV,CAAD,CAAV,CAAtB,CCiSU;AACD;AD3Sa,cAAX,CAAZ,CC4RO;AAiBD;ADhTP;AAAA,OADD,CC0RG;ADvVJ;AA2EA,uBAAmB;AAClB,UAAAG,OAAA;AAAAA,gBAAU,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,YAAhC,EAA8C,UAA9C,EAA0D,QAA1D,CAAV;AACApN,cAAQuC,KAAR,CAAe,CAAA6K,OAAA,EAAShM,MAAT,CAASpI,MAAA0F,IAAA,CAAAlE,QAAQC,GAAR,CAAY,OAAZ,EAAT,CAAf;ACySG,aDxSHD,QAAQmB,GAAR,CAAY,OAAZ,EAAqB,IAArB,CCwSG;ADtXJ;AA+EA,4BAAwB,UAACoN,KAAD;AACvB,UAAG,KAAKjN,OAAR;AACCtB,gBAAQmB,GAAR,CAAY,SAAZ,EAAuB,IAAvB;AACAnB,gBAAQmB,GAAR,CAAY,SAAZ,EAAuBC,QAAQ,IAAR,EAAc,KAAKE,OAAnB,CAAvB;AC0SG;;AACD,aD1SHsD,EAAE,UAAF,EAAciO,KAAd,CAAoB,MAApB,CC0SG;AD7XJ;AAoFA,sBAAkB;AACjB,UAAAhB,MAAA,EAAAiB,IAAA;AAAAA,aAAO,IAAP;AACAjB,eACC;AAAAC,eAAO,kBAAP;AACAC,iBAAS;AADT,OADD;ACgTG,aD7SH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;AC+S1B,iBD9SN9S,OAAO+E,IAAP,CAAY,SAAZ,EAAuBtE,WAAW,OAAX,CAAvB,EAA4CkT,KAAKxR,OAAjD,CC8SM;AACD;ADhTN,QC6SG;ADtYJ;AA2FA,sBAAkB,UAACiN,KAAD;ACkTd,aDjTHvO,QAAQmB,GAAR,CAAY,QAAZ,EAAsB0C,SAAS0K,MAAMG,MAAN,CAAazQ,EAAtB,CAAtB,CCiTG;AD7YJ;AA6FA,uBAAmB;AAClB,UAAA4T,MAAA;AAAAA,eACC;AAAAC,eAAO,cAAP;AACAC,iBAAS;AADT,OADD;ACuTG,aDpTH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;AAChC9S,iBAAO+E,IAAP,CAAY,UAAZ,EAAwBtE,WAAW,OAAX,CAAxB;ACsTM,iBDrTNJ,OAAOgO,EAAP,CAAU,MAAMjO,cAAhB,CCqTM;AACD;ADxTN,QCoTG;ADrZJ;AAAA,GADD;AAsGA4O,WAAQ,QAAR,EAAgBG,MAAhB,CACC;AAAA,oBAAgB,UAACC,KAAD,EAAQwE,QAAR;ACyTZ,aDxTHC,KAAKC,KAAL,CAAW1E,MAAMG,MAAN,CAAawE,KAAb,CAAmB,CAAnB,CAAX,EACC;AAAAC,gBAAQ,IAAR;AACAC,cAAM,UAACjP,MAAD;AACL,cAAAkP,IAAA,EAAAC,QAAA,EAAAnK,QAAA;AAAAkK,iBAAOlP,OAAOkP,IAAP,CAAY,CAAZ,CAAP;;AACA,cAAG9T,mBAAkB,OAArB;AACC4J,uBAAW;AAAA1E,qBAAOZ,SAASwP,KAAK5O,KAAd;AAAP,aAAX;AACA6O,uBAAW;AAAAvN,qBACV;AAAAC,8BAAc3I,EAAE2J,SAAF,CAAYqM,KAAKrN,YAAjB,CAAd;AACAuN,wBAAQlW,EAAE2J,SAAF,CAAYqM,KAAKE,MAAjB,CADR;AAEAlL,uBAA8BgL,KAAKhL,KAAL,GAAvBxE,SAASwP,KAAKhL,KAAd,CAAuB,GAAvB,MAFP;AAGAmL,sBAA+BH,KAAKG,IAAL,GAAzBnW,EAAE2J,SAAF,CAAYqM,KAAKG,IAAjB,CAAyB,GAAzB,MAHN;AAIAhL,uBAA8B6K,KAAK7K,KAAL,GAAvB3E,SAASwP,KAAK7K,KAAd,CAAuB,GAAvB,MAJP;AAKAJ,2BAAsCiL,KAAKjL,SAAL,GAA3BvE,SAASwP,KAAKjL,SAAd,CAA2B,GAA3B,MALX;AAMAE,4BAAwC+K,KAAK/K,UAAL,GAA5BzE,SAASwP,KAAK/K,UAAd,CAA4B,GAA5B,MANZ;AAOA5B,2BAAsCzH,KAAKgU,KAAL,CAAWI,KAAK3M,SAAhB,IAA3B,IAAIzH,IAAJ,CAASH,KAAK4H,SAAd,CAA2B,GAA3B,MAPX;AAQA+M,gCAAmDJ,KAAKI,cAAL,GAAnCpW,EAAE2J,SAAF,CAAYqM,KAAKI,cAAjB,CAAmC,GAAnC;AARhB;AADU,aAAX;ACwUM,mBD9TNtU,OAAO+E,IAAP,CAAY,QAAZ,EAAsB,QAAtB,EAAgCiF,QAAhC,EAA0CmK,QAA1C,CC8TM;AD1UP,iBAaK,IAAG/T,mBAAkB,WAArB;AACJ,gBAAG8T,KAAK9G,IAAR;AACCpD,yBAAW;AAAA3G,sBAAM6Q,KAAK7Q;AAAX,eAAX;AACA8Q,yBACC;AAAA/G,sBAAM1I,SAASwP,KAAK9G,IAAd,CAAN;AACA7C,sBAAM7F,SAASwP,KAAK3J,IAAd,CADN;AAEAgD,wBAAQ;AAFR,eADD;ACqUO,qBDjUPvN,OAAO+E,IAAP,CAAY,QAAZ,EAAsB,QAAtB,EAAgCiF,QAAhC,EAA0CmK,QAA1C,CCiUO;ADvUR,mBAOK,IAAGD,KAAK5Q,KAAR;AACJ0G,yBAAW;AAAA3G,sBAAMnF,EAAEoM,SAAF,CAAY4J,KAAK7Q,IAAjB;AAAN,eAAX;AACA8Q,yBACC;AAAA7Q,uBAAOoB,SAASwP,KAAK5Q,KAAd,CAAP;AACAZ,uBAAOxE,EAAEoM,SAAF,CAAY4J,KAAKxR,KAAjB,CADP;AAEA6K,wBAAQ;AAFR,eADD;AAIA2G,mBAAK7G,IAAL,KAAc8G,SAAS9G,IAAT,GAAgBnP,EAAE2J,SAAF,CAAYqM,KAAK7G,IAAjB,CAA9B;ACqUO,qBDpUPrN,OAAO+E,IAAP,CAAY,QAAZ,EAAsB,OAAtB,EAA+BiF,QAA/B,EAAyCmK,QAAzC,CCoUO;AD3UH,mBAQA,IAAGD,KAAKK,QAAR;AACJvU,qBAAO+E,IAAP,CAAY,SAAZ,EAAuBmP,IAAvB;ACqUO,qBDpUPlU,OAAO+E,IAAP,CAAY,SAAZ,EAAuBmP,KAAKvS,QAA5B,EAAsC,CAACuS,KAAKM,IAAN,CAAtC,EAAmDN,KAAKnL,KAAxD,CCoUO;ADtVJ;AAAA,iBAmBA,IAAG3I,mBAAkB,SAArB;AACJ4J,uBAAW;AAAA3G,oBAAM6Q,KAAK7Q;AAAX,aAAX;AACA8Q,uBACC;AAAAzR,qBAAOgC,SAASwP,KAAKxR,KAAd,CAAP;AACAgD,wBAAUzG,UADV;AAEA0G,qBAAO,CACN;AAAAC,yBAAS3G,UAAT;AACA2K,0BAAUsK,KAAKtK,QADf;AAEA6K,sBAAM/P,SAASwP,KAAKO,IAAd,CAFN;AAGAC,0BAAUhQ,SAASwP,KAAKQ,QAAd,CAHV;AAIAC,0BAAUjQ,SAASwP,KAAKS,QAAd,CAJV;AAKAjS,uBAAOgC,SAASwP,KAAKxR,KAAd,CALP;AAMAkS,sBAAMlQ,SAASwP,KAAKU,IAAd,CANN;AAOAC,4BAAY,IAAI/U,IAAJ,CAASoU,KAAKW,UAAd,CAPZ;AAQAC,uBAAO,IAAIhV,IAAJ,CAASoU,KAAKY,KAAd,CARP;AASAC,uBAAOb,KAAKa,KAAL,IAAc,EATrB;AAUAC,yBAASd,KAAKc,OAVd;AAWAC,2BAAWvQ,SAASwP,KAAKe,SAAd,CAXX;AAYAtL,wBAAQjF,SAASwP,KAAKvK,MAAd,CAZR;AAaAuL,yBAAShB,KAAKgB;AAbd,eADM;AAFP,aADD;AC6VM,mBD1UNhB,KAAK7Q,IAAL,IAAcrD,OAAO+E,IAAP,CAAY,QAAZ,EAAsB,QAAtB,EAAgCiF,QAAhC,EAA0CmK,QAA1C,EAAoD,OAApD,CC0UR;AACD;ADnYP;AAAA,OADD,CCwTG;ADzTJ;AAAA,GADD;AA6DAnF,WAAQ,QAAR,EAAgBS,UAAhB,CAA2B;AC+UxB,WD9UFhK,EAAE,eAAF,EAAmB0P,eAAnB,EC8UE;AD/UH;AAGAnG,WAAQ,QAAR,EAAgBG,MAAhB,CACC;AAAA,qBAAiB;AAChB,UAAAiG,MAAA;AAAAA,eAAS3P,EAAE,eAAF,EAAmBjH,GAAnB,EAAT;ACgVG,aD/UHwB,OAAO+E,IAAP,CAAY,QAAZ,EAAsBqQ,MAAtB,EAA8B,UAACjQ,GAAD,EAAMwB,OAAN;AAAkB,YAAA0O,IAAA;;AAAA,YAAG1O,OAAH;AAC/C0O,iBAAO,IAAIC,IAAJ,CAAS,CAAC3O,OAAD,CAAT,EAAoB;AAAAoE,kBAAM;AAAN,WAApB,CAAP;ACoVM,iBDnVNwK,OAAOF,IAAP,EAAaD,SAAO,MAApB,CCmVM;AACD;ADtVN,QC+UG;ADjVJ;AAAA,GADD;AAOApG,WAASvL,MAAT,CAAgBkM,OAAhB,CACC;AAAAM,WAAO;ACuVH,aDtVH;AAAAvG,gBAAQ,CAAC,cAAD,EAAiB,aAAjB,EAAgC,aAAhC,EAA+C,aAA/C,CAAR;AACA/D,eAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,YAAtB,EAAoC,MAApC,EAA4C,MAA5C,EAAoD,WAApD,EAAiE,WAAjE,EAA8E,SAA9E,CADP;AAEAuH,gBAAQ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,UAAlC,EAA8C,aAA9C,EAA6D,SAA7D;AAFR,OCsVG;ADvVJ;AAIAqD,cAAU;AAAG,UAAG9P,WAAW,UAAX,CAAH;AC2VP,eD3VsC,kBC2VtC;AD3VO;AC6VP,eD7V8D,QC6V9D;AACD;ADlWL;AAKA+U,aAAS,UAAC7V,IAAD;AAAU;AAAA,eACbD,UAAUC,IAAV,IAAkB,CADL;ACkWX,iBDjWuB,KCiWvB;;ADlWW,eAEbD,UAAUC,IAAV,IAAkB,CAFL;ACoWX,iBDlWuB,QCkWvB;;ADpWW,eAGbD,UAAUC,IAAV,IAAkB,EAHL;ACsWX,iBDnWwB,QCmWxB;;ADtWW;ACwWX,iBDpWF,OCoWE;ADxWW;AALnB;AAUA8V,aAAS;AACR,UAAAC,IAAA,EAAAC,OAAA,EAAAxE,MAAA,EAAAnH,QAAA,EAAAC,GAAA;;AAAAyL,aAAO,UAAC/W,CAAD;ACwWF,eDxWST,EAAE2D,GAAF,CAAMlD,CAAN,EAAS,UAACqE,CAAD;AACtB,cAAA4S,OAAA;;AAAAA,oBAAU,UAACvU,IAAD;AC0WF,mBD1WYnD,EAAE2F,MAAF,CAASb,EAAE2C,KAAX,EAAmB,UAACkQ,GAAD,EAAMC,CAAN;AC2W7B,qBD3WyCD,MAAMC,EAAEzU,IAAF,CC2W/C;AD3W4B,aAAlB,EAA+C,CAA/C,CC0WZ;AD1WE,WAAV;;AACA2B,YAAE+S,SAAF,GAAc;AAAApB,sBAAUiB,QAAQ,UAAR,CAAV;AAA+BlB,sBAAUkB,QAAQ,UAAR;AAAzC,WAAd;ACiXM,iBDhXN5S,CCgXM;ADnXO,UCwWT;ADxWE,OAAP;;AAIA,UAAGvC,WAAW,UAAX,CAAH;AACCuJ,mBAAW;AAAAtE,oBAAUjF,WAAW,UAAX;AAAV,SAAX;AACAwJ,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmCF,QAAnC,EAA6C,EAA7C,CAAN;;AACA,YAAGC,IAAIG,KAAJ,EAAH;ACqXM,iBDrXchM,KAAKqF,MAAL,CAAY/B,OAAZ,ECqXd;ADxXP;AAAA,aAIK,IAAGd,QAAH;AACJuQ,iBAAS;AAAA9N,gBAAM;AAAAoO,sBAAU,IAAV;AAAgBC,oBAAQ,OAAK9Q,QAAL,GAAc;AAAtC;AAAN,SAAT;AACA+U,kBAAU;AAAA/P,mBAAShF;AAAT,SAAV;AACAoJ,mBAAW;AAAA2H,eAAK,CAACR,MAAD,EAASwE,OAAT;AAAL,SAAX;AACA1L,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmCF,QAAnC,EAA6C,EAA7C,CAAN;ACgYI,eD/XJC,IAAIG,KAAJ,MAAgBsL,KAAKtX,KAAKqF,MAAL,CAAYhF,IAAZ,GAAmBM,KAAnB,EAAL,CC+XZ;ADpYA;AAOJkL,cAAMjK,OAAOkK,SAAP,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,EAAnC,EAAuC,EAAvC,CAAN;ACgYI,eD/XJD,IAAIG,KAAJ,MAAgBsL,KAAKtX,KAAKqF,MAAL,CAAYhF,IAAZ,GAAmBM,KAAnB,EAAL,CC+XZ;AACD;AD3ZL;AA4BAiX,aAAS;ACkYL,aDlYQnV,QAAQC,GAAR,CAAY,SAAZ,CCkYR;AD9ZJ;AA6BAmV,eAAW;ACoYP,aDpYUpV,QAAQC,GAAR,CAAY,WAAZ,CCoYV;ADjaJ;AA8BAoV,kBAAc;ACsYV,aDtYa,IAAIrJ,YAAJ,CAAiBxO,OAAO6O,MAAxB,CCsYb;ADpaJ;AAAA,GADD;AAiCA8B,WAASvL,MAAT,CAAgB0L,MAAhB,CACC;AAAA,uBAAmB;ACwYf,aDvYHtO,QAAQmB,GAAR,CAAY,UAAZ,EAAwB,CAAInB,QAAQC,GAAR,CAAY,UAAZ,CAA5B,CCuYG;ADxYJ;AAEA,qBAAiB;ACyYb,aDzYgBT,OAAOgO,EAAP,CAAU,MAAMjO,cAAN,GAAuB,GAAvB,GAA6B,KAAKsF,QAA5C,CCyYhB;AD3YJ;AAGA,0BAAsB;AACrB,UAAAwO,IAAA;AAAAA,aAAO,IAAP;;AACA,UAAGhT,QAAQ8L,OAAX;AC4YK,eD3YJkG,iBAAiBC,MAAjB,CACC;AAAAP,mBAAS,0BAAT;AACAQ,oBAAU,UAACjO,GAAD,EAAMC,GAAN;AAAc,gBAAGA,IAAIiO,MAAP;AC6Yf,qBD5YRrT,OAAO+E,IAAP,CAAY,UAAZ,EAAwBtE,WAAW,UAAX,CAAxB,EAAgDyT,KAAKtO,OAArD,EAA8DlB,SAASU,IAAIxG,KAAb,CAA9D,CC4YQ;AACD;AD/YR;AAAA,SADD,CC2YI;AAQD;ADzZL;AAUA,uBAAmB;AAClB,UAAA8T,MAAA,EAAAiB,IAAA;AAAAA,aAAO,IAAP;AACAjB,eACC;AAAAC,eAAO,kBAAP;AACAC,iBAAS;AADT,OADD;ACsZG,aDnZH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;ACqZ1B,iBDpZN9S,OAAO+E,IAAP,CAAY,UAAZ,EAAwB4O,KAAKjO,QAA7B,CCoZM;AACD;ADtZN,QCmZG;ADlaJ;AAiBA,sBAAkB;AACjB,UAAAgN,MAAA,EAAAiB,IAAA;AAAAA,aAAO,IAAP;AACAjB,eAAS;AAAAC,eAAO,QAAP;AAAiBC,iBAAS;AAA1B,OAAT;AC4ZG,aD3ZH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;AC6Z1B,iBD5ZN9S,OAAO+E,IAAP,CAAY,SAAZ,EAAuBtE,WAAW,UAAX,CAAvB,EAA+CkT,KAAK/N,OAApD,CC4ZM;AACD;AD9ZN,QC2ZG;AD/aJ;AAsBA,sBAAkB;AACjB,UAAAuQ,UAAA;AAAAtV,cAAQmB,GAAR,CAAY,SAAZ,EAAuB,IAAvB;AACAmU,mBAAa1Q,EAAE,aAAF,EAAiB2Q,EAAjB,CAAoB,UAApB,CAAb;ACiaG,aDhaHpW,OAAO+E,IAAP,CAAY,SAAZ,EAAuBoR,UAAvB,EAAmC,UAAChR,GAAD,EAAMC,GAAN;AAClC,YAAGA,GAAH;ACiaM,iBDjaMvE,QAAQmB,GAAR,CAAY,SAAZ,EAAuBoD,GAAvB,CCiaN;AACD;ADnaN,QCgaG;ADzbJ;AA2BA,wBAAoB;AACnB,UAAAsN,MAAA,EAAAiB,IAAA;AAAAA,aAAO,IAAP;AACAjB,eAAS;AAAAC,eAAO,YAAP;AAAqBC,iBAAS;AAA9B,OAAT;ACyaG,aDxaH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;AC0a1B,iBDzaN9S,OAAO+E,IAAP,CAAY,YAAZ,EAA0B4O,IAA1B,CCyaM;AACD;AD3aN,QCwaG;ADtcJ;AAgCA,wBAAoB;AACnB,WAAOvS,UAAU,SAAV,CAAP;AC6aK,eD5aJP,QAAQmB,GAAR,CAAY,WAAZ,EAAyB,CAAInB,QAAQC,GAAR,CAAY,WAAZ,CAA7B,CC4aI;AACD;AD/cL;AAmCA,wBAAoB;AACnB,UAAA6S,IAAA;;AAAA,UAAGvS,UAAU,SAAV,CAAH;AACC,aAAO,KAAKiV,OAAZ;AACC1C,iBAAO,IAAP;ACgbK,iBD/aLT,iBAAiBC,MAAjB,CACC;AAAAP,qBAAS,mBAAT;AACAQ,sBAAU,UAACjO,GAAD,EAAMC,GAAN;AAAc,kBAAGA,IAAIiO,MAAP;ACibd,uBDhbTrT,OAAO+E,IAAP,CAAY,QAAZ,EAAsBtE,WAAW,UAAX,CAAtB,EAA8CkT,KAAK7N,QAAnD,EAA6DpB,SAASU,IAAIxG,KAAb,CAA7D,CCgbS;AACD;ADnbT;AAAA,WADD,CC+aK;ADlbP;AC2bI;AD/dL;AAAA,GADD;AA6CAoQ,WAASsH,SAAT,CAAmB3G,OAAnB,CACC;AAAAlO,WAAO;ACubH,aDvbMzB,OAAOyB,KAAP,CAAahD,IAAb,GAAoBM,KAApB,ECubN;ADvbJ;AACAwX,YAAQ;ACybJ,aDzbO1V,QAAQC,GAAR,CAAY,QAAZ,CCybP;AD1bJ;AAEA0V,cAAU;AC2bN,aD3bS,CAAC,SAAD,EAAY,OAAZ,CC2bT;AD7bJ;AAGAjO,YAAQ;AC6bJ,aD7bO7J,QAAQ6J,MC6bf;ADhcJ;AAIAkO,kBAAc;AC+bV,aD/ba,IAAI5J,YAAJ,CAAiBxO,OAAOgM,MAAxB,CC+bb;ADncJ;AAKAqM,iBAAa;ACicT,aDjcY,IAAI7J,YAAJ,CAAiBxO,OAAO8E,KAAxB,CCicZ;ADtcJ;AAMAwT,aAAS;AACR,UAAAtL,OAAA,EAAArB,QAAA;AAAAA,iBAAW;AAAAuD,gBAAQ;AAAR,OAAX;AACAlC,gBAAU;AAAArK,eAAOA,OAAP;AAAgB4V,cAAM3V,SAASD;AAA/B,OAAV;ACycG,aDxcH5C,KAAKiM,MAAL,CAAY5L,IAAZ,CAAiBuL,QAAjB,EAA2BqB,OAA3B,EAAoCtM,KAApC,ECwcG;ADjdJ;AAUA8X,YAAQ;AACP,UAAAxL,OAAA,EAAArB,QAAA;AAAAA,iBAAW;AAAAuD,gBAAQ;AAAR,OAAX;AACAlC,gBAAU;AAAArK,eAAOA,OAAP;AAAgB4V,cAAM3V,SAASD;AAA/B,OAAV;ACgdG,aD/cH5C,KAAK+E,KAAL,CAAW1E,IAAX,CAAgBuL,QAAhB,EAA0BqB,OAA1B,EAAmCtM,KAAnC,EC+cG;AD5dJ;AAAA,GADD;AAgBAiQ,WAASsH,SAAT,CAAmBnH,MAAnB,CACC;AAAA,wBAAoB,UAACC,KAAD;AACnB,UAAAlN,GAAA,EAAA6G,KAAA,EAAAwN,MAAA,EAAAhM,IAAA,EAAA9K,MAAA,EAAA+U,IAAA,EAAAsC,OAAA;AAAA1H,YAAM2H,cAAN;AACAR,eAAS1V,QAAQC,GAAR,CAAY,QAAZ,CAAT;;AACA,WAAOyV,MAAP;AACCrU,cACC;AAAAP,oBAAUyN,MAAMG,MAAN,CAAayH,QAAb,CAAsBrV,QAAtB,CAA+B/C,KAAzC;AACA2V,oBAAUnF,MAAMG,MAAN,CAAayH,QAAb,CAAsBzC,QAAtB,CAA+B3V;AADzC,SADD;AAGAa,iBAAS2P,MAAMG,MAAN,CAAayH,QAAb,CAAsBvX,MAAtB,CAA6Bb,KAAtC;;AACA,YAAGsD,IAAIqS,QAAJ,KAAgB9U,MAAnB;AACCO,iBAAO+E,IAAP,CAAY,SAAZ,EAAuB7C,GAAvB;ACmdK,iBDldLuD,EAAE,OAAF,EAAWjH,GAAX,CAAe,EAAf,CCkdK;ADpdN;ACsdM,iBDldL+G,YAAYC,KAAZ,CAAkB,sBAAlB,EAA0C,IAA1C,CCkdK;AD3dP;AAAA;AAWCgP,eAAO/O,EAAE,4BAAF,EAAgC2J,MAAMG,MAAtC,EAA8C,CAA9C,EAAiDzQ,EAAxD;AACAiK,gBAAQtD,EAAE,6BAAF,EAAiC2J,MAAMG,MAAvC,EAA+C,CAA/C,EAAkDzQ,EAA1D;AACAyL,eAAO9E,EAAE,4BAAF,EAAgC2J,MAAMG,MAAtC,EAA8C,CAA9C,CAAP;AACAuH,kBAAU,CAAOvM,IAAP,GAAiBiK,IAAjB,GAA2BtW,EAAEoM,SAAF,CAAYC,KAAKzL,EAAjB,CAArC;ACodI,eDndJkB,OAAO+E,IAAP,CAAY,SAAZ,EAAuBwR,OAAOvX,GAA9B,EAAmC,CAAC8X,OAAD,CAAnC,EAA8C/N,KAA9C,CCmdI;AACD;ADteL;AAmBA,qBAAiB;ACsdb,aDtdgBlI,QAAQmB,GAAR,CAAY,QAAZ,EAAsB,IAAtB,CCsdhB;ADzeJ;AAoBA,uBAAmB;AAClB,UAAA0Q,MAAA,EAAAiB,IAAA;AAAAA,aAAO,IAAP;AACAjB,eACC;AAAAC,eAAO,eAAP;AACAC,iBAAS;AADT,OADD;AC4dG,aDzdH,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;AC2d1B,iBD1dN9S,OAAO+E,IAAP,CAAY,QAAZ,EAAsB4O,KAAK3U,GAA3B,CC0dM;AACD;AD5dN,QCydG;ADlfJ;AA2BA,oBAAgB;AC8dZ,aD9de4C,UC8df;ADzfJ;AA4BA,uBAAmB,UAACwN,KAAD;AAClB,UAAAsD,MAAA,EAAAhQ,KAAA,EAAAiR,IAAA;AAAAjR,cAAQ0M,MAAM6H,aAAN,CAAoBC,SAA5B;AACAxE,eACC;AAAAC,eAAO,WAAWzU,EAAE2J,SAAF,CAAYnF,KAAZ,CAAlB;AACAkQ,iBAAS,2BAAyBlQ,KAAzB,GAA+B;AADxC,OADD;AAGAiR,aAAO,IAAP;ACkeG,aDjeH,IAAId,YAAJ,CAAiBH,MAAjB,EAAyB,UAACI,EAAD;AAAQ,YAAGA,EAAH;ACme1B,iBDleN9S,OAAO+E,IAAP,CAAY,UAAZ,EAAwBrC,KAAxB,EAA+BiR,KAAK3U,GAApC,CCkeM;AACD;ADpeN,QCieG;ADngBJ;AAAA,GADD;AAsCAgQ,WAASmI,KAAT,CAAe1H,UAAf,CAA0B;ACsevB,WDreFhK,EAAE,SAAF,EAAa2R,MAAb,ECqeE;ADteH;AAGApI,WAASmI,KAAT,CAAehI,MAAf,CACC;AAAA,mBAAe,UAACC,KAAD;AACd,UAAAmF,QAAA,EAAA5S,QAAA;AAAAyN,YAAM2H,cAAN;AACApV,iBAAWyN,MAAMG,MAAN,CAAayH,QAAb,CAAsBrV,QAAtB,CAA+B/C,KAA1C;AACA2V,iBAAWnF,MAAMG,MAAN,CAAayH,QAAb,CAAsBzC,QAAtB,CAA+B3V,KAA1C;ACueG,aDteHoB,OAAOqX,iBAAP,CAAyB1V,QAAzB,EAAmC4S,QAAnC,EAA6C,UAACpP,GAAD;AAC5C,YAAGA,GAAH;ACueM,iBDteLI,YAAYC,KAAZ,CAAkB,2BAAlB,EAA+C,IAA/C,CCseK;ADveN;ACyeM,iBDteLnF,OAAOgO,EAAP,CAAU,MAAMnQ,EAAE6D,IAAF,CAAOb,OAAP,EAAgB,CAAhB,CAAhB,CCseK;AACD;AD3eN,QCseG;AD1eJ;AAAA,GADD;AAWA8N,WAASsI,UAAT,CAAoB3H,OAApB,CACC;AAAA4H,YAAQ,UAAClW,IAAD;AACP,UAAAmW,GAAA,EAAAnV,CAAA,EAAAa,MAAA,EAAAlC,KAAA,EAAAiC,OAAA;AAAAjC,cAAQH,QAAQC,GAAR,CAAY,OAAZ,CAAR;AACAoC,eAAS9E,KAAKiD,IAAL,EAAW5C,IAAX,GAAkBM,KAAlB,GAA0BmE,MAAnC;AACAsU,YAAM,CAACtU,SAAUA,SAASlC,KAApB,IAA8BA,KAApC;AC2eG,aD1eH;AC2eKiC,kBAAU,EAAV;;AACA,aAAK,IAAIZ,IAAI,CAAb,EAAgB,KAAKmV,GAAL,GAAWnV,KAAKmV,GAAhB,GAAsBnV,KAAKmV,GAA3C,EAAgD,KAAKA,GAAL,GAAWnV,GAAX,GAAiBA,GAAjE,EAAqE;AAAEY,kBAAQM,IAAR,CAAalB,CAAb;AAAkB;;AACzF,eAAOY,OAAP;AACD,OD9eJ,CC8eMiM,KD9eN,CC8eY,ID9eZ,CC0eG;AD9eJ;AAAA,GADD;AAOAF,WAASsI,UAAT,CAAoBnI,MAApB,CACC;AAAA,mBAAe;ACgfX,aDhfctO,QAAQmB,GAAR,CAAY,MAAZ,EAAoB,IAAIf,MAAxB,CCgfd;ADhfJ;AACA,mBAAe;ACkfX,aDlfcJ,QAAQmB,GAAR,CAAY,MAAZ,EAAoB,CAAC,CAAD,GAAKf,MAAzB,CCkfd;ADnfJ;AAEA,kBAAc,UAACmO,KAAD;ACofV,aDnfHvO,QAAQmB,GAAR,CAAY,MAAZ,EAAoB0C,SAAS0K,MAAMG,MAAN,CAAakI,SAAtB,CAApB,CCmfG;ADtfJ;AAAA,GADD;AAMAzI,WAAS0I,MAAT,CAAgB/H,OAAhB,CACC;AAAAgI,WAAO;ACqfH,aDrfM9W,QAAQC,GAAR,CAAY,SAAZ,CCqfN;ADrfJ;AAAA,GADD;AAGAkO,WAAS0I,MAAT,CAAgBvI,MAAhB,CACC;AAAA,yBAAqB,UAACC,KAAD,EAAQwE,QAAR;AACpB,UAAA7I,IAAA;AAAAA,aAAOqE,MAAMG,MAAN,CAAayD,UAAb,CAAwBrT,IAAxB,CAA6BsT,SAApC;ACwfG,aDvfHxN,EAAE,MAAIsF,IAAN,EAAY6M,SAAZ,CAAsB;AAAAC,eAAO,UAAC3D,IAAD;AAC5B,cAAAsD,GAAA,EAAAM,KAAA;AAAAjX,kBAAQmB,GAAR,CAAY+I,OAAK,MAAjB,EAAyBmJ,KAAKkB,MAA9B;AACA0C,kBAAQjX,QAAQC,GAAR,CAAY,WAAZ,CAAR;AACA0W,gBAAM3W,QAAQC,GAAR,CAAY,SAAZ,CAAN;;AACA,cAAGgX,SAAUN,GAAb;AC0fQ,mBDzfPxX,OAAO+E,IAAP,CAAY,QAAZ,EAAsB6O,SAASM,IAAT,CAAcxR,KAApC,EAA2CoV,KAA3C,EAAkDN,GAAlD,EAAuD,UAACrS,GAAD,EAAMC,GAAN;AC0f9C,qBDzfRA,OAAQvE,QAAQmB,GAAR,CAAY,SAAZ,EAAuBoD,GAAvB,CCyfA;AD1fT,cCyfO;AAGD;ADjgBc;AAAA,OAAtB,CCufG;ADzfJ;AASA,qBAAiB,UAACgK,KAAD,EAAQwE,QAAR;AAChB,UAAAyB,IAAA,EAAA1O,OAAA;AAAAA,gBAAUoR,UAAUC,WAAV,CAAsBnX,QAAQC,GAAR,CAAY,SAAZ,EAAuBmX,GAA7C,EAAkD,IAAlD,EAAwD,GAAxD,CAAV;AACA5C,aAAO,IAAIC,IAAJ,CAAS,CAAC3O,OAAD,CAAT,EAAoB;AAAAoE,cAAM;AAAN,OAApB,CAAP;ACkgBG,aDjgBHwK,OAAOF,IAAP,EAAazB,SAASM,IAAT,CAAcxR,KAAd,GAAoB,MAAjC,CCigBG;AD7gBJ;AAAA,GADD;ACihBA,4H;;;;;;;;;;;;AC9+BD,IAAG1C,OAAOkY,QAAV;AAEClY,SAAOmY,OAAP,CAAe;ACAZ,WDCF/Z,KAAKoI,MAAL,CAAY4R,YAAZ,CAAyB;AAAA,4BAAsB;AAAtB,KAAzB,CCDE;ADAH;AAGApY,SAAOqY,OAAP,CAAe,MAAf,EAAuB,UAAChX,IAAD,EAAO2I,QAAP,EAAiBqB,OAAjB;ACEpB,WDDFjN,KAAKiD,IAAL,EAAW5C,IAAX,CAAgBuL,QAAhB,EAA0BqB,OAA1B,CCCE;ADFH;AAGArL,SAAOqY,OAAP,CAAe,OAAf,EAAwB,UAACrO,QAAD,EAAWqB,OAAX;ACErB,WDDFrL,OAAOyB,KAAP,CAAahD,IAAb,CAAkBuL,QAAlB,EAA4BqB,OAA5B,CCCE;ADFH;AAGArL,SAAOsY,OAAP,CACC;AAAA,cAAQ,UAACjX,IAAD,EAAO2I,QAAP,EAAiBmK,QAAjB,EAA2BoE,OAA3B;AACP,UAAA9Z,IAAA,EAAA6O,GAAA,EAAAmB,GAAA;AAAAhQ,aAAOL,KAAKiD,IAAL,EAAWK,OAAX,CAAmBsI,QAAnB,CAAP;;AACA,WAAOvL,IAAP;ACGK,eDFJL,KAAKiD,IAAL,EAAWmX,MAAX,CAAkBxO,QAAlB,EAA4B;AAAAyO,gBAAMtE;AAAN,SAA5B,CCEI;ADHL,aAEK,IAAGoE,OAAH;AACJ9J,cAAM;AAAAzP,eAAKP,KAAKO;AAAV,SAAN;AACAsO,cAAM,EAAN;AAAUA,YAAIiL,OAAJ,IAAepE,SAASoE,OAAT,EAAkB,CAAlB,CAAf;ACQN,eDPJna,KAAKiD,IAAL,EAAWqX,MAAX,CAAkBjK,GAAlB,EAAuB;AAAAkK,iBAAOrL;AAAP,SAAvB,CCOI;AAGD;ADjBL;AASA,cAAQ,UAAC5K,KAAD;AACP,UAAA+H,GAAA,EAAAhM,IAAA;;AAAA,UAAGiE,UAAS,OAAZ;AACC+H,cAAMvM,EAAE2D,GAAF,CAAMzD,KAAKoI,MAAL,CAAY/H,IAAZ,GAAmBM,KAAnB,EAAN,EAAkC,UAACJ,CAAD;ACYlC,iBDXL;AAAA2G,mBAAO3G,EAAE2G,KAAT;AACAuB,0BAAclI,EAAEiI,KAAF,CAAQC;AADtB,WCWK;ADZA,UAAN;AADD,aAIK,IAAGnE,UAAS,OAAZ;AACJjE,eAAO,UAACsM,IAAD,EAAOnM,KAAP;AACN,cAAAsD,GAAA;AAAAA,gBAAMhE,EAAEO,IAAF,CAAOC,QAAQqM,IAAR,CAAP,EAAsB,UAACpM,CAAD;ACgBrB,mBDhB4BA,EAAEC,KAAF,KAAWA,KCgBvC;ADhBD,YAAN;ACkBK,iBDjBLsD,IAAIwF,KCiBC;ADnBC,SAAP;;AAGA+C,cAAMvM,EAAEkQ,OAAF,CAAUhQ,KAAKoI,MAAL,CAAY/H,IAAZ,GAAmBM,KAAnB,EAAV,EAAsC,UAACJ,CAAD;AAC3C,cAAGA,EAAEqK,KAAL;ACmBO,mBDnBS9K,EAAE2D,GAAF,CAAMlD,EAAEqK,KAAR,EAAe,UAAChG,CAAD;ACoBtB,qBDnBR;AAAAsC,uBAAO3G,EAAE2G,KAAT;AACAuB,8BAAclI,EAAEiI,KAAF,CAAQC,YADtB;AAEA1E,yBAASa,EAAEb,OAFX;AAGAgC,4BAAY1F,KAAK,YAAL,EAAmBuE,EAAEmB,UAArB,CAHZ;AAIAoE,wBAAQ9J,KAAK,QAAL,EAAeuE,EAAEuF,MAAjB;AAJR,eCmBQ;ADpBO,cCmBT;AASD;AD7BD,UAAN;AAJI,aAWA,IAAG7F,UAAS,SAAZ;AACJ+H,cAAMvM,EAAEkQ,OAAF,CAAUhQ,KAAKqF,MAAL,CAAYhF,IAAZ,GAAmBM,KAAnB,EAAV,EAAsC,UAACJ,CAAD;ACyBtC,iBDxBLT,EAAE2D,GAAF,CAAMlD,EAAEgH,KAAR,EAAe,UAAC3C,CAAD;AACd,gBAAA4E,IAAA,EAAAgR,IAAA;AAAAA,mBAAO,CAAC,OAAD,EAAU,MAAV,CAAP;AACAA,mBAAO1a,EAAEwP,SAAF,CAAYkL,IAAZ,EAAkB1a,EAAE2D,GAAF,CAAM+W,IAAN,EAAY,UAACxV,CAAD;AC0B7B,qBD1BoCzE,EAAEyE,CAAF,CC0BpC;AD1BiB,cAAlB,CAAP;AACAwE,mBAAO,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,YAAxC,EAAsD,UAAtD,EAAkE,UAAlE,EAA8E,MAA9E,EAAsF,MAAtF,EAA8F,SAA9F,EAAyG,UAAzG,EAAqH,WAArH,CAAP;AACAA,mBAAO1J,EAAEwP,SAAF,CAAY9F,IAAZ,EAAkB1J,EAAE2D,GAAF,CAAM+F,IAAN,EAAY,UAACxE,CAAD;AC4B7B,qBD5BoCJ,EAAEI,CAAF,CC4BpC;AD5BiB,cAAlB,CAAP;AC8BM,mBD7BNlF,EAAE2H,MAAF,CAAS+S,IAAT,EAAehR,IAAf,CC6BM;ADlCP,YCwBK;ADzBA,UAAN;ACsCG;;AACD,aDhCHmQ,UAAUC,WAAV,CAAsBvN,GAAtB,EAA2B,IAA3B,EAAiC,GAAjC,CCgCG;ADjEJ;AAmCAoO,cAAU,UAACvT,KAAD,EAAQwT,KAAR;AACT,UAAA3E,QAAA,EAAAnK,QAAA;AAAAA,iBAAW;AAAA1E,eAAOZ,SAASY,KAAT;AAAP,OAAX;AACA6O,iBAAW;AAAAsE,cAAM;AAAA,4BAAkBK;AAAlB;AAAN,OAAX;ACwCG,aDvCH1a,KAAKoI,MAAL,CAAYkS,MAAZ,CAAmB1O,QAAnB,EAA6BmK,QAA7B,CCuCG;AD7EJ;AAwCAjQ,eAAW,UAACoB,KAAD,EAAQnD,OAAR,EAAiB2W,KAAjB;AACV,UAAA3E,QAAA,EAAAnK,QAAA;AAAAA,iBAAW;AAAA,yBAAiB7H,OAAjB;AAA0BmD,eAAOZ,SAASY,KAAT;AAAjC,OAAX;AACA6O,iBAAW;AAAAsE,cAAM;AAAA,+BAAqBK;AAArB;AAAN,OAAX;ACgDG,aD/CH1a,KAAKoI,MAAL,CAAYkS,MAAZ,CAAmB1O,QAAnB,EAA6BmK,QAA7B,CC+CG;AD1FJ;AA6CAjE,WAAO,UAAC5K,KAAD,EAAQnD,OAAR;AACN,UAAAgS,QAAA,EAAAnK,QAAA;AAAAA,iBAAW;AAAA,yBAAiB7H,OAAjB;AAA0BmD,eAAOZ,SAASY,KAAT;AAAjC,OAAX;AACA6O,iBAAW;AAAA,gCAAwB;AAAxB,OAAX;ACsDG,aDrDH/V,KAAKoI,MAAL,CAAYkS,MAAZ,CAAmB1O,QAAnB,EAA6B;AAAAyO,cAAMtE;AAAN,OAA7B,CCqDG;ADrGJ;AAkDA4E,aAAS,UAACzT,KAAD,EAAQnD,OAAR,EAAiBO,KAAjB,EAAwBsW,OAAxB,EAAiCzM,KAAjC;AACR,UAAA0M,QAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,IAAA,EAAAza,CAAA,EAAAqE,CAAA,EAAAI,CAAA,EAAAkM,GAAA,EAAAhN,GAAA,EAAAyF,IAAA,EAAAsR,IAAA,EAAAC,IAAA,EAAAtR,CAAA,EAAAmM,QAAA,EAAA2B,CAAA,EAAAyD,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAlX,GAAA,EAAA0F,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAuR,IAAA,EAAA1P,QAAA,EAAA2P,QAAA,EAAAC,QAAA;AAAA5P,iBAAW;AAAA1E,eAAOZ,SAASY,KAAT;AAAP,OAAX;AACA4T,mBAAa9a,KAAKoI,MAAL,CAAY9E,OAAZ,CAAoBsI,QAApB,CAAb;AACAzH,YAAA2W,WAAAlQ,KAAA;;AAAA,WAAAhB,IAAA,GAAA1F,MAAAC,IAAAW,MAAA,EAAA8E,IAAA1F,GAAA,EAAA0F,GAAA;AC4DKrJ,YAAI4D,IAAIyF,CAAJ,CAAJ;;AD3DJ,YAAGrJ,EAAEwD,OAAF,KAAaA,OAAhB;AAA6B,cAAGxD,EAAE+D,KAAF,CAAH;AAAiBuF,mBAAAtJ,EAAA+D,KAAA;;AAAA,iBAAAoT,IAAA,GAAA/N,OAAAE,KAAA/E,MAAA,EAAA4S,IAAA/N,IAAA,EAAA+N,GAAA;ACgEpC9S,kBAAIiF,KAAK6N,CAAL,CAAJ;;AD/DT,kBAAG9S,EAAE,OAAKN,KAAP,MAAiBsW,OAApB;AAAiChW,kBAAEuJ,KAAF,GAAUA,KAAV;ACkEvB;ADnEkB;AAA7B;ACsEK;ADvEN;;AAGA4H,iBAAW;AAAAnL,eAAOkQ,WAAWlQ;AAAlB,OAAX;AACA5K,WAAKoI,MAAL,CAAYkS,MAAZ,CAAmB1O,QAAnB,EAA6B;AAAAyO,cAAMtE;AAAN,OAA7B;AACAiF,aAAO,EAAP;;AACA,UAAG1W,UAAS,MAAZ;AAAwBwF,eAAAgR,WAAAlQ,KAAA;;AAAA,aAAAuQ,IAAA,GAAAF,OAAAnR,KAAAhF,MAAA,EAAAqW,IAAAF,IAAA,EAAAE,GAAA;AC6EjB5a,cAAIuJ,KAAKqR,CAAL,CAAJ;;AD5EN,cAAG5a,EAAEwD,OAAF,KAAaA,OAAhB;AAA6B,gBAAGxD,EAAEoE,IAAL;AAAeoF,qBAAAxJ,EAAAoE,IAAA;;AAAA,mBAAAyW,IAAA,GAAAF,OAAAnR,KAAAjF,MAAA,EAAAsW,IAAAF,IAAA,EAAAE,GAAA;ACiFhCxW,oBAAImF,KAAKqR,CAAL,CAAJ;;ADhFX,oBAAGxW,EAAEQ,MAAF,KAAYwV,OAAf;AACCG,8BAAY/a,KAAKqF,MAAL,CAAY/B,OAAZ,CAAoB;AAAA1C,yBAAKgE,EAAEK;AAAP,mBAApB,CAAZ;;AACA,uBAASD,IAAAqW,IAAA,GAAAC,OAAA1W,EAAAW,MAAT,EAAS,KAAA+V,IAAA,GAAAD,KAAAC,IAAA,GAAAD,KAAAC,IAAT,EAAStW,IAAA,KAAAsW,IAAA,KAAAD,CAAA,KAAAA,CAAT;AACCR,+BAAW/a,EAAEsM,MAAF,CAAS2O,UAAUxT,KAAnB,EAA0B,UAACtD,CAAD;ACoFtB,6BDpF6BA,EAAEqS,QAAF,GAAa,CCoF1C;ADpFJ,sBAAX;AACAkF,+BAAW1b,EAAEyQ,MAAF,CAASsK,QAAT,EAAmB,UAAC5W,CAAD;ACsFf,6BDtFsB,IAAIvC,IAAJ,CAASuC,EAAEyS,KAAX,EAAkBjV,OAAlB,ECsFtB;ADtFJ,sBAAX;AACA8Z,+BAAWzb,EAAEyQ,MAAF,CAASiL,QAAT,EAAmB,UAACvX,CAAD;ACwFf,6BDxFsB,IAAIvC,IAAJ,CAASuC,EAAEwS,UAAX,EAAuBhV,OAAvB,ECwFtB;ADxFJ,sBAAX;AACA8Z,6BAAS,CAAT,EAAYjF,QAAZ,IAAwB,CAAxB;AACApF,0BAAM6J,UAAU9V,IAAV,CAAe,CAAC,GAAD,GAAMsW,SAAS,CAAT,EAAY3E,OAAjC,CAAN;AACAoE,yBAAK9J,GAAL,MAAA8J,KAAK9J,GAAL,IAAc,CAAd;AAAiB8J,yBAAK9J,GAAL,KAAa,CAAb;AANlB;;AAOAtF,6BAAW;AAAAhL,yBAAKma,UAAUna;AAAf,mBAAX;AACAmV,6BAAW;AAAAsE,0BAAM;AAAA9S,6BAAOwT,UAAUxT;AAAjB;AAAN,mBAAX;AACAvH,uBAAKqF,MAAL,CAAYiV,MAAZ,CAAmB1O,QAAnB,EAA6BmK,QAA7B;ACkGW;AD9GgB;AAA7B;ACiHO;ADlHR;ACoHI;;ADtGJ,UAAQzR,UAAS,MAAjB;ACwGK,eDxGL0W,ICwGK;AACD;ADlLL;AA2EAS,cAAU,UAACnU,QAAD,EAAWE,OAAX,EAAoB8C,MAApB;AACT,UAAAyL,QAAA,EAAAnK,QAAA;AAAAA,iBAAW;AAAAtE,kBAAUA,QAAV;AAAoB,yBAAiBE;AAArC,OAAX;AACAuO,iBAAW;AAAA2F,cAAM;AAAA,8BAAoB,CAACpR,MAArB;AAA6B,8BAAoBA;AAAjD;AAAN,OAAX;ACmHG,aDlHHtK,KAAKqF,MAAL,CAAYiV,MAAZ,CAAmB1O,QAAnB,EAA6BmK,QAA7B,CCkHG;ADhMJ;AAgFA4F,cAAU,UAACzU,KAAD;ACmHN,aDlHHlH,KAAKoI,MAAL,CAAYwT,MAAZ,CAAmB;AAAA1U,eAAOZ,SAASY,KAAT;AAAP,OAAnB,CCkHG;ADnMJ;AAmFA2U,aAAS,UAAC3U,KAAD,EAAQnD,OAAR;AACR,UAAAgS,QAAA,EAAAnK,QAAA;AAAAA,iBAAW;AAAA1E,eAAOZ,SAASY,KAAT;AAAP,OAAX;AACA6O,iBAAW;AAAA+F,eAAO;AAAAlR,iBAAO;AAAA7G,qBAASA;AAAT;AAAP;AAAP,OAAX;AC8HG,aD7HH/D,KAAKoI,MAAL,CAAYkS,MAAZ,CAAmB1O,QAAnB,EAA6BmK,QAA7B,CC6HG;ADnNJ;AAwFAgG,aAAS,UAACrb,EAAD,EAAKoC,KAAL,EAAY6H,KAAZ,EAAmBwB,IAAnB;AACR,UAAAiK,IAAA;AAAAA,aAAOjK,QAAQrJ,KAAf;AC+HG,aD9HHkZ,MAAMC,eAAN,CAAsBvb,EAAtB,EAA0B0V,IAA1B,EAAgCzL,KAAhC,CC8HG;ADxNJ;AA4FAuR,YAAQ,UAACxb,EAAD;AACP,UAAAqV,QAAA,EAAAnK,QAAA;AAAAA,iBAAW;AAAAhL,aAAKF;AAAL,OAAX;AACAqV,iBAAW;AAAAsE,cAAM;AAAAvX,iBAAO;AAAP;AAAN,OAAX;ACsIG,aDrIHlB,OAAOyB,KAAP,CAAaiX,MAAb,CAAoB1O,QAApB,EAA8BmK,QAA9B,CCqIG;ADpOJ;AAiGAoG,aAAS,UAACrY,GAAD;AACR,UAAAzD,IAAA;AAAAA,aAAO+b,SAASC,kBAAT,CAA4BvY,IAAIP,QAAhC,CAAP;;AACA,UAAGlD,IAAH;AACC+b,iBAASE,WAAT,CAAqBjc,KAAKO,GAA1B,EAA+BkD,IAAIP,QAAnC;ACuII,eDtIJ6Y,SAASG,WAAT,CAAqBlc,KAAKO,GAA1B,EAA+BkD,IAAIqS,QAAnC,CCsII;ADxIL;AC0IK,eDtIJiG,SAASI,UAAT,CAAoB1Y,GAApB,CCsII;AACD;AD9OL;AAyGA2Y,cAAU,UAACnV,QAAD;ACwIN,aDvIHtH,KAAKqF,MAAL,CAAYuW,MAAZ,CAAmB;AAAAtU,kBAAUA;AAAV,OAAnB,CCuIG;ADjPJ;AA4GAoV,aAAS,UAACpV,QAAD,EAAWE,OAAX;AACR,UAAAuT,SAAA,EAAA4B,QAAA;AAAA5B,kBAAY/a,KAAKqF,MAAL,CAAY/B,OAAZ,CAAoB;AAAAgE,kBAAUA;AAAV,OAApB,CAAZ;AACAqV,iBAAW7c,EAAE8c,OAAF,CAAU7B,UAAUxT,KAApB,EAA2BzH,EAAEO,IAAF,CAAO0a,UAAUxT,KAAjB,EAAwB,UAAChH,CAAD;AC6IzD,eD5IJA,EAAEiH,OAAF,KAAaA,OC4IT;AD7IiC,QAA3B,CAAX;AC+IG,aD7IHxH,KAAKqF,MAAL,CAAYiV,MAAZ,CAAmB;AAAC1Z,aAAKma,UAAUna;AAAhB,OAAnB,EAAyC;AAAAyZ,cAAM;AAAA9S,iBAAOoV;AAAP;AAAN,OAAzC,CC6IG;AD7PJ;AAkHAE,cAAU,UAAC5Z,IAAD,EAAOvC,EAAP;AACT,UAAAoc,GAAA,EAAAzM,GAAA;AAAAA,YAAM;AAAAzP,aAAKF;AAAL,OAAN;AAAeoc,YAAM;AAAAzC,cAAM;AAAAlL,kBAAQ;AAAR;AAAN,OAAN;AC4JZ,aD3JHnP,KAAKiD,IAAL,EAAWqX,MAAX,CAAkBjK,GAAlB,EAAuByM,GAAvB,CC2JG;AD/QJ;AAsHAC,YAAQ,UAAC7V,KAAD;AACP,UAAA7G,IAAA,EAAA2c,IAAA,EAAAjH,QAAA,EAAA5R,GAAA,EAAAyH,QAAA;AAAAvL,aAAOL,KAAKoI,MAAL,CAAY9E,OAAZ,CAAoB;AAAA,iBAASgD,SAASY,KAAT;AAAT,OAApB,CAAP;AACA/C,YAAc9D,KAAKuK,KAAnB,EAAMoS,OAAA7Y,QAAAW,MAAA,KAAN;;AACA,UAAGkY,KAAKD,MAAR;AACCnR,mBAAW;AAAAhL,eAAKP,KAAKO;AAAV,SAAX;AACAmV,mBAAW;AAAAwE,iBAAO;AAAA3P,mBACjB;AAAA7G,uBAASlD,UAAT;AACAwD,uBAAS,IAAI3C,IAAJ,EADT;AAEAqE,0BAAYiX,KAAKjX,UAFjB;AAGAoE,sBAAQ6S,KAAKD,MAHb;AAIAjX,yBAAW,IAJX;AAKAvB,qBAAO;AAAAiB,uBAAO;AAAP;AALP;AADiB;AAAP,SAAX;AC8KI,eDvKJxF,KAAKoI,MAAL,CAAYkS,MAAZ,CAAmB1O,QAAnB,EAA6BmK,QAA7B,CCuKI;AACD;AD1SL;AAoIAuD,YAAQ,UAAChV,KAAD,EAAQoV,KAAR,EAAeN,GAAf;AACP,UAAA6D,IAAA,EAAA7Q,MAAA;;AAAAA,eAAS,UAACC,GAAD;AC0KJ,eD1KavM,EAAEsM,MAAF,CAASC,GAAT,EAAc,UAAC9L,CAAD;AAC/B,cAAA4D,GAAA;AC2KM,iBD3KN,IAAIzC,IAAJ,CAASgY,KAAT,KAAAvV,MAAkB,IAAIzC,IAAJ,CAASnB,EAAE8D,OAAX,CAAlB,KAAAF,MAAwC,IAAIzC,IAAJ,CAAS0X,GAAT,CC2KlC;AD5KW,UC0Kb;AD1KI,OAAT;;AAEA6D,aAAOnd,EAAEkQ,OAAF,CAAUhQ,KAAKoI,MAAL,CAAY/H,IAAZ,GAAmBM,KAAnB,EAAV,EAAsC,UAACJ,CAAD;AC8KxC,eD9K+CT,EAAE2D,GAAF,CAAM2I,OAAO7L,EAAEqK,KAAT,CAAN,EAAuB,UAAChG,CAAD;AAC1E,cAAAsK,GAAA;AAAAA,gBACC;AAAAhI,mBAAO3G,EAAE2G,KAAT;AACAuB,0BAAc3I,EAAE2J,SAAF,CAAYlJ,EAAEiI,KAAF,CAAQC,YAApB,CADd;AAEApE,qBAASO,EAAEP,OAFX;AAGA6Y,qBAAStY,EAAEyB,MAHX;AAIAN,wBAAY7F,KAAK,YAAL,EAAmB0E,EAAEmB,UAArB,EAAiCuD,KAJ7C;AAKA8B,qBAAYxG,EAAEwG,OAAF,GAAelL,KAAK,SAAL,EAAgB0E,EAAEwG,OAAlB,EAA2B9B,KAA1C,GAAqD,EALjE;AAMAa,oBAAQjK,KAAK,QAAL,EAAe0E,EAAEuF,MAAjB,EAAyBb,KANjC;AAOA6T,sBAAUvY,EAAEuY,QAAF,IAAc,GAPxB;AAQA3Y,sBAAU1E,EAAEkQ,OAAF,CAAU,CAAC,UAAD,EAAa,OAAb,EAAsB,OAAtB,CAAV,EAA0C,UAAChL,CAAD;AACnD,kBAAAoY,MAAA;AAAAA,uBAAStd,EAAEsM,MAAF,CAASxH,EAAEI,CAAF,CAAT,EAAe,UAACf,CAAD;ACiLd,uBDjLqBA,CCiLrB;ADjLD,gBAAT;ACmLQ,qBDlLRnE,EAAE2D,GAAF,CAAM2Z,MAAN,EAAc,UAACnZ,CAAD;ACmLJ,uBDnLW,MAAMnE,EAAE2J,SAAF,CAAYhJ,MAAM,OAAN,EAAewD,EAAEgB,IAAjB,EAAuBA,IAAnC,CCmLjB;ADnLV,gBCkLQ;ADpLC,cARV;AAWAC,mBAAO,QAAQN,EAAEL,KAAF,CAAQiB,KAXvB;AAYAW,qBAASvE,OAAOyB,KAAP,CAAaC,OAAb,CAAqB;AAAA1C,mBAAKgE,EAAEuB;AAAP,aAArB,EAAqC5C,QAZ9C;AAaA8H,oBAAWzG,EAAEyG,MAAF,GAAcnL,KAAK,QAAL,EAAe0E,EAAEyG,MAAjB,EAAyB/B,KAAvC,GAAkD,GAb7D;AAcA+T,uBAAc9c,EAAEqK,KAAF,CAAQ9F,MAAR,GAAiB,CAAjB,GAAwB,MAAxB,GAAoC;AAdlD,WADD;;AAgBA,cAAGR,UAAS,aAAZ;ACyLQ,mBDxLPxE,EAAEwd,IAAF,CAAOpO,GAAP,EAAY,CAAC,SAAD,EAAY,OAAZ,EAAqB,cAArB,EAAqC,YAArC,EAAmD,SAAnD,EAA8D,QAA9D,EAAwE,UAAxE,EAAoF,WAApF,CAAZ,CCwLO;ADzLR,iBAEK,IAAG5K,UAAS,YAAZ;ACyLG,mBDxLPxE,EAAEwd,IAAF,CAAOpO,GAAP,EAAY,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,cAAhC,EAAgD,QAAhD,EAA0D,UAA1D,EAAsE,UAAtE,EAAkF,OAAlF,EAA2F,SAA3F,CAAZ,CCwLO;ADzLH,iBAEA,IAAG5K,UAAS,aAAZ;ACyLG,mBDxLPxE,EAAEwd,IAAF,CAAOpO,GAAP,EAAY,CAAC,SAAD,EAAY,OAAZ,EAAqB,cAArB,EAAqC,SAArC,EAAgD,MAAhD,EAAwD,YAAxD,EAAsE,UAAtE,EAAkF,UAAlF,EAA8F,SAA9F,EAAyG,QAAzG,EAAmH,SAAnH,CAAZ,CCwLO;AACD;AD/M4C,UC8K/C;AD9KE,QAAP;ACkNG,aD3LH;AAAAmG,iBAASvV,EAAE2D,GAAF,CAAM3D,EAAE6D,IAAF,CAAOsZ,KAAK,CAAL,CAAP,CAAN,EAAuB,UAAC1c,CAAD;AC6LzB,iBD7LgCT,EAAE2J,SAAF,CAAYlJ,CAAZ,CC6LhC;AD7LE,UAAT;AACAyJ,cAAMlK,EAAE2D,GAAF,CAAMwZ,IAAN,EAAY,UAAC1c,CAAD;AC+LX,iBD/LkBT,EAAE4F,MAAF,CAASnF,CAAT,CC+LlB;AD/LD,UADN;AAEAsZ,aAAKoD;AAFL,OC2LG;ADzVJ;AAkKAM,kBAAc,UAACrW,KAAD;AACb,UAAQlH,KAAKoI,MAAL,CAAY9E,OAAZ,CAAoB;AAAA4D,eAAOZ,SAASY,KAAT;AAAP,OAApB,CAAR;ACoMK,eDpML,ICoMK;AACD;ADxWL;AAqKA0Q,aAAS,UAACG,UAAD;AACR,UAAAtQ,MAAA,EAAAF,KAAA,EAAAiW,MAAA,EAAAnN,GAAA,EAAAoN,MAAA;AAAApN,YAAM;AAAA,oBAAY;AAACsD,eAAK;AAAN,SAAZ;AAAsB,mBAAW;AAACE,eAAK;AAAN;AAAjC,OAAN;AACA4J,eAASzd,KAAKqF,MAAL,CAAYhF,IAAZ,CAAiB;AAAAkH,eAAO;AAAAkM,sBAAYpD;AAAZ;AAAP,OAAjB,EAAyC1P,KAAzC,EAAT;AACA8G,eAAS3H,EAAE2D,GAAF,CAAMga,MAAN,EAAc,UAACld,CAAD;ACkNlB,eDlNyBT,EAAE2D,GAAF,CAAMlD,EAAEgH,KAAR,EAAe,UAAC3C,CAAD;ACmNtC,iBDnN6C9E,EAAE2H,MAAF,CAAS7C,CAAT,EACnD;AAAA0C,sBAAU/G,EAAE+G,QAAZ;AAAsBrC,kBAAM1E,EAAE0E;AAA9B,WADmD,CCmN7C;ADnNuB,UCkNzB;ADlNI,QAAT;AAEAsC,cAAQzH,EAAEkQ,OAAF,CAAUyN,MAAV,EAAkB,UAACld,CAAD;ACwNrB,eDxN4BA,EAAEgH,KCwN9B;ADxNG,QAAR;AC0NG,aDzNHiW,SAAS1d,EAAEsM,MAAF,CAAS7E,KAAT,EAAgB,UAAChH,CAAD;AACxB,YAAAiQ,CAAA,EAAAC,CAAA;;AAAAD,YAAI;AC2NE,iBD3NC,IAAIlP,UAAUf,EAAEkW,UAAZ,CC2NL;AD3NF,SAAJ;;AACAhG,YAAI;AC6NE,iBD7NClQ,EAAEwX,UC6NH;AD7NF,SAAJ;;AACA,YAAGA,UAAH;AC+NM,iBD/NavH,OAAQC,GC+NrB;AD/NN;ACiOM,iBDjO8BD,GCiO9B;AACD;ADrOG,QCyNN;ADpYJ;AAgLAkN,gBAAY,UAAC5Z,GAAD;AACX,UAAAiX,SAAA,EAAAxa,CAAA,EAAA2D,GAAA,EAAA0F,CAAA,EAAAkT,GAAA,EAAA3Y,GAAA,EAAAkM,GAAA;AAAA0K,kBAAY/a,KAAKqF,MAAL,CAAY/B,OAAZ,CAAoB;AAAAgE,kBAAUxD,IAAIwD;AAAd,OAApB,CAAZ;AACAnD,YAAA4W,UAAAxT,KAAA;;AAAA,WAAAqC,IAAA,GAAA1F,MAAAC,IAAAW,MAAA,EAAA8E,IAAA1F,GAAA,EAAA0F,GAAA;ACwOKrJ,YAAI4D,IAAIyF,CAAJ,CAAJ;;ADvOJ,YAAGrJ,EAAEiH,OAAF,KAAa1D,IAAI0D,OAApB;AACCjH,YAAEod,OAAF,GAAY,IAAZ;ACyOI;AD3ON;;AAGAtN,YAAM;AAAAzP,aAAKma,UAAUna;AAAf,OAAN;AAA0Bkc,YAAM;AAAAvV,eAAOwT,UAAUxT;AAAjB,OAAN;ACgPvB,aD/OHvH,KAAKqF,MAAL,CAAYiV,MAAZ,CAAmBjK,GAAnB,EAAwB;AAAAgK,cAAMyC;AAAN,OAAxB,CC+OG;ADraJ;AAwLAhO,YAAQ,UAACxH,QAAD,EAAWI,QAAX,EAAqBuQ,OAArB;AACP,UAAA3M,MAAA,EAAA/K,CAAA,EAAA2D,GAAA,EAAA0F,CAAA,EAAAzF,GAAA;AAAAmH,eAAStL,KAAKqF,MAAL,CAAY/B,OAAZ,CAAoB;AAAAgE,kBAAUA;AAAV,OAApB,CAAT;AACAnD,YAAAmH,OAAAwD,MAAA;;AAAA,WAAAlF,IAAA,GAAA1F,MAAAC,IAAAW,MAAA,EAAA8E,IAAA1F,GAAA,EAAA0F,GAAA;ACsPKrJ,YAAI4D,IAAIyF,CAAJ,CAAJ;;ADrPJ,YAAGrJ,EAAEmH,QAAF,KAAcA,QAAjB;AACCnH,YAAEqd,QAAF,GAAa,KAAKxX,MAAlB;AACA7F,YAAE0X,OAAF,GAAYA,OAAZ;ACuPI;AD1PN;;AC4PG,aDxPHjY,KAAKqF,MAAL,CAAYiV,MAAZ,CAAmBhP,OAAO1K,GAA1B,EAA+B0K,MAA/B,CCwPG;ADtbJ;AAAA,GADD;AC0bA,2H","file":"/app.js","sourcesContent":["@_ = lodash\n@coll = {}; @schema = {}\n@look = (list, val) -> _.find selects[list], (i) -> i.value is val\n@look2 = (list, id) -> _.find coll[list].find().fetch(), (i) -> i._id is id\n@randomId = -> Math.random().toString(36).slice(2)\n@zeros = (num) ->\n\tsize = _.size _.toString num\n\t'0'.repeat(6-size) + _.toString num\n@monthDiff = (date) ->\n\tdiff = date.getTime() - (new Date()).getTime()\n\tdiff /= 1000 * 60 * 60 * 24 * 7 * 4\n\tMath.round diff\n\nif Meteor.isClient\n\n\t# SimpleSchema.debug = true\n\tAutoForm.setDefaultTemplate 'materialize'\n\t@currentRoute = -> Router.current().route.getName()\n\t@currentPar = (param) -> Router.current().params[param]\n\t@search = -> Session.get 'search'\n\t@formDoc = -> Session.get 'formDoc'\n\t@limit = -> Session.get 'limit'\n\t@page = -> Session.get 'page'\n\t@roles = -> Meteor.user().roles\n\t@userGroup = (name) -> roles()[name]\n\t@userRole = (name) -> roles()[currentRoute()][0] is name\n\t@tag = (tag, val) -> '<'+tag+'>'+val+'</'+tag+'>'\n\t@userName = (id) -> Meteor.users.findOne(_id: id).username\n\t@sessNull = -> _.map (_.tail _.keys Session.keys), (i) ->\n\t\tSession.set i, null\n\t\n","this._ = lodash;\n\nthis.coll = {};\n\nthis.schema = {};\n\nthis.look = function(list, val) {\n  return _.find(selects[list], function(i) {\n    return i.value === val;\n  });\n};\n\nthis.look2 = function(list, id) {\n  return _.find(coll[list].find().fetch(), function(i) {\n    return i._id === id;\n  });\n};\n\nthis.randomId = function() {\n  return Math.random().toString(36).slice(2);\n};\n\nthis.zeros = function(num) {\n  var size;\n  size = _.size(_.toString(num));\n  return '0'.repeat(6 - size) + _.toString(num);\n};\n\nthis.monthDiff = function(date) {\n  var diff;\n  diff = date.getTime() - (new Date()).getTime();\n  diff /= 1000 * 60 * 60 * 24 * 7 * 4;\n  return Math.round(diff);\n};\n\nif (Meteor.isClient) {\n  AutoForm.setDefaultTemplate('materialize');\n  this.currentRoute = function() {\n    return Router.current().route.getName();\n  };\n  this.currentPar = function(param) {\n    return Router.current().params[param];\n  };\n  this.search = function() {\n    return Session.get('search');\n  };\n  this.formDoc = function() {\n    return Session.get('formDoc');\n  };\n  this.limit = function() {\n    return Session.get('limit');\n  };\n  this.page = function() {\n    return Session.get('page');\n  };\n  this.roles = function() {\n    return Meteor.user().roles;\n  };\n  this.userGroup = function(name) {\n    return roles()[name];\n  };\n  this.userRole = function(name) {\n    return roles()[currentRoute()][0] === name;\n  };\n  this.tag = function(tag, val) {\n    return '<' + tag + '>' + val + '</' + tag + '>';\n  };\n  this.userName = function(id) {\n    return Meteor.users.findOne({\n      _id: id\n    }).username;\n  };\n  this.sessNull = function() {\n    return _.map(_.tail(_.keys(Session.keys)), function(i) {\n      return Session.set(i, null);\n    });\n  };\n}\n","if Meteor.isClient\n\n\t@modForm = (doc, idbayar) -> if currentRoute() is 'jalan'\n\t\tdoc.tanggal = new Date()\n\t\tdoc.idbayar = if idbayar then idbayar else randomId()\n\t\tdoc.jenis = currentRoute()\n\t\tdoc.total = tindakan: 0, labor: 0, radio: 0, obat: 0\n\t\t_.map ['tindakan', 'labor', 'radio'], (i) ->\n\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\tj['id'+i] = randomId()\n\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\tj.harga = find.harga\n\t\t\t\tdoc.total[i] += j.harga\n\t\tfor i in doc.obat?\n\t\t\ti.idobat = randomId()\n\t\t\tfind = _.find coll.gudang.find().fetch(), (k) -> k._id is i.nama\n\t\t\ti.harga = 0 # find.batch[find.batch.length-1].jual\n\t\t\ti.subtotal = i.harga * i.jumlah\n\t\t\tdoc.total.obat += i.subtotal\n\t\tdoc.total.semua = _.reduce _.values(doc.total), (acc, val) -> acc + val\n\t\tdoc.billRegis = true if doc.anamesa_perawat or doc.anamesa_dokter\n\t\tdoc.billRegis = true if doc.total.semua > 0 or doc.cara_bayar isnt 1\n\t\tdoc.status_bayar = true if doc.total.semua > 0 and doc.cara_bayar isnt 1\n\t\tif doc.obat and 0 is doc.total.semua\n\t\t\tdoc.billRegis = true\n\t\t\tdoc.status_bayar = true\n\t\tbegin = Session.get 'begin'; stop = moment()\n\t\tdoc.spm = stop.diff begin, 'minutes'\n\t\tdoc.petugas = Meteor.userId()\n\t\tdoc.nobill = parseInt _.toString(Date.now()).substr 7, 13\n\t\tdoc\n\n\tAutoForm.addHooks 'formPasien',\n\t\tbefore:\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tformDoc = Session.get 'formDoc'\n\t\t\t\tif formDoc then Meteor.call 'rmRawat', currentPar('no_mr'), formDoc.idbayar\n\t\t\t\tthis.result modForm doc\n\t\tafter:\n\t\t\tinsert: -> sessNull()\n\t\t\t'update-pushArray': (err, res) ->\n\t\t\t\tsessNull()\n\t\t\t\tif res then Meteor.call 'pindah', currentPar 'no_mr'\n\t\tformToDoc: (doc) ->\n\t\t\tSession.set 'preview', modForm doc\n\t\t\tif currentRoute() is 'regis'\n\t\t\t\tMeteor.call 'patientExist', doc.no_mr, (err, res) -> if res\n\t\t\t\t\tMaterialize.toast 'No MR sudah dipakai pasien yang lain', 3000\n\t\t\t\t\t$('input[name=\"no_mr\"]').val ''\n\t\t\tdoc\n\n\tAutoForm.addHooks 'formGudang',\n\t\tbefore:\n\t\t\tinsert: (doc) ->\n\t\t\t\tdoc.idbarang = randomId()\n\t\t\t\tdoc.batch[0].idbatch = randomId()\n\t\t\t\tthis.result doc\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tthis.result _.assign doc, idbatch: randomId()\n\n\tAutoForm.addHooks 'formAmprah',\n\t\tbefore: 'update-pushArray': (doc) ->\n\t\t\tthis.result _.assign doc,\n\t\t\t\tidamprah: randomId()\n\t\t\t\tpeminta: Meteor.userId()\n\t\t\t\ttanggal: new Date()\n\t\t\t\truangan: (_.keys roles())[0]\n","if (Meteor.isClient) {\n  this.modForm = function(doc, idbayar) {\n    var begin, find, i, l, len, ref, stop;\n    if (currentRoute() === 'jalan') {\n      doc.tanggal = new Date();\n      doc.idbayar = idbayar ? idbayar : randomId();\n      doc.jenis = currentRoute();\n      doc.total = {\n        tindakan: 0,\n        labor: 0,\n        radio: 0,\n        obat: 0\n      };\n      _.map(['tindakan', 'labor', 'radio'], function(i) {\n        var find, j, l, len, ref, results;\n        if (doc[i]) {\n          ref = doc[i];\n          results = [];\n          for (l = 0, len = ref.length; l < len; l++) {\n            j = ref[l];\n            j['id' + i] = randomId();\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            j.harga = find.harga;\n            results.push(doc.total[i] += j.harga);\n          }\n          return results;\n        }\n      });\n      ref = doc.obat != null;\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        i.idobat = randomId();\n        find = _.find(coll.gudang.find().fetch(), function(k) {\n          return k._id === i.nama;\n        });\n        i.harga = 0;\n        i.subtotal = i.harga * i.jumlah;\n        doc.total.obat += i.subtotal;\n      }\n      doc.total.semua = _.reduce(_.values(doc.total), function(acc, val) {\n        return acc + val;\n      });\n      if (doc.anamesa_perawat || doc.anamesa_dokter) {\n        doc.billRegis = true;\n      }\n      if (doc.total.semua > 0 || doc.cara_bayar !== 1) {\n        doc.billRegis = true;\n      }\n      if (doc.total.semua > 0 && doc.cara_bayar !== 1) {\n        doc.status_bayar = true;\n      }\n      if (doc.obat && 0 === doc.total.semua) {\n        doc.billRegis = true;\n        doc.status_bayar = true;\n      }\n      begin = Session.get('begin');\n      stop = moment();\n      doc.spm = stop.diff(begin, 'minutes');\n      doc.petugas = Meteor.userId();\n      doc.nobill = parseInt(_.toString(Date.now()).substr(7, 13));\n      return doc;\n    }\n  };\n  AutoForm.addHooks('formPasien', {\n    before: {\n      'update-pushArray': function(doc) {\n        var formDoc;\n        formDoc = Session.get('formDoc');\n        if (formDoc) {\n          Meteor.call('rmRawat', currentPar('no_mr'), formDoc.idbayar);\n        }\n        return this.result(modForm(doc));\n      }\n    },\n    after: {\n      insert: function() {\n        return sessNull();\n      },\n      'update-pushArray': function(err, res) {\n        sessNull();\n        if (res) {\n          return Meteor.call('pindah', currentPar('no_mr'));\n        }\n      }\n    },\n    formToDoc: function(doc) {\n      Session.set('preview', modForm(doc));\n      if (currentRoute() === 'regis') {\n        Meteor.call('patientExist', doc.no_mr, function(err, res) {\n          if (res) {\n            Materialize.toast('No MR sudah dipakai pasien yang lain', 3000);\n            return $('input[name=\"no_mr\"]').val('');\n          }\n        });\n      }\n      return doc;\n    }\n  });\n  AutoForm.addHooks('formGudang', {\n    before: {\n      insert: function(doc) {\n        doc.idbarang = randomId();\n        doc.batch[0].idbatch = randomId();\n        return this.result(doc);\n      },\n      'update-pushArray': function(doc) {\n        return this.result(_.assign(doc, {\n          idbatch: randomId()\n        }));\n      }\n    }\n  });\n  AutoForm.addHooks('formAmprah', {\n    before: {\n      'update-pushArray': function(doc) {\n        return this.result(_.assign(doc, {\n          idamprah: randomId(),\n          peminta: Meteor.userId(),\n          tanggal: new Date(),\n          ruangan: (_.keys(roles()))[0]\n        }));\n      }\n    }\n  });\n}\n","@modules = [\n\tname: 'regis'\n\tfull: 'Pendaftaran'\n\ticon: 'people'\n\tcolor: 'orange'\n,\n\tname: 'bayar'\n\tfull: 'Pembayaran'\n\ticon: 'monetization_on'\n\tcolor: 'green'\n,\n\tname: 'jalan'\n\tfull: 'Rawat Jalan'\n\ticon: 'directions'\n\tcolor: 'blue'\n,\n\tname: 'igd'\n\tfull: 'IGD'\n\ticon: 'airport_shuttle'\n\tcolor: 'red'\n,\n\tname: 'inap'\n\tfull: 'Rawat Inap'\n\ticon: 'hotel'\n\tcolor: 'cyan'\n,\n\tname: 'labor'\n\tfull: 'Laboratorium'\n\ticon: 'wb_incandescent'\n\tcolor: 'amber'\n,\n\tname: 'radio'\n\tfull: 'Radiologi'\n\ticon: 'airline_seat_flat'\n\tcolor: 'indigo'\n,\n\tname: 'obat'\n\tfull: 'Apotek'\n\ticon: 'enhanced_encryption'\n\tcolor: 'light-green'\n,\n\tname: 'admisi'\n\tfull: 'Admisi'\n\ticon: 'assignment'\n\tcolor: 'purple'\n,\n\tname: 'rekam'\n\tfull: 'Rekam Medik'\n\ticon: 'content_copy'\n\tcolor: 'brown'\n,\n\tname: 'farmasi'\n\tfull: 'Gudang Farmasi'\n\ticon: 'local_pharmacy'\n\tcolor: 'orange'\n,\n\tname: 'logistik'\n\tfull: 'Gudang Logistik'\n\ticon: 'rv_hookup'\n\tcolor: 'blue-grey'\n,\n\tname: 'manajemen'\n\tfull: 'Manajemen'\n\ticon: 'people'\n\tcolor: 'orange'\n]\n","if Meteor.isClient\n\n\t@makePdf =\n\t\tcard: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t'Nama  : ' + doc.regis.nama_lengkap\n\t\t\t\t\t'No. MR: ' + zeros doc.no_mr\n\t\t\t\t]\n\t\t\t\tpageSize: 'B8'\n\t\t\t\tpageMargins: [110, 50, 0, 0]\n\t\t\t\tpageOrientation: 'landscape'\n\t\t\tpdf.download zeros(doc.no_mr) + '_card.pdf'\n\t\tconsent: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024', alignment: 'center'}\n\t\t\t\t\t{text: '\\nDATA UMUM PASIEN', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['NO. MR', 'NAMA LENGKAP', 'TEMPAT & TANGGAL LAHIR', 'GOLONGAN DARAH', 'JENIS KELAMIN', 'AGAMA', 'PENDIDIKAN', 'PEKERJAAN', 'NAMA AYAH', 'NAMA IBU', 'NAMA SUAMI / ISTRI', 'ALAMAT', 'NO. TELP / HP']\n\t\t\t\t\t\t_.map [\n\t\t\t\t\t\t\tzeros doc.no_mr\n\t\t\t\t\t\t\tdoc.regis.nama_lengkap\n\t\t\t\t\t\t\t(doc.regis.tmpt_lahir or '-') + ', ' + moment(doc.regis.tgl_lahir).format('D/MM/YYYY')\n\t\t\t\t\t\t\t(_.map ['darah', 'kelamin', 'agama', 'pendidikan', 'pekerjaan'], (i) ->\n\t\t\t\t\t\t\t\t(look(i, doc.regis[i])?.label or '-'))...\n\t\t\t\t\t\t\t(_.map ['ayah', 'ibu', 'pasangan', 'alamat', 'kontak'], (i) ->\n\t\t\t\t\t\t\t\t(doc.regis[i] or '-'))...\n\t\t\t\t\t\t], (i) -> ': ' + i\n\t\t\t\t\t]}\n\t\t\t\t\t{text: '\\nPERSETUJUAN UMUM (GENERAL CONSENT)', alignment: 'center'}\n\t\t\t\t\t{table: body: [\n\t\t\t\t\t\t['S', 'TS', {text: 'Keterangan', alignment: 'center'}]\n\t\t\t\t\t\t(_.map [\n\t\t\t\t\t\t\t['Saya akan mentaati peraturan yang berlaku di RSUD Petala Bumi']\n\t\t\t\t\t\t\t['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas']\n\t\t\t\t\t\t\t['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.']\n\t\t\t\t\t\t\t['Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat']\n\t\t\t\t\t\t\t['Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan']\n\t\t\t\t\t\t], (i) -> [' ', ' ', i...])...\n\t\t\t\t\t]}\n\t\t\t\t\t'\\nPetunjuk :'\n\t\t\t\t\t'S: Setuju'\n\t\t\t\t\t'TS: Tidak Setuju'\n\t\t\t\t\t{alignment: 'justify', columns: [\n\t\t\t\t\t\t{text: '\\n\\n\\n\\n__________________\\n'+(_.startCase Meteor.user().username), alignment: 'center'}\n\t\t\t\t\t\t{text: 'Pekanbaru, '+moment().format('DD/MM/YYYY')+'\\n\\n\\n\\n__________________\\n'+(_.startCase doc.regis.nama_lengkap), alignment: 'center'}\n\t\t\t\t\t]}\n\t\t\t\t]\n\t\t\tpdf.download zeros(doc.no_mr) + '_consent.pdf'\n\t\tpayRawat: (no_mr, doc) ->\n\t\t\tpasien = coll.pasien.findOne no_mr: parseInt no_mr\n\t\t\trows = [['Uraian', 'Harga']]\n\t\t\tfor i in ['tindakan', 'labor', 'radio']\n\t\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\t\trows.push [_.startCase(find.nama), _.toString(j.harga)]\n\t\t\ttable = table: widths: ['*', 'auto'], body: rows\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t{text: '\\nRINCIAN BIAYA RAWAT JALAN\\n', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['NO. MR', 'NAMA PASIEN', 'JENIS KELAMIN', 'TANGGAL LAHIR', 'UMUR', 'KLINIK']\n\t\t\t\t\t\t_.map [\n\t\t\t\t\t\t\tzeros pasien.no_mr\n\t\t\t\t\t\t\t_.startCase pasien.regis.nama_lengkap\n\t\t\t\t\t\t\t(look('kelamin', pasien.regis.kelamin)?.label or '-')\n\t\t\t\t\t\t\tmoment().format('D/MM/YYYY')\n\t\t\t\t\t\t\tmoment().diff(pasien.regis.tgl_lahir, 'years') + ' tahun'\n\t\t\t\t\t\t\t(look('klinik', doc.klinik)?.label or '-')\n\t\t\t\t\t\t], (i) -> ': ' + i\n\t\t\t\t\t]}\n\t\t\t\t\t{text: '\\n\\nRINCIAN PEMBAYARAN', alignment: 'center'}\n\t\t\t\t\ttable\n\t\t\t\t\t'\\nTOTAL BIAYA' + 'Rp ' + _.toString numeral(doc.total.semua).format('0,0')\n\t\t\t\t\t{text: '\\nPEKANBARU, ' + moment().format('D/MM/YYYY') +\n\t\t\t\t\t'\\n\\n\\n\\n\\n' + (_.startCase Meteor.user().username), alignment: 'right'}\n\t\t\t\t]\n\t\t\tpdf.download zeros(pasien.no_mr) + '_payRawat.pdf'\n\t\tpayRegCard: (no_mr, amount, words) ->\n\t\t\tdoc = coll.pasien.findOne no_mr: parseInt no_mr\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t{text: '\\n\\nKARCIS', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['TANGGAL', 'NO. MR', 'NAMA PASIEN', 'TARIF', '\\n\\nPETUGAS']\n\t\t\t\t\t\t_.map [\n\t\t\t\t\t\t\tmoment().format('DD/MM/YYYY')\n\t\t\t\t\t\t\tzeros doc.no_mr\n\t\t\t\t\t\t\t_.startCase doc.regis.nama_lengkap\n\t\t\t\t\t\t\t'Rp ' + amount\n\t\t\t\t\t\t\t'\\n\\n' + _.startCase Meteor.user().username\n\t\t\t\t\t\t], (i) -> ': ' + i\n\t\t\t\t\t]}\n\t\t\t\t]\n\t\t\tpdf.download zeros(doc.no_mr) + '_payRegCard.pdf'\n\t\trekap: (rows) ->\n\t\t\tstrings = _.map rows, (i) -> _.map i, (j) -> _.toString j\n\t\t\tpdf = pdfMake.createPdf content: [table: body: strings]\n\t\t\tpdf.download 'rekap.pdf'\n","var slice = [].slice;\n\nif (Meteor.isClient) {\n  this.makePdf = {\n    card: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: ['Nama  : ' + doc.regis.nama_lengkap, 'No. MR: ' + zeros(doc.no_mr)],\n        pageSize: 'B8',\n        pageMargins: [110, 50, 0, 0],\n        pageOrientation: 'landscape'\n      });\n      return pdf.download(zeros(doc.no_mr) + '_card.pdf');\n    },\n    consent: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024',\n            alignment: 'center'\n          }, {\n            text: '\\nDATA UMUM PASIEN',\n            alignment: 'center'\n          }, {\n            columns: [\n              ['NO. MR', 'NAMA LENGKAP', 'TEMPAT & TANGGAL LAHIR', 'GOLONGAN DARAH', 'JENIS KELAMIN', 'AGAMA', 'PENDIDIKAN', 'PEKERJAAN', 'NAMA AYAH', 'NAMA IBU', 'NAMA SUAMI / ISTRI', 'ALAMAT', 'NO. TELP / HP'], _.map([zeros(doc.no_mr), doc.regis.nama_lengkap, (doc.regis.tmpt_lahir || '-') + ', ' + moment(doc.regis.tgl_lahir).format('D/MM/YYYY')].concat(slice.call(_.map(['darah', 'kelamin', 'agama', 'pendidikan', 'pekerjaan'], function(i) {\n                  var ref;\n                  return ((ref = look(i, doc.regis[i])) != null ? ref.label : void 0) || '-';\n                })), slice.call(_.map(['ayah', 'ibu', 'pasangan', 'alamat', 'kontak'], function(i) {\n                  return doc.regis[i] || '-';\n                }))), function(i) {\n                return ': ' + i;\n              })\n            ]\n          }, {\n            text: '\\nPERSETUJUAN UMUM (GENERAL CONSENT)',\n            alignment: 'center'\n          }, {\n            table: {\n              body: [[\n                  'S', 'TS', {\n                    text: 'Keterangan',\n                    alignment: 'center'\n                  }\n                ]].concat(slice.call(_.map([['Saya akan mentaati peraturan yang berlaku di RSUD Petala Bumi'], ['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas'], ['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.'], ['Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat'], ['Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan']], function(i) {\n                  return [' ', ' '].concat(slice.call(i));\n                })))\n            }\n          }, '\\nPetunjuk :', 'S: Setuju', 'TS: Tidak Setuju', {\n            alignment: 'justify',\n            columns: [\n              {\n                text: '\\n\\n\\n\\n__________________\\n' + (_.startCase(Meteor.user().username)),\n                alignment: 'center'\n              }, {\n                text: 'Pekanbaru, ' + moment().format('DD/MM/YYYY') + '\\n\\n\\n\\n__________________\\n' + (_.startCase(doc.regis.nama_lengkap)),\n                alignment: 'center'\n              }\n            ]\n          }\n        ]\n      });\n      return pdf.download(zeros(doc.no_mr) + '_consent.pdf');\n    },\n    payRawat: function(no_mr, doc) {\n      var find, i, j, l, len, len1, m, pasien, pdf, ref, ref1, ref2, ref3, rows, table;\n      pasien = coll.pasien.findOne({\n        no_mr: parseInt(no_mr)\n      });\n      rows = [['Uraian', 'Harga']];\n      ref = ['tindakan', 'labor', 'radio'];\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        if (doc[i]) {\n          ref1 = doc[i];\n          for (m = 0, len1 = ref1.length; m < len1; m++) {\n            j = ref1[m];\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            rows.push([_.startCase(find.nama), _.toString(j.harga)]);\n          }\n        }\n      }\n      table = {\n        table: {\n          widths: ['*', 'auto'],\n          body: rows\n        }\n      };\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, {\n            text: '\\nRINCIAN BIAYA RAWAT JALAN\\n',\n            alignment: 'center'\n          }, {\n            columns: [\n              ['NO. MR', 'NAMA PASIEN', 'JENIS KELAMIN', 'TANGGAL LAHIR', 'UMUR', 'KLINIK'], _.map([zeros(pasien.no_mr), _.startCase(pasien.regis.nama_lengkap), ((ref2 = look('kelamin', pasien.regis.kelamin)) != null ? ref2.label : void 0) || '-', moment().format('D/MM/YYYY'), moment().diff(pasien.regis.tgl_lahir, 'years') + ' tahun', ((ref3 = look('klinik', doc.klinik)) != null ? ref3.label : void 0) || '-'], function(i) {\n                return ': ' + i;\n              })\n            ]\n          }, {\n            text: '\\n\\nRINCIAN PEMBAYARAN',\n            alignment: 'center'\n          }, table, '\\nTOTAL BIAYA' + 'Rp ' + _.toString(numeral(doc.total.semua).format('0,0')), {\n            text: '\\nPEKANBARU, ' + moment().format('D/MM/YYYY') + '\\n\\n\\n\\n\\n' + (_.startCase(Meteor.user().username)),\n            alignment: 'right'\n          }\n        ]\n      });\n      return pdf.download(zeros(pasien.no_mr) + '_payRawat.pdf');\n    },\n    payRegCard: function(no_mr, amount, words) {\n      var doc, pdf;\n      doc = coll.pasien.findOne({\n        no_mr: parseInt(no_mr)\n      });\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, {\n            text: '\\n\\nKARCIS',\n            alignment: 'center'\n          }, {\n            columns: [\n              ['TANGGAL', 'NO. MR', 'NAMA PASIEN', 'TARIF', '\\n\\nPETUGAS'], _.map([moment().format('DD/MM/YYYY'), zeros(doc.no_mr), _.startCase(doc.regis.nama_lengkap), 'Rp ' + amount, '\\n\\n' + _.startCase(Meteor.user().username)], function(i) {\n                return ': ' + i;\n              })\n            ]\n          }\n        ]\n      });\n      return pdf.download(zeros(doc.no_mr) + '_payRegCard.pdf');\n    },\n    rekap: function(rows) {\n      var pdf, strings;\n      strings = _.map(rows, function(i) {\n        return _.map(i, function(j) {\n          return _.toString(j);\n        });\n      });\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            table: {\n              body: strings\n            }\n          }\n        ]\n      });\n      return pdf.download('rekap.pdf');\n    }\n  };\n}\n","if Meteor.isClient\n\n\t@rights = [\n\t\tgroup: 'regis'\n\t\tlist: ['regis', 'jalan']\n\t,\n\t\tgroup: 'bayar'\n\t\tlist: ['bayar']\n\t,\n\t\tgroup: 'jalan'\n\t\tlist: ['jalan', 'farmasi']\n\t,\n\t\tgroup: 'inap'\n\t\tlist: ['inap', 'farmasi']\n\t,\n\t\tgroup: 'labor'\n\t\tlist: ['labor']\n\t,\n\t\tgroup: 'radio'\n\t\tlist: ['radio']\n\t,\n\t\tgroup: 'obat'\n\t\tlist: ['obat', 'farmasi']\n\t,\n\t\tgroup: 'rekam'\n\t\tlist: ['rekam', 'regis']\n\t,\n\t\tgroup: 'admisi'\n\t\tlist: ['admisi']\n\t,\n\t\tgroup: 'manajemen'\n\t\tlist: ['manajemen']\n\t,\n\t\tgroup: 'farmasi'\n\t\tlist: ['farmasi']\n\t]\n\n\t_.map rights, (i) ->\n\t\ti.list = [i.list..., 'panduan']\n\t\ti\n","var slice = [].slice;\n\nif (Meteor.isClient) {\n  this.rights = [\n    {\n      group: 'regis',\n      list: ['regis', 'jalan']\n    }, {\n      group: 'bayar',\n      list: ['bayar']\n    }, {\n      group: 'jalan',\n      list: ['jalan', 'farmasi']\n    }, {\n      group: 'inap',\n      list: ['inap', 'farmasi']\n    }, {\n      group: 'labor',\n      list: ['labor']\n    }, {\n      group: 'radio',\n      list: ['radio']\n    }, {\n      group: 'obat',\n      list: ['obat', 'farmasi']\n    }, {\n      group: 'rekam',\n      list: ['rekam', 'regis']\n    }, {\n      group: 'admisi',\n      list: ['admisi']\n    }, {\n      group: 'manajemen',\n      list: ['manajemen']\n    }, {\n      group: 'farmasi',\n      list: ['farmasi']\n    }\n  ];\n  _.map(rights, function(i) {\n    i.list = slice.call(i.list).concat(['panduan']);\n    return i;\n  });\n}\n","@selects =\n\trawat: ['Rawat Jalan', 'Rawat Inap', 'IGD']\n\tpekerjaan: ['PNS', 'BUMN/BUMD', 'TNI/Polri', 'Dokter', 'Karyawan Swasta', 'Wirausaha', 'Honorer', 'Pensiun', 'Petani', 'Buruh', 'Tidak Bekerja', 'Dan Lain-lain']\n\tkelamin: ['Laki-laki', 'Perempuan']\n\tagama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu']\n\tpendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah']\n\tdarah: ['A', 'B', 'C', 'AB', 'O']\n\tcara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free']\n\tnikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda']\n\tklinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio']\n\tbentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh']\n\ttipe_dokter: ['Umum', 'Spesialis']\n\trujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya']\n\tkeluar: ['Pulang', 'Rujuk']\n\tbarang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP']\n\tsatuan: ['Botol', 'Vial', 'Ampul', 'Pcs', 'Sachet', 'Tube', 'Supp', 'Tablet', 'Minidose', 'Pot', 'Turbuhaler', 'Kaplet']\n\tanggaran: ['BLUD', 'APBD', 'Kemenkes', 'Dinkes']\n\talias: ['Tn.', 'Ny.', 'Nn.', 'An.', 'By.']\n\n_.map (_.keys selects), (i) -> selects[i] = _.map selects[i], (j, x) -> label: j, value: x+1\n\nselects.karcis = _.map [15000, 20000, 25000, 30000, 40000], (i) -> value: i, label: 'Rp ' + i\n\nselects.tindakan = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\tselector = jenis: Meteor.user().roles.jalan[0]\n\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: _.startCase i.nama\n\nselects.dokter = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'dokter', {}, {}\n\tfind = _.find selects.klinik, (i) ->\n\t\tMeteor.user().roles.jalan[0] is _.snakeCase i.label\n\tselector = poli: find.value\n\tif sub.ready() then _.map coll.dokter.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: i.nama\n\nselects.obat = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\tfilter = (arr) -> _.filter arr, (i) -> i.jenis is 1\n\tif sub.ready() then _.map filter(coll.gudang.find().fetch()), (i) ->\n\t\tvalue: i._id, label: i.nama\n\n_.map ['labor', 'radio'], (i) ->\n\tselects[i] = -> if Meteor.isClient\n\t\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\t\tselector = jenis: i\n\t\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (j) ->\n\t\t\tvalue: j._id, label: _.startCase j.nama\n","this.selects = {\n  rawat: ['Rawat Jalan', 'Rawat Inap', 'IGD'],\n  pekerjaan: ['PNS', 'BUMN/BUMD', 'TNI/Polri', 'Dokter', 'Karyawan Swasta', 'Wirausaha', 'Honorer', 'Pensiun', 'Petani', 'Buruh', 'Tidak Bekerja', 'Dan Lain-lain'],\n  kelamin: ['Laki-laki', 'Perempuan'],\n  agama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu'],\n  pendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah'],\n  darah: ['A', 'B', 'C', 'AB', 'O'],\n  cara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free'],\n  nikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda'],\n  klinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio'],\n  bentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh'],\n  tipe_dokter: ['Umum', 'Spesialis'],\n  rujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya'],\n  keluar: ['Pulang', 'Rujuk'],\n  barang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP'],\n  satuan: ['Botol', 'Vial', 'Ampul', 'Pcs', 'Sachet', 'Tube', 'Supp', 'Tablet', 'Minidose', 'Pot', 'Turbuhaler', 'Kaplet'],\n  anggaran: ['BLUD', 'APBD', 'Kemenkes', 'Dinkes'],\n  alias: ['Tn.', 'Ny.', 'Nn.', 'An.', 'By.']\n};\n\n_.map(_.keys(selects), function(i) {\n  return selects[i] = _.map(selects[i], function(j, x) {\n    return {\n      label: j,\n      value: x + 1\n    };\n  });\n});\n\nselects.karcis = _.map([15000, 20000, 25000, 30000, 40000], function(i) {\n  return {\n    value: i,\n    label: 'Rp ' + i\n  };\n});\n\nselects.tindakan = function() {\n  var selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'tarif', {}, {});\n    selector = {\n      jenis: Meteor.user().roles.jalan[0]\n    };\n    if (sub.ready()) {\n      return _.map(coll.tarif.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: _.startCase(i.nama)\n        };\n      });\n    }\n  }\n};\n\nselects.dokter = function() {\n  var find, selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'dokter', {}, {});\n    find = _.find(selects.klinik, function(i) {\n      return Meteor.user().roles.jalan[0] === _.snakeCase(i.label);\n    });\n    selector = {\n      poli: find.value\n    };\n    if (sub.ready()) {\n      return _.map(coll.dokter.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\nselects.obat = function() {\n  var filter, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'gudang', {}, {});\n    filter = function(arr) {\n      return _.filter(arr, function(i) {\n        return i.jenis === 1;\n      });\n    };\n    if (sub.ready()) {\n      return _.map(filter(coll.gudang.find().fetch()), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\n_.map(['labor', 'radio'], function(i) {\n  return selects[i] = function() {\n    var selector, sub;\n    if (Meteor.isClient) {\n      sub = Meteor.subscribe('coll', 'tarif', {}, {});\n      selector = {\n        jenis: i\n      };\n      if (sub.ready()) {\n        return _.map(coll.tarif.find(selector).fetch(), function(j) {\n          return {\n            value: j._id,\n            label: _.startCase(j.nama)\n          };\n        });\n      }\n    }\n  };\n});\n","Router.configure\n\tlayoutTemplate: 'layout'\n\tloadingTemplate: 'loading'\n\nRouter.route '/',\n\taction: -> this.render 'home'\n\nschema.regis =\n\tno_mr: type: Number, max: 999999\n\tregis: type: Object\n\t'regis.alias': type: Number, optional: true, autoform: options: selects.alias, type: 'select-radio-inline'\n\t'regis.nama_lengkap': type: String\n\t'regis.tgl_lahir': type: Date, autoform: type: 'pickadate', pickadateOptions: selectYears: 150, selectMonths: true\n\t'regis.tmpt_lahir': type: String, optional: true\n\t'regis.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'regis.kelamin': type: Number, autoform: options: selects.kelamin, type: 'select-radio-inline'\n\t'regis.agama': type: Number, autoform: options: selects.agama, type: 'select-radio-inline'\n\t'regis.nikah': type: Number, autoform: options: selects.nikah, type: 'select-radio-inline'\n\t'regis.pendidikan': type: Number, optional: true, autoform: options: selects.pendidikan, type: 'select-radio-inline'\n\t'regis.darah': type: Number, optional: true, autoform: options: selects.darah, type: 'select-radio-inline'\n\t'regis.pekerjaan': type: Number, optional: true, autoform: options: selects.pekerjaan, type: 'select-radio-inline'\n\t'regis.kabupaten': type: String, optional: true\n\t'regis.kecamatan': type: String, optional: true\n\t'regis.kelurahan': type: String, optional: true\n\t'regis.alamat': type: String\n\t'regis.kontak': type: String, optional: true\n\t'regis.ayah': type: String, optional: true\n\t'regis.ibu': type: String, optional: true\n\t'regis.pasangan': type: String, optional: true\n\t'regis.petugas':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> if Meteor.isClient then Meteor.userId()\n\t'regis.date':\n\t\ttype: Date\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> new Date\n\t'regis.billCard': type: Boolean, optional: true, autoform: type: 'hidden'\n\nschema.fisik =\n\ttekanan_darah: type: String, optional: true\n\tnadi: type: Number, optional: true\n\tsuhu: type: Number, decimal: true, optional: true\n\tpernapasan: type: Number, optional: true\n\tberat: type: Number, optional: true\n\ttinggi: type: Number, optional: true\n\tlila: type: Number, optional: true\n\nschema.tindakan =\n\tidtindakan: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.tindakan, type: 'universe-select'\n\tdokter: type: String, autoform: options: selects.dokter\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\nschema.labor =\n\tidlabor: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.labor\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.radio =\n\tidradio: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.radio\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.obat =\n\tidobat: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.obat\n\tpuyer: type: String, optional: true\n\taturan: type: Object\n\t'aturan.kali': type: Number\n\t'aturan.dosis': type: Number\n\t'aturan.bentuk': type: Number, autoform: options: selects.bentuk\n\tjumlah: type: Number\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\tsubtotal: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.rawat =\n\tno_mr: type: Number\n\trawat: type: Array\n\t'rawat.$': type: Object\n\t'rawat.$.tanggal': type: Date, autoform: type: 'hidden'\n\t'rawat.$.idbayar': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.jenis': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'rawat.$.klinik': type: Number, autoform: options: selects.klinik, type: 'select-radio-inline'\n\t'rawat.$.karcis': type: Number, optional: true, autoform: options: selects.karcis, type: 'select-radio-inline'\n\t'rawat.$.rujukan': type: Number, optional: true, autoform: options: selects.rujukan, type: 'select-radio-inline'\n\t'rawat.$.billRegis': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.nobill': type: Number, autoform: type: 'hidden'\n\t'rawat.$.status_bayar': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.anamesa_perawat': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.fisik': optional: true, type: [new SimpleSchema schema.fisik]\n\t'rawat.$.anamesa_dokter': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.diagnosa': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.planning': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.tindakan': type: [new SimpleSchema schema.tindakan], optional: true\n\t'rawat.$.labor': type: [new SimpleSchema schema.labor], optional: true\n\t'rawat.$.radio': type: [new SimpleSchema schema.radio], optional: true\n\t'rawat.$.obat': type: [new SimpleSchema schema.obat], optional: true\n\t'rawat.$.total': type: Object, optional: true, autoform: type: 'hidden'\n\t'rawat.$.total.tindakan': type: Number, optional: true\n\t'rawat.$.total.labor': type: Number, optional: true\n\t'rawat.$.total.radio': type: Number, optional: true\n\t'rawat.$.total.obat': type: Number, optional: true\n\t'rawat.$.total.semua': type: Number, optional: true\n\t'rawat.$.spm': type: Number, optional: true, autoform: type: 'hidden'\n\t'rawat.$.pindah': type: Number, optional: true, autoform: options: selects.klinik\n\t'rawat.$.keluar': type: Number, optional: true, autoform: options: selects.keluar\n\t'rawat.$.petugas': type: String, autoform: type: 'hidden'\n\nschema.jalan = _.assign {}, schema.rawat, {}\nschema.inap = _.assign {}, schema.rawat, {}\nschema.igd = _.assign {}, schema.rawat, {}\n\nschema.gudang =\n\tidbarang:\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\tjenis: type: Number, autoform: options: selects.barang\n\tnama: type: String\n\nschema.farmasi = _.assign {}, schema.gudang,\n\tkandungan: type: String\n\tsatuan: type: Number, autoform: options: selects.satuan\n\tbatch: type: Array\n\t'batch.$': type: Object\n\t'batch.$.idbatch':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\t'batch.$.nobatch': type: String\n\t'batch.$.merek': type: String\n\t'batch.$.masuk': type: Date, autoform: type: 'pickadate', pickadateOptions: selectYears: 150, selectMonths: true\n\t'batch.$.kadaluarsa': type: Date, autoform: type: 'pickadate', pickadateOptions: selectYears: 150, selectMonths: true\n\t'batch.$.digudang': type: Number\n\t'batch.$.diapotik': type: Number\n\t'batch.$.diretur': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'batch.$.beli': type: Number, decimal: true\n\t'batch.$.jual': type: Number, decimal: true\n\t'batch.$.suplier': type: String\n\t'batch.$.returnable': type: Boolean, optional: true\n\t'batch.$.anggaran': type: Number, autoform: options: selects.anggaran\n\t'batch.$.pengadaan': type: Number\n\nschema.amprah = _.assign {}, schema.gudang,\n\tamprah: type: Array\n\t'amprah.$': type: Object\n\t'amprah.$.diminta': type: Number\n\nschema.logistik = _.assign {}, schema.gudang, {}\n\nschema.dokter =\n\tnama: type: String\n\ttipe: type: Number, autoform: options: selects.tipe_dokter\n\tpoli: type: Number, autoform: options: selects.klinik\n\nschema.tarif =\n\tjenis: type: String\n\tnama: type: String\n\tharga: type: Number\n\tgrup: type: String, optional: true\n\n_.map ['dokter', 'tarif'], (i) ->\n\tobj = active:\n\t\ttype: Boolean\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> true\n\t_.assign schema[i], obj\n\n_.map ['pasien', 'gudang', 'dokter', 'tarif'], (i) ->\n\tcoll[i] = new Meteor.Collection i\n\tarr = ['insert', 'update', 'remove']\n\tcoll[i].allow _.zipObject arr, _.map arr, (i) -> -> true\n\n_.map modules[0..9], (i) ->\n\tRouter.route '/'+i.name+'/:no_mr?',\n\t\tname: i.name\n\t\taction: -> this.render 'pasien'\n\t\twaitOn: ->\n\t\t\t_.map ['dokter', 'tarif', 'gudang'], (j) ->\n\t\t\t\tMeteor.subscribe 'coll', j, {}, {}\n\n_.map modules[10..11], (i) ->\n\tRouter.route '/'+i.name+'/:idbarang?',\n\t\tname: i.name\n\t\taction: -> this.render 'gudang'\n\t\twaitOn: -> Meteor.subscribe 'users', {}, fields: username: 1\n\n_.map ['panduan'], (i) ->\n\tRouter.route '/' + i,\n\t\taction: -> this.render i\n\nRouter.route '/manajemen',\n\taction: -> this.render 'manajemen'\n\twaitOn: -> [\n\t\tMeteor.subscribe 'users', {}, {}\n\t\tMeteor.subscribe 'coll', 'dokter', {}, {}\n\t\tMeteor.subscribe 'coll', 'tarif', {}, {}\n\t]\n\nRouter.route '/login', ->\n\taction: -> this.render 'login'\n","Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading'\n});\n\nRouter.route('/', {\n  action: function() {\n    return this.render('home');\n  }\n});\n\nschema.regis = {\n  no_mr: {\n    type: Number,\n    max: 999999\n  },\n  regis: {\n    type: Object\n  },\n  'regis.alias': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.alias,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.nama_lengkap': {\n    type: String\n  },\n  'regis.tgl_lahir': {\n    type: Date,\n    autoform: {\n      type: 'pickadate',\n      pickadateOptions: {\n        selectYears: 150,\n        selectMonths: true\n      }\n    }\n  },\n  'regis.tmpt_lahir': {\n    type: String,\n    optional: true\n  },\n  'regis.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kelamin': {\n    type: Number,\n    autoform: {\n      options: selects.kelamin,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.agama': {\n    type: Number,\n    autoform: {\n      options: selects.agama,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.nikah': {\n    type: Number,\n    autoform: {\n      options: selects.nikah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pendidikan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pendidikan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.darah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.darah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pekerjaan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pekerjaan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kabupaten': {\n    type: String,\n    optional: true\n  },\n  'regis.kecamatan': {\n    type: String,\n    optional: true\n  },\n  'regis.kelurahan': {\n    type: String,\n    optional: true\n  },\n  'regis.alamat': {\n    type: String\n  },\n  'regis.kontak': {\n    type: String,\n    optional: true\n  },\n  'regis.ayah': {\n    type: String,\n    optional: true\n  },\n  'regis.ibu': {\n    type: String,\n    optional: true\n  },\n  'regis.pasangan': {\n    type: String,\n    optional: true\n  },\n  'regis.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      if (Meteor.isClient) {\n        return Meteor.userId();\n      }\n    }\n  },\n  'regis.date': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return new Date;\n    }\n  },\n  'regis.billCard': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.fisik = {\n  tekanan_darah: {\n    type: String,\n    optional: true\n  },\n  nadi: {\n    type: Number,\n    optional: true\n  },\n  suhu: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  pernapasan: {\n    type: Number,\n    optional: true\n  },\n  berat: {\n    type: Number,\n    optional: true\n  },\n  tinggi: {\n    type: Number,\n    optional: true\n  },\n  lila: {\n    type: Number,\n    optional: true\n  }\n};\n\nschema.tindakan = {\n  idtindakan: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.tindakan,\n      type: 'universe-select'\n    }\n  },\n  dokter: {\n    type: String,\n    autoform: {\n      options: selects.dokter\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.labor = {\n  idlabor: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.labor\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.radio = {\n  idradio: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.radio\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.obat = {\n  idobat: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.obat\n    }\n  },\n  puyer: {\n    type: String,\n    optional: true\n  },\n  aturan: {\n    type: Object\n  },\n  'aturan.kali': {\n    type: Number\n  },\n  'aturan.dosis': {\n    type: Number\n  },\n  'aturan.bentuk': {\n    type: Number,\n    autoform: {\n      options: selects.bentuk\n    }\n  },\n  jumlah: {\n    type: Number\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  subtotal: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.rawat = {\n  no_mr: {\n    type: Number\n  },\n  rawat: {\n    type: Array\n  },\n  'rawat.$': {\n    type: Object\n  },\n  'rawat.$.tanggal': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.idbayar': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.jenis': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.klinik': {\n    type: Number,\n    autoform: {\n      options: selects.klinik,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.karcis': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.karcis,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.rujukan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.rujukan,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.billRegis': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.nobill': {\n    type: Number,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.status_bayar': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.anamesa_perawat': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.fisik': {\n    optional: true,\n    type: [new SimpleSchema(schema.fisik)]\n  },\n  'rawat.$.anamesa_dokter': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.diagnosa': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.planning': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.tindakan': {\n    type: [new SimpleSchema(schema.tindakan)],\n    optional: true\n  },\n  'rawat.$.labor': {\n    type: [new SimpleSchema(schema.labor)],\n    optional: true\n  },\n  'rawat.$.radio': {\n    type: [new SimpleSchema(schema.radio)],\n    optional: true\n  },\n  'rawat.$.obat': {\n    type: [new SimpleSchema(schema.obat)],\n    optional: true\n  },\n  'rawat.$.total': {\n    type: Object,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.total.tindakan': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.labor': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.radio': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.obat': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.semua': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.spm': {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.pindah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.klinik\n    }\n  },\n  'rawat.$.keluar': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.keluar\n    }\n  },\n  'rawat.$.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.jalan = _.assign({}, schema.rawat, {});\n\nschema.inap = _.assign({}, schema.rawat, {});\n\nschema.igd = _.assign({}, schema.rawat, {});\n\nschema.gudang = {\n  idbarang: {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  jenis: {\n    type: Number,\n    autoform: {\n      options: selects.barang\n    }\n  },\n  nama: {\n    type: String\n  }\n};\n\nschema.farmasi = _.assign({}, schema.gudang, {\n  kandungan: {\n    type: String\n  },\n  satuan: {\n    type: Number,\n    autoform: {\n      options: selects.satuan\n    }\n  },\n  batch: {\n    type: Array\n  },\n  'batch.$': {\n    type: Object\n  },\n  'batch.$.idbatch': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  'batch.$.nobatch': {\n    type: String\n  },\n  'batch.$.merek': {\n    type: String\n  },\n  'batch.$.masuk': {\n    type: Date,\n    autoform: {\n      type: 'pickadate',\n      pickadateOptions: {\n        selectYears: 150,\n        selectMonths: true\n      }\n    }\n  },\n  'batch.$.kadaluarsa': {\n    type: Date,\n    autoform: {\n      type: 'pickadate',\n      pickadateOptions: {\n        selectYears: 150,\n        selectMonths: true\n      }\n    }\n  },\n  'batch.$.digudang': {\n    type: Number\n  },\n  'batch.$.diapotik': {\n    type: Number\n  },\n  'batch.$.diretur': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'batch.$.beli': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.jual': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.suplier': {\n    type: String\n  },\n  'batch.$.returnable': {\n    type: Boolean,\n    optional: true\n  },\n  'batch.$.anggaran': {\n    type: Number,\n    autoform: {\n      options: selects.anggaran\n    }\n  },\n  'batch.$.pengadaan': {\n    type: Number\n  }\n});\n\nschema.amprah = _.assign({}, schema.gudang, {\n  amprah: {\n    type: Array\n  },\n  'amprah.$': {\n    type: Object\n  },\n  'amprah.$.diminta': {\n    type: Number\n  }\n});\n\nschema.logistik = _.assign({}, schema.gudang, {});\n\nschema.dokter = {\n  nama: {\n    type: String\n  },\n  tipe: {\n    type: Number,\n    autoform: {\n      options: selects.tipe_dokter\n    }\n  },\n  poli: {\n    type: Number,\n    autoform: {\n      options: selects.klinik\n    }\n  }\n};\n\nschema.tarif = {\n  jenis: {\n    type: String\n  },\n  nama: {\n    type: String\n  },\n  harga: {\n    type: Number\n  },\n  grup: {\n    type: String,\n    optional: true\n  }\n};\n\n_.map(['dokter', 'tarif'], function(i) {\n  var obj;\n  obj = {\n    active: {\n      type: Boolean,\n      autoform: {\n        type: 'hidden'\n      },\n      autoValue: function() {\n        return true;\n      }\n    }\n  };\n  return _.assign(schema[i], obj);\n});\n\n_.map(['pasien', 'gudang', 'dokter', 'tarif'], function(i) {\n  var arr;\n  coll[i] = new Meteor.Collection(i);\n  arr = ['insert', 'update', 'remove'];\n  return coll[i].allow(_.zipObject(arr, _.map(arr, function(i) {\n    return function() {\n      return true;\n    };\n  })));\n});\n\n_.map(modules.slice(0, 10), function(i) {\n  return Router.route('/' + i.name + '/:no_mr?', {\n    name: i.name,\n    action: function() {\n      return this.render('pasien');\n    },\n    waitOn: function() {\n      return _.map(['dokter', 'tarif', 'gudang'], function(j) {\n        return Meteor.subscribe('coll', j, {}, {});\n      });\n    }\n  });\n});\n\n_.map(modules.slice(10, 12), function(i) {\n  return Router.route('/' + i.name + '/:idbarang?', {\n    name: i.name,\n    action: function() {\n      return this.render('gudang');\n    },\n    waitOn: function() {\n      return Meteor.subscribe('users', {}, {\n        fields: {\n          username: 1\n        }\n      });\n    }\n  });\n});\n\n_.map(['panduan'], function(i) {\n  return Router.route('/' + i, {\n    action: function() {\n      return this.render(i);\n    }\n  });\n});\n\nRouter.route('/manajemen', {\n  action: function() {\n    return this.render('manajemen');\n  },\n  waitOn: function() {\n    return [Meteor.subscribe('users', {}, {}), Meteor.subscribe('coll', 'dokter', {}, {}), Meteor.subscribe('coll', 'tarif', {}, {})];\n  }\n});\n\nRouter.route('/login', function() {\n  return {\n    action: function() {\n      return this.render('login');\n    }\n  };\n});\n","if Meteor.isClient\n\n\tRouter.onBeforeAction ->\n\t\tunless Meteor.userId() then this.render 'login' else this.next()\n\tRouter.onAfterAction ->\n\t\tsessNull()\n\t\tRouter.go '/' unless currentRoute() in\n\t\t\t_.uniq _.flatMap _.keys(roles()), (i) ->\n\t\t\t\t_.find(rights, (j) -> j.group is i).list\n\n\tglobalHelpers = [\n\t\t['coll', -> coll]\n\t\t['schema', -> new SimpleSchema schema[currentRoute()]]\n\t\t['zeros', (num) -> zeros num]\n\t\t['showForm', -> Session.get 'showForm']\n\t\t['hari', (date) -> date and moment(date).format('D MMM YYYY')]\n\t\t['rupiah', (val) -> 'Rp ' + numeral(val).format('0,0')]\n\t\t['currentPar', (param) -> currentPar param]\n\t\t['stringify', (obj) -> JSON.stringify obj]\n\t\t['startCase', (val) -> _.startCase val]\n\t\t['modules', -> modules]\n\t\t['reverse', (arr) -> _.reverse arr]\n\t\t['sortBy', (arr, sel, sort) -> _.sortBy arr, (i) -> -i.tanggal.getTime()]\n\t\t['isTrue', (a, b) -> a is b]\n\t\t['isFalse', (a, b) -> a isnt b]\n\t\t['look', (option, value, field) -> look(option, value)[field]]\n\t\t['look2', (option, value, field) -> look2(option, value)[field]]\n\t\t['routeIs', (name) -> currentRoute() is name]\n\t\t['userGroup', (name) -> userGroup name]\n\t\t['userRole', (name) -> userRole name]\n\t\t['userName', (id) -> _.startCase userName id]\n\t]\n\t_.map globalHelpers, (i) -> Template.registerHelper i...\n\n\tTemplate.body.events\n\t\t'keypress #search': (event) ->\n\t\t\tif event.key is 'Enter'\n\t\t\t\tterm = event.target.value\n\t\t\t\tif term.length > 2\n\t\t\t\t\tSession.set 'search', term\n\n\tTemplate.layout.onRendered ->\n\t\tSession.set 'limit', 10\n\t\tSession.set 'page', 0\n\n\tTemplate.menu.helpers\n\t\tmenus: ->\t\t\t\n\t\t\t_.initial _.flatMap _.keys(roles()), (i) ->\n\t\t\t\tfind = _.find rights, (j) -> j.group is i\n\t\t\t\t_.map find.list, (j) -> _.find modules, (k) -> k.name is j\n\t\tnavTitle: ->\n\t\t\tfind = _.find modules, (i) -> i.name is currentRoute()\n\t\t\tfind?.full or _.startCase currentRoute()\n\t\ttoday: -> moment().format('LLL')\n\n\tTemplate.menu.events\n\t\t'click #logout': -> Meteor.logout()\n\n\tTemplate.pasien.helpers\n\t\theads: ->\n\t\t\tpasien: ['No MR', 'Nama', 'Orang Tua', 'Alamat', 'Jenis Kelamin', 'Tgl Lahir']\n\t\t\tbayar: ['No MR', 'Nama', 'Tanggal', 'Total Biaya', 'Cara Bayar', 'Klinik', 'Aksi']\n\t\t\tlabor: ['No MR', 'Pasien', 'Grup', 'Order', 'Aksi']\n\t\t\tradio: ['No MR', 'Pasien', 'Order', 'Aksi']\n\t\t\tobat: ['No MR', 'Pasien', 'Nama Obat', 'Kali', 'Dosis', 'Bentuk', 'Jumlah', 'Serah']\n\t\t\trawat: ['Tanggal', 'Klinik', 'Cara Bayar', 'Bayar Pendaftaran', 'Bayar Tindakan', 'Cek']\n\t\t\tfisik: ['Tekanan Darah', 'Nadi', 'Suhu', 'Pernapasan', 'Berat', 'Tinggi', 'LILA']\n\t\t\tpreviewDokter: ['Tindakan', 'Dokter', 'Harga']\n\t\t\tpreviewLabor: ['Grup', 'Order', 'Hasil']\n\t\t\tpreviewRadio: ['Order', 'Arsip']\n\t\t\tpreviewObat: ['Nama', 'Dosis', 'Bentuk', 'Kali', 'Jumlah']\n\t\troute: -> currentRoute()\n\t\tformType: ->\n\t\t\tif currentRoute() is 'regis'\n\t\t\t\tif currentPar 'no_mr' then 'update' else 'insert'\n\t\t\telse\n\t\t\t\t'update-pushArray'\n\t\tumur: (date) -> moment().diff(date, 'years') + ' tahun'\n\t\tshowButton: -> Router.current().params.no_mr or currentRoute() is 'regis'\n\t\tshowButtonText: ->\n\t\t\tswitch currentRoute()\n\t\t\t\twhen 'regis' then '+ Pasien'\n\t\t\t\twhen 'jalan' then '+ Rawat'\n\t\tformDoc: -> formDoc()\n\t\tpreview: -> Session.get 'preview'\n\t\tomitFields: ->\n\t\t\tarr = ['anamesa_perawat', 'fisik', 'anamesa_dokter', 'diagnosa', 'planning', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah']\n\t\t\tunless formDoc() and formDoc().billRegis\n\t\t\t\tarr\n\t\t\telse unless _.split(Meteor.user().username, '.')[0] is 'dr'\n\t\t\t\tarr[2..arr.length]\n\t\troleFilter: (arr) -> _.reverse _.filter arr, (i) ->\n\t\t\tfind = _.find selects.klinik, (j) ->\n\t\t\t\tj.label is _.startCase roles().jalan[0]\n\t\t\ti.klinik is find.value\n\t\tuserPoli: -> roles().jalan\n\t\tinsurance: (val) -> 'Rp ' + numeral(val+30000).format('0,0')\n\t\tselPol: -> _.map roles().jalan, (i) ->\n\t\t\t_.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\tpasiens: ->\n\t\t\tif currentPar 'no_mr'\n\t\t\t\tselector = no_mr: parseInt currentPar 'no_mr'\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tarr = ['bayar', 'jalan', 'labor', 'radio', 'obat']\n\t\t\t\toptions.fields.rawat = 1 if currentRoute() in arr\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = 'regis.nama_lengkap': $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyNoMR = no_mr: parseInt search()\n\t\t\t\tselector = $or: [byName, byNoMR]\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if roles().jalan\n\t\t\t\tnow = new Date(); past = new Date now.getDate()-2\n\t\t\t\tkliniks = _.map roles().jalan, (i) ->\n\t\t\t\t\tfind = _.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\t\t\t\tfind.value\n\t\t\t\tselector = rawat: $elemMatch:\n\t\t\t\t\tklinik: $in: kliniks\n\t\t\t\t\ttanggal: $gt: past\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready()\n\t\t\t\t\tfilter = _.filter coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\t\ta = -> i.rawat[i.rawat.length-1].klinik in kliniks\n\t\t\t\t\t\tb = -> not i.rawat[i.rawat.length-1].total.semua\n\t\t\t\t\t\tselPol = Session.get 'selPol'\n\t\t\t\t\t\tc = -> i.rawat[i.rawat.length-1].klinik is selPol\n\t\t\t\t\t\tif selPol then b() and c() else a() and b()\n\t\t\t\t\t_.sortBy filter, (i) -> i.rawat[i.rawat.length-1].tanggal\n\t\t\telse if currentRoute() is 'bayar'\n\t\t\t\tselector = rawat: $elemMatch: $or: ['status_bayar': $ne: true]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if currentRoute() in ['labor', 'radio', 'obat']\n\t\t\t\telem = 'status_bayar': true\n\t\t\t\telem[currentRoute()] = $exists: true, $elemMatch: hasil: $exists: false\n\t\t\t\tselSub = rawat: $elemMatch: elem\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selSub, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\n\tTemplate.pasien.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t\tif userGroup 'regis' then Session.set 'formDoc', null\n\t\t\tlater = ->\n\t\t\t\t$('.autoform-remove-item').trigger 'click'\n\t\t\t\tif currentRoute() is 'jalan'\n\t\t\t\t\t_.map ['cara_bayar', 'klinik', 'karcis', 'rujukan'], (i) ->\n\t\t\t\t\t\t$('div[data-schema-key=\"'+i+'\"]').prepend tag 'p', _.startCase i\n\t\t\t\t\t\tif formDoc()\n\t\t\t\t\t\t\t$('input[name=\"'+i+'\"][value=\"'+formDoc()[i]+'\"]').attr checked: true\n\t\t\t\t\t\t\t$('input[name=\"'+i+'\"]').attr disabled: 'disabled'\n\t\t\t\t\t_.map ['anamesa_perawat'], (i) ->\n\t\t\t\t\t\t$('textarea[name=\"'+i+'\"]').val formDoc()[i]\n\t\t\t\tlist = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan']\n\t\t\t\tif currentRoute() is 'regis' then _.map list, (i) ->\n\t\t\t\t\t$('div[data-schema-key=\"regis.'+i+'\"]').prepend tag 'p', _.startCase i\n\t\t\tMeteor.setTimeout later, 1000\n\t\t\tMeteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\tSession.set 'begin', moment()\n\t\t'dblclick #row': ->\n\t\t\tRouter.go '/' + currentRoute() + '/' + this.no_mr\n\t\t'click #close': -> sessNull(); Router.go currentRoute()\n\t\t'click #card': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak Kartu'\n\t\t\t\tmessage: 'Yakin untuk cetak kartu ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\t# Meteor.call 'billCard', currentPar('no_mr'), true\n\t\t\t\tmakePdf.card()\n\t\t'click #consent': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak General Consent'\n\t\t\t\tmessage: 'Yakin untuk cetak persetujuan pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> makePdf.consent() if ok\n\t\t'dblclick #bill': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'karcis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Pembayaran Pendaftaran'\n\t\t\t\tmessage: 'Apakah yakin pasien sudah membayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tif nodes[1]\n\t\t\t\t\tMeteor.call 'billRegis', nodes[0..1]..., true\n\t\t\t\t\tmakePdf.payRegCard nodes[0], nodes[2], '...'\n\t\t\t\telse\n\t\t\t\t\tMeteor.call 'billCard', nodes[0], false\n\t\t\t\t\tmakePdf.payRegCard 10000, 'Sepuluh Ribu Rupiah'\n\t\t'dblclick #bayar': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Pembayaran'\n\t\t\t\tmessage: 'Apakah yakin tagihan ini sudah dibayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'bayar', nodes...\n\t\t\t\tpasien = coll.pasien.findOne no_mr: parseInt nodes[0]\n\t\t\t\tdoc = _.find pasien.rawat, (i) -> i.idbayar is nodes[1]\n\t\t\t\tmakePdf.payRawat nodes[0], doc\n\t\t'dblclick #request': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'jenis', 'idjenis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tMaterializeModal.prompt\n\t\t\t\tmessage: 'Isikan data requestnya'\n\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\tparams = ['request', nodes..., res.value]\n\t\t\t\t\tMeteor.call params..., (err, res) -> if res\n\t\t\t\t\t\tmessage = ''\n\t\t\t\t\t\tfor key, val of res\n\t\t\t\t\t\t\tmessage += tag 'p', key + ': ' + val\n\t\t\t\t\t\tMaterializeModal.message\n\t\t\t\t\t\t\ttitle: 'Penyerahan Obat'\n\t\t\t\t\t\t\tmessage: message\n\t\t\t\t\t\trekap = Session.get('rekap') or []\n\t\t\t\t\t\tflat = _.flatten _.toPairs res\n\t\t\t\t\t\tSession.set 'rekap', [rekap..., [nodes..., flat...]]\n\t\t'dblclick #rekap': ->\n\t\t\theaders = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah']\n\t\t\tmakePdf.rekap [headers, Session.get('rekap')...]\n\t\t\tSession.set 'rekap', null\n\t\t'click .modal-trigger': (event) ->\n\t\t\tif this.idbayar\n\t\t\t\tSession.set 'formDoc', this\n\t\t\t\tSession.set 'preview', modForm this, this.idbayar\n\t\t\t$('#preview').modal 'open'\n\t\t'click #rmRawat': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Hapus'\n\t\t\t\tmessage: 'Apakah yakin hapus data rawat pasien ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRawat', currentPar('no_mr'), self.idbayar\n\t\t'change #selPol': (event) ->\n\t\t\tSession.set 'selPol', parseInt event.target.id\n\t\t'click #rmPasien': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Pasien'\n\t\t\t\tmessage: 'Apakah yakin untuk menghapus pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmPasien', currentPar 'no_mr'\n\t\t\t\tRouter.go '/' + currentRoute()\n\n\tTemplate.import.events\n\t\t'change :file': (event, template) ->\n\t\t\tPapa.parse event.target.files[0],\n\t\t\t\theader: true\n\t\t\t\tstep: (result) ->\n\t\t\t\t\tdata = result.data[0]\n\t\t\t\t\tif currentRoute() is 'regis'\n\t\t\t\t\t\tselector = no_mr: parseInt data.no_mr\n\t\t\t\t\t\tmodifier = regis:\n\t\t\t\t\t\t\tnama_lengkap: _.startCase data.nama_lengkap\n\t\t\t\t\t\t\talamat: _.startCase data.alamat\n\t\t\t\t\t\t\tagama: parseInt data.agama if data.agama\n\t\t\t\t\t\t\tayah: _.startCase data.ayah if data.ayah\n\t\t\t\t\t\t\tnikah: parseInt data.nikah if data.nikah\n\t\t\t\t\t\t\tpekerjaan: parseInt data.pekerjaan if data.pekerjaan\n\t\t\t\t\t\t\tpendidikan: parseInt data.pendidikan if data.pendidikan\n\t\t\t\t\t\t\ttgl_lahir: new Date date.tgl_lahir if Date.parse data.tgl_lahir\n\t\t\t\t\t\t\ttmpt_kelahiran: _.startCase data.tmpt_kelahiran if data.tmpt_kelahiran\n\t\t\t\t\t\tMeteor.call 'import', 'pasien', selector, modifier\n\t\t\t\t\telse if currentRoute() is 'manajemen'\n\t\t\t\t\t\tif data.tipe\n\t\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\ttipe: parseInt data.tipe\n\t\t\t\t\t\t\t\tpoli: parseInt data.poli\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tMeteor.call 'import', 'dokter', selector, modifier\n\t\t\t\t\t\telse if data.harga\n\t\t\t\t\t\t\tselector = nama: _.snakeCase data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\tharga: parseInt data.harga\n\t\t\t\t\t\t\t\tjenis: _.snakeCase data.jenis\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tdata.grup and modifier.grup = _.startCase data.grup\n\t\t\t\t\t\t\tMeteor.call 'import', 'tarif', selector, modifier\n\t\t\t\t\t\telse if data.password\n\t\t\t\t\t\t\tMeteor.call 'newUser', data\n\t\t\t\t\t\t\tMeteor.call 'addRole', data.username, [data.role], data.group\n\t\t\t\t\telse if currentRoute() is 'farmasi'\n\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\tidbarang: randomId()\n\t\t\t\t\t\t\tbatch: [\n\t\t\t\t\t\t\t\tidbatch: randomId()\n\t\t\t\t\t\t\t\tanggaran: data.anggaran\n\t\t\t\t\t\t\t\tbeli: parseInt data.beli\n\t\t\t\t\t\t\t\tdiapotik: parseInt data.diapotik\n\t\t\t\t\t\t\t\tdigudang: parseInt data.digudang\n\t\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\t\tjual: parseInt data.jual\n\t\t\t\t\t\t\t\tkadaluarsa: new Date data.kadaluarsa\n\t\t\t\t\t\t\t\tmasuk: new Date data.masuk\n\t\t\t\t\t\t\t\tmerek: data.merek or ''\n\t\t\t\t\t\t\t\tnobatch: data.nobatch\n\t\t\t\t\t\t\t\tpengadaan: parseInt data.pengadaan\n\t\t\t\t\t\t\t\tsatuan: parseInt data.satuan\n\t\t\t\t\t\t\t\tsuplier: data.suplier\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\tdata.nama and Meteor.call 'import', 'gudang', selector, modifier, 'batch'\n\n\tTemplate.export.onRendered ->\n\t\t$('select#export').material_select()\n\n\tTemplate.export.events\n\t\t'click #export': ->\n\t\t\tselect = $('select#export').val()\n\t\t\tMeteor.call 'export', select, (err, content) -> if content\n\t\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\t\tsaveAs blob, select+'.csv'\n\n\tTemplate.gudang.helpers\n\t\theads: ->\n\t\t\tbarang: ['Jenis Barang', 'Nama Barang', 'Stok Gudang', 'Stok Apotik']\n\t\t\tbatch: ['No Batch', 'Masuk', 'Kadaluarsa', 'Beli', 'Jual', 'Di Gudang', 'Di Apotik', 'Suplier']\n\t\t\tamprah: ['Ruangan', 'Peminta', 'Meminta', 'Penyerah', 'Menyerahkan', 'Tanggal']\n\t\tformType: -> if currentPar('idbarang') then 'update-pushArray' else 'insert'\n\t\twarning: (date) -> switch\n\t\t\twhen monthDiff(date) < 2 then 'red'\n\t\t\twhen monthDiff(date) < 7 then 'orange'\n\t\t\twhen monthDiff(date) < 13 then 'yellow'\n\t\t\telse 'green'\n\t\tgudangs: ->\n\t\t\taggr = (i) -> _.map i, (j) ->\n\t\t\t\treduced = (name) -> _.reduce j.batch, ((sum, n) -> sum + n[name]), 0\n\t\t\t\tj.akumulasi = digudang: reduced('digudang'), diapotik: reduced('diapotik')\n\t\t\t\tj\n\t\t\tif currentPar 'idbarang'\n\t\t\t\tselector = idbarang: currentPar 'idbarang'\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tif sub.ready() then coll.gudang.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = nama: $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyBatch = idbatch: search()\n\t\t\t\tselector = $or: [byName, byBatch]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tsub.ready() and aggr coll.gudang.find().fetch()\n\t\t\telse\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\t\tsub.ready() and aggr coll.gudang.find().fetch()\n\t\tnearEds: -> Session.get 'nearEds'\n\t\taddAmprah: -> Session.get 'addAmprah'\n\t\tschemaAmprah: -> new SimpleSchema schema.amprah\n\n\tTemplate.gudang.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t'dblclick #row': -> Router.go '/' + currentRoute() + '/' + this.idbarang\n\t\t'dblclick #transfer': ->\n\t\t\tdata = this\n\t\t\tif roles().farmasi\n\t\t\t\tMaterializeModal.prompt\n\t\t\t\t\tmessage: 'Transfer Gudang > Apotek'\n\t\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\t\tMeteor.call 'transfer', currentPar('idbarang'), data.idbatch, parseInt res.value\n\t\t'click #rmBarang': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Jenis Obat'\n\t\t\t\tmessage: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmBarang', self.idbarang\n\t\t'click #rmBatch': ->\n\t\t\tself = this\n\t\t\tdialog = title: 'Yakin?', message: 'Hapus 1 batch ini'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmBatch', currentPar('idbarang'), self.idbatch\n\t\t'click #nearEds': ->\n\t\t\tSession.set 'nearEds', null\n\t\t\treturnable = $('#returnable').is ':checked'\n\t\t\tMeteor.call 'nearEds', returnable, (err, res) ->\n\t\t\t\tif res then Session.set 'nearEds', res\n\t\t'dblclick #nearEd': ->\n\t\t\tself = this\n\t\t\tdialog = title: 'Karantina?', message: 'Pindahkan ke karantina'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'returBatch', self\n\t\t'click #addAmprah': ->\n\t\t\tunless userGroup 'farmasi'\n\t\t\t\tSession.set 'addAmprah', not Session.get 'addAmprah'\n\t\t'dblclick #amprah': ->\n\t\t\tif userGroup 'farmasi'\n\t\t\t\tunless this.diserah\n\t\t\t\t\tself = this\n\t\t\t\t\tMaterializeModal.prompt\n\t\t\t\t\t\tmessage: 'Jumlah diserahkan'\n\t\t\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\t\t\tMeteor.call 'amprah', currentPar('idbarang'), self.idamprah, parseInt res.value\n\n\tTemplate.manajemen.helpers\n\t\tusers: -> Meteor.users.find().fetch()\n\t\tonUser: -> Session.get 'onUser'\n\t\tselRoles: -> ['petugas', 'admin']\n\t\tklinik: -> selects.klinik\n\t\tschemadokter: -> new SimpleSchema schema.dokter\n\t\tschematarif: -> new SimpleSchema schema.tarif\n\t\tdokters: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.dokter.find(selector, options).fetch()\n\t\ttarifs: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.tarif.find(selector, options).fetch()\n\n\tTemplate.manajemen.events\n\t\t'submit #userForm': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tonUser = Session.get 'onUser'\n\t\t\tunless onUser\n\t\t\t\tdoc =\n\t\t\t\t\tusername: event.target.children.username.value\n\t\t\t\t\tpassword: event.target.children.password.value\n\t\t\t\trepeat = event.target.children.repeat.value\n\t\t\t\tif doc.password is repeat\n\t\t\t\t\tMeteor.call 'newUser', doc\n\t\t\t\t\t$('input').val ''\n\t\t\t\telse\n\t\t\t\t\tMaterialize.toast 'Password tidak mirip', 3000\n\t\t\telse\n\t\t\t\trole = $('input[name=\"role\"]:checked', event.target)[0].id\n\t\t\t\tgroup = $('input[name=\"group\"]:checked', event.target)[0].id\n\t\t\t\tpoli = $('input[name=\"poli\"]:checked', event.target)[0]\n\t\t\t\ttheRole = unless poli then role else _.snakeCase poli.id\n\t\t\t\tMeteor.call 'addRole', onUser._id, [theRole], group\n\t\t'dblclick #row': -> Session.set 'onUser', this\n\t\t'dblclick #reset': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Reset Peranan'\n\t\t\t\tmessage: 'Anda yakin untuk menghapus semua perannya?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRole', self._id\n\t\t'click #close': -> sessNull()\n\t\t'dblclick #baris': (event) ->\n\t\t\tjenis = event.currentTarget.className\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus ' + _.startCase jenis\n\t\t\t\tmessage: 'Yakin untuk menghapus '+jenis+' dari daftar?'\n\t\t\tself = this\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'inactive', jenis, self._id\n\n\tTemplate.login.onRendered ->\n\t\t$('.slider').slider()\n\n\tTemplate.login.events\n\t\t'submit form': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tusername = event.target.children.username.value\n\t\t\tpassword = event.target.children.password.value\n\t\t\tMeteor.loginWithPassword username, password, (err) ->\n\t\t\t\tif err\n\t\t\t\t\tMaterialize.toast 'Salah username / password', 3000\n\t\t\t\telse\n\t\t\t\t\tRouter.go '/' + _.keys(roles())[0]\n\n\tTemplate.pagination.helpers\n\t\tpagins: (name) ->\n\t\t\tlimit = Session.get 'limit'\n\t\t\tlength = coll[name].find().fetch().length\n\t\t\tend = (length - (length % limit)) / limit\n\t\t\t[1..end]\n\n\tTemplate.pagination.events\n\t\t'click #next': -> Session.set 'page', 1 + page()\n\t\t'click #prev': -> Session.set 'page', -1 + page()\n\t\t'click #num': (event) ->\n\t\t\tSession.set 'page', parseInt event.target.innerText\n\n\tTemplate.report.helpers\n\t\tdatas: -> Session.get 'laporan'\n\n\tTemplate.report.events\n\t\t'click .datepicker': (event, template) ->\n\t\t\ttype = event.target.attributes.date.nodeValue\n\t\t\t$('#'+type).pickadate onSet: (data) ->\n\t\t\t\tSession.set type+'Date', data.select\n\t\t\t\tstart = Session.get 'startDate'\n\t\t\t\tend = Session.get 'endDate'\n\t\t\t\tif start and end\n\t\t\t\t\tMeteor.call 'report', template.data.jenis, start, end, (err, res) ->\n\t\t\t\t\t\tres and Session.set 'laporan', res\n\t\t'click #export': (event, template) ->\n\t\t\tcontent = exportcsv.exportToCSV Session.get('laporan').csv, true, ';'\n\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\tsaveAs blob, template.data.jenis+'.csv'\n","var globalHelpers,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  slice = [].slice;\n\nif (Meteor.isClient) {\n  Router.onBeforeAction(function() {\n    if (!Meteor.userId()) {\n      return this.render('login');\n    } else {\n      return this.next();\n    }\n  });\n  Router.onAfterAction(function() {\n    var ref;\n    sessNull();\n    if (ref = currentRoute(), indexOf.call(_.uniq(_.flatMap(_.keys(roles()), function(i) {\n      return _.find(rights, function(j) {\n        return j.group === i;\n      }).list;\n    })), ref) < 0) {\n      return Router.go('/');\n    }\n  });\n  globalHelpers = [\n    [\n      'coll', function() {\n        return coll;\n      }\n    ], [\n      'schema', function() {\n        return new SimpleSchema(schema[currentRoute()]);\n      }\n    ], [\n      'zeros', function(num) {\n        return zeros(num);\n      }\n    ], [\n      'showForm', function() {\n        return Session.get('showForm');\n      }\n    ], [\n      'hari', function(date) {\n        return date && moment(date).format('D MMM YYYY');\n      }\n    ], [\n      'rupiah', function(val) {\n        return 'Rp ' + numeral(val).format('0,0');\n      }\n    ], [\n      'currentPar', function(param) {\n        return currentPar(param);\n      }\n    ], [\n      'stringify', function(obj) {\n        return JSON.stringify(obj);\n      }\n    ], [\n      'startCase', function(val) {\n        return _.startCase(val);\n      }\n    ], [\n      'modules', function() {\n        return modules;\n      }\n    ], [\n      'reverse', function(arr) {\n        return _.reverse(arr);\n      }\n    ], [\n      'sortBy', function(arr, sel, sort) {\n        return _.sortBy(arr, function(i) {\n          return -i.tanggal.getTime();\n        });\n      }\n    ], [\n      'isTrue', function(a, b) {\n        return a === b;\n      }\n    ], [\n      'isFalse', function(a, b) {\n        return a !== b;\n      }\n    ], [\n      'look', function(option, value, field) {\n        return look(option, value)[field];\n      }\n    ], [\n      'look2', function(option, value, field) {\n        return look2(option, value)[field];\n      }\n    ], [\n      'routeIs', function(name) {\n        return currentRoute() === name;\n      }\n    ], [\n      'userGroup', function(name) {\n        return userGroup(name);\n      }\n    ], [\n      'userRole', function(name) {\n        return userRole(name);\n      }\n    ], [\n      'userName', function(id) {\n        return _.startCase(userName(id));\n      }\n    ]\n  ];\n  _.map(globalHelpers, function(i) {\n    return Template.registerHelper.apply(Template, i);\n  });\n  Template.body.events({\n    'keypress #search': function(event) {\n      var term;\n      if (event.key === 'Enter') {\n        term = event.target.value;\n        if (term.length > 2) {\n          return Session.set('search', term);\n        }\n      }\n    }\n  });\n  Template.layout.onRendered(function() {\n    Session.set('limit', 10);\n    return Session.set('page', 0);\n  });\n  Template.menu.helpers({\n    menus: function() {\n      return _.initial(_.flatMap(_.keys(roles()), function(i) {\n        var find;\n        find = _.find(rights, function(j) {\n          return j.group === i;\n        });\n        return _.map(find.list, function(j) {\n          return _.find(modules, function(k) {\n            return k.name === j;\n          });\n        });\n      }));\n    },\n    navTitle: function() {\n      var find;\n      find = _.find(modules, function(i) {\n        return i.name === currentRoute();\n      });\n      return (find != null ? find.full : void 0) || _.startCase(currentRoute());\n    },\n    today: function() {\n      return moment().format('LLL');\n    }\n  });\n  Template.menu.events({\n    'click #logout': function() {\n      return Meteor.logout();\n    }\n  });\n  Template.pasien.helpers({\n    heads: function() {\n      return {\n        pasien: ['No MR', 'Nama', 'Orang Tua', 'Alamat', 'Jenis Kelamin', 'Tgl Lahir'],\n        bayar: ['No MR', 'Nama', 'Tanggal', 'Total Biaya', 'Cara Bayar', 'Klinik', 'Aksi'],\n        labor: ['No MR', 'Pasien', 'Grup', 'Order', 'Aksi'],\n        radio: ['No MR', 'Pasien', 'Order', 'Aksi'],\n        obat: ['No MR', 'Pasien', 'Nama Obat', 'Kali', 'Dosis', 'Bentuk', 'Jumlah', 'Serah'],\n        rawat: ['Tanggal', 'Klinik', 'Cara Bayar', 'Bayar Pendaftaran', 'Bayar Tindakan', 'Cek'],\n        fisik: ['Tekanan Darah', 'Nadi', 'Suhu', 'Pernapasan', 'Berat', 'Tinggi', 'LILA'],\n        previewDokter: ['Tindakan', 'Dokter', 'Harga'],\n        previewLabor: ['Grup', 'Order', 'Hasil'],\n        previewRadio: ['Order', 'Arsip'],\n        previewObat: ['Nama', 'Dosis', 'Bentuk', 'Kali', 'Jumlah']\n      };\n    },\n    route: function() {\n      return currentRoute();\n    },\n    formType: function() {\n      if (currentRoute() === 'regis') {\n        if (currentPar('no_mr')) {\n          return 'update';\n        } else {\n          return 'insert';\n        }\n      } else {\n        return 'update-pushArray';\n      }\n    },\n    umur: function(date) {\n      return moment().diff(date, 'years') + ' tahun';\n    },\n    showButton: function() {\n      return Router.current().params.no_mr || currentRoute() === 'regis';\n    },\n    showButtonText: function() {\n      switch (currentRoute()) {\n        case 'regis':\n          return '+ Pasien';\n        case 'jalan':\n          return '+ Rawat';\n      }\n    },\n    formDoc: function() {\n      return formDoc();\n    },\n    preview: function() {\n      return Session.get('preview');\n    },\n    omitFields: function() {\n      var arr;\n      arr = ['anamesa_perawat', 'fisik', 'anamesa_dokter', 'diagnosa', 'planning', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah'];\n      if (!(formDoc() && formDoc().billRegis)) {\n        return arr;\n      } else if (_.split(Meteor.user().username, '.')[0] !== 'dr') {\n        return arr.slice(2, +arr.length + 1 || 9e9);\n      }\n    },\n    roleFilter: function(arr) {\n      return _.reverse(_.filter(arr, function(i) {\n        var find;\n        find = _.find(selects.klinik, function(j) {\n          return j.label === _.startCase(roles().jalan[0]);\n        });\n        return i.klinik === find.value;\n      }));\n    },\n    userPoli: function() {\n      return roles().jalan;\n    },\n    insurance: function(val) {\n      return 'Rp ' + numeral(val + 30000).format('0,0');\n    },\n    selPol: function() {\n      return _.map(roles().jalan, function(i) {\n        return _.find(selects.klinik, function(j) {\n          return i === _.snakeCase(j.label);\n        });\n      });\n    },\n    pasiens: function() {\n      var arr, byName, byNoMR, elem, filter, kliniks, now, options, past, ref, ref1, selSub, selector, sub;\n      if (currentPar('no_mr')) {\n        selector = {\n          no_mr: parseInt(currentPar('no_mr'))\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        arr = ['bayar', 'jalan', 'labor', 'radio', 'obat'];\n        if (ref = currentRoute(), indexOf.call(arr, ref) >= 0) {\n          options.fields.rawat = 1;\n        }\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          'regis.nama_lengkap': {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byNoMR = {\n          no_mr: parseInt(search())\n        };\n        selector = {\n          $or: [byName, byNoMR]\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if (roles().jalan) {\n        now = new Date();\n        past = new Date(now.getDate() - 2);\n        kliniks = _.map(roles().jalan, function(i) {\n          var find;\n          find = _.find(selects.klinik, function(j) {\n            return i === _.snakeCase(j.label);\n          });\n          return find.value;\n        });\n        selector = {\n          rawat: {\n            $elemMatch: {\n              klinik: {\n                $in: kliniks\n              },\n              tanggal: {\n                $gt: past\n              }\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          filter = _.filter(coll.pasien.find().fetch(), function(i) {\n            var a, b, c, selPol;\n            a = function() {\n              var ref1;\n              return ref1 = i.rawat[i.rawat.length - 1].klinik, indexOf.call(kliniks, ref1) >= 0;\n            };\n            b = function() {\n              return !i.rawat[i.rawat.length - 1].total.semua;\n            };\n            selPol = Session.get('selPol');\n            c = function() {\n              return i.rawat[i.rawat.length - 1].klinik === selPol;\n            };\n            if (selPol) {\n              return b() && c();\n            } else {\n              return a() && b();\n            }\n          });\n          return _.sortBy(filter, function(i) {\n            return i.rawat[i.rawat.length - 1].tanggal;\n          });\n        }\n      } else if (currentRoute() === 'bayar') {\n        selector = {\n          rawat: {\n            $elemMatch: {\n              $or: [\n                {\n                  'status_bayar': {\n                    $ne: true\n                  }\n                }\n              ]\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if ((ref1 = currentRoute()) === 'labor' || ref1 === 'radio' || ref1 === 'obat') {\n        elem = {\n          'status_bayar': true\n        };\n        elem[currentRoute()] = {\n          $exists: true,\n          $elemMatch: {\n            hasil: {\n              $exists: false\n            }\n          }\n        };\n        selSub = {\n          rawat: {\n            $elemMatch: elem\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selSub, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      }\n    }\n  });\n  Template.pasien.events({\n    'click #showForm': function() {\n      var later;\n      Session.set('showForm', !Session.get('showForm'));\n      if (userGroup('regis')) {\n        Session.set('formDoc', null);\n      }\n      later = function() {\n        var list;\n        $('.autoform-remove-item').trigger('click');\n        if (currentRoute() === 'jalan') {\n          _.map(['cara_bayar', 'klinik', 'karcis', 'rujukan'], function(i) {\n            $('div[data-schema-key=\"' + i + '\"]').prepend(tag('p', _.startCase(i)));\n            if (formDoc()) {\n              $('input[name=\"' + i + '\"][value=\"' + formDoc()[i] + '\"]').attr({\n                checked: true\n              });\n              return $('input[name=\"' + i + '\"]').attr({\n                disabled: 'disabled'\n              });\n            }\n          });\n          _.map(['anamesa_perawat'], function(i) {\n            return $('textarea[name=\"' + i + '\"]').val(formDoc()[i]);\n          });\n        }\n        list = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan'];\n        if (currentRoute() === 'regis') {\n          return _.map(list, function(i) {\n            return $('div[data-schema-key=\"regis.' + i + '\"]').prepend(tag('p', _.startCase(i)));\n          });\n        }\n      };\n      Meteor.setTimeout(later, 1000);\n      Meteor.subscribe('coll', 'gudang', {}, {});\n      return Session.set('begin', moment());\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.no_mr);\n    },\n    'click #close': function() {\n      sessNull();\n      return Router.go(currentRoute());\n    },\n    'click #card': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak Kartu',\n        message: 'Yakin untuk cetak kartu ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.card();\n        }\n      });\n    },\n    'click #consent': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak General Consent',\n        message: 'Yakin untuk cetak persetujuan pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.consent();\n        }\n      });\n    },\n    'dblclick #bill': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar', 'karcis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Pembayaran Pendaftaran',\n        message: 'Apakah yakin pasien sudah membayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          if (nodes[1]) {\n            Meteor.call.apply(Meteor, ['billRegis'].concat(slice.call(nodes.slice(0, 2)), [true]));\n            return makePdf.payRegCard(nodes[0], nodes[2], '...');\n          } else {\n            Meteor.call('billCard', nodes[0], false);\n            return makePdf.payRegCard(10000, 'Sepuluh Ribu Rupiah');\n          }\n        }\n      });\n    },\n    'dblclick #bayar': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Konfirmasi Pembayaran',\n        message: 'Apakah yakin tagihan ini sudah dibayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        var doc, pasien;\n        if (ok) {\n          Meteor.call.apply(Meteor, ['bayar'].concat(slice.call(nodes)));\n          pasien = coll.pasien.findOne({\n            no_mr: parseInt(nodes[0])\n          });\n          doc = _.find(pasien.rawat, function(i) {\n            return i.idbayar === nodes[1];\n          });\n          return makePdf.payRawat(nodes[0], doc);\n        }\n      });\n    },\n    'dblclick #request': function(event) {\n      var nodes;\n      nodes = _.map(['pasien', 'idbayar', 'jenis', 'idjenis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      return MaterializeModal.prompt({\n        message: 'Isikan data requestnya',\n        callback: function(err, res) {\n          var params;\n          if (res.submit) {\n            params = ['request'].concat(slice.call(nodes), [res.value]);\n            return Meteor.call.apply(Meteor, slice.call(params).concat([function(err, res) {\n              var flat, key, message, rekap, val;\n              if (res) {\n                message = '';\n                for (key in res) {\n                  val = res[key];\n                  message += tag('p', key + ': ' + val);\n                }\n                MaterializeModal.message({\n                  title: 'Penyerahan Obat',\n                  message: message\n                });\n                rekap = Session.get('rekap') || [];\n                flat = _.flatten(_.toPairs(res));\n                return Session.set('rekap', slice.call(rekap).concat([slice.call(nodes).concat(slice.call(flat))]));\n              }\n            }]));\n          }\n        }\n      });\n    },\n    'dblclick #rekap': function() {\n      var headers;\n      headers = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah'];\n      makePdf.rekap([headers].concat(slice.call(Session.get('rekap'))));\n      return Session.set('rekap', null);\n    },\n    'click .modal-trigger': function(event) {\n      if (this.idbayar) {\n        Session.set('formDoc', this);\n        Session.set('preview', modForm(this, this.idbayar));\n      }\n      return $('#preview').modal('open');\n    },\n    'click #rmRawat': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Konfirmasi Hapus',\n        message: 'Apakah yakin hapus data rawat pasien ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRawat', currentPar('no_mr'), self.idbayar);\n        }\n      });\n    },\n    'change #selPol': function(event) {\n      return Session.set('selPol', parseInt(event.target.id));\n    },\n    'click #rmPasien': function() {\n      var dialog;\n      dialog = {\n        title: 'Hapus Pasien',\n        message: 'Apakah yakin untuk menghapus pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          Meteor.call('rmPasien', currentPar('no_mr'));\n          return Router.go('/' + currentRoute());\n        }\n      });\n    }\n  });\n  Template[\"import\"].events({\n    'change :file': function(event, template) {\n      return Papa.parse(event.target.files[0], {\n        header: true,\n        step: function(result) {\n          var data, modifier, selector;\n          data = result.data[0];\n          if (currentRoute() === 'regis') {\n            selector = {\n              no_mr: parseInt(data.no_mr)\n            };\n            modifier = {\n              regis: {\n                nama_lengkap: _.startCase(data.nama_lengkap),\n                alamat: _.startCase(data.alamat),\n                agama: data.agama ? parseInt(data.agama) : void 0,\n                ayah: data.ayah ? _.startCase(data.ayah) : void 0,\n                nikah: data.nikah ? parseInt(data.nikah) : void 0,\n                pekerjaan: data.pekerjaan ? parseInt(data.pekerjaan) : void 0,\n                pendidikan: data.pendidikan ? parseInt(data.pendidikan) : void 0,\n                tgl_lahir: Date.parse(data.tgl_lahir) ? new Date(date.tgl_lahir) : void 0,\n                tmpt_kelahiran: data.tmpt_kelahiran ? _.startCase(data.tmpt_kelahiran) : void 0\n              }\n            };\n            return Meteor.call('import', 'pasien', selector, modifier);\n          } else if (currentRoute() === 'manajemen') {\n            if (data.tipe) {\n              selector = {\n                nama: data.nama\n              };\n              modifier = {\n                tipe: parseInt(data.tipe),\n                poli: parseInt(data.poli),\n                active: true\n              };\n              return Meteor.call('import', 'dokter', selector, modifier);\n            } else if (data.harga) {\n              selector = {\n                nama: _.snakeCase(data.nama)\n              };\n              modifier = {\n                harga: parseInt(data.harga),\n                jenis: _.snakeCase(data.jenis),\n                active: true\n              };\n              data.grup && (modifier.grup = _.startCase(data.grup));\n              return Meteor.call('import', 'tarif', selector, modifier);\n            } else if (data.password) {\n              Meteor.call('newUser', data);\n              return Meteor.call('addRole', data.username, [data.role], data.group);\n            }\n          } else if (currentRoute() === 'farmasi') {\n            selector = {\n              nama: data.nama\n            };\n            modifier = {\n              jenis: parseInt(data.jenis),\n              idbarang: randomId(),\n              batch: [\n                {\n                  idbatch: randomId(),\n                  anggaran: data.anggaran,\n                  beli: parseInt(data.beli),\n                  diapotik: parseInt(data.diapotik),\n                  digudang: parseInt(data.digudang),\n                  jenis: parseInt(data.jenis),\n                  jual: parseInt(data.jual),\n                  kadaluarsa: new Date(data.kadaluarsa),\n                  masuk: new Date(data.masuk),\n                  merek: data.merek || '',\n                  nobatch: data.nobatch,\n                  pengadaan: parseInt(data.pengadaan),\n                  satuan: parseInt(data.satuan),\n                  suplier: data.suplier\n                }\n              ]\n            };\n            return data.nama && Meteor.call('import', 'gudang', selector, modifier, 'batch');\n          }\n        }\n      });\n    }\n  });\n  Template[\"export\"].onRendered(function() {\n    return $('select#export').material_select();\n  });\n  Template[\"export\"].events({\n    'click #export': function() {\n      var select;\n      select = $('select#export').val();\n      return Meteor.call('export', select, function(err, content) {\n        var blob;\n        if (content) {\n          blob = new Blob([content], {\n            type: 'text/plain;charset=utf-8'\n          });\n          return saveAs(blob, select + '.csv');\n        }\n      });\n    }\n  });\n  Template.gudang.helpers({\n    heads: function() {\n      return {\n        barang: ['Jenis Barang', 'Nama Barang', 'Stok Gudang', 'Stok Apotik'],\n        batch: ['No Batch', 'Masuk', 'Kadaluarsa', 'Beli', 'Jual', 'Di Gudang', 'Di Apotik', 'Suplier'],\n        amprah: ['Ruangan', 'Peminta', 'Meminta', 'Penyerah', 'Menyerahkan', 'Tanggal']\n      };\n    },\n    formType: function() {\n      if (currentPar('idbarang')) {\n        return 'update-pushArray';\n      } else {\n        return 'insert';\n      }\n    },\n    warning: function(date) {\n      switch (false) {\n        case !(monthDiff(date) < 2):\n          return 'red';\n        case !(monthDiff(date) < 7):\n          return 'orange';\n        case !(monthDiff(date) < 13):\n          return 'yellow';\n        default:\n          return 'green';\n      }\n    },\n    gudangs: function() {\n      var aggr, byBatch, byName, selector, sub;\n      aggr = function(i) {\n        return _.map(i, function(j) {\n          var reduced;\n          reduced = function(name) {\n            return _.reduce(j.batch, (function(sum, n) {\n              return sum + n[name];\n            }), 0);\n          };\n          j.akumulasi = {\n            digudang: reduced('digudang'),\n            diapotik: reduced('diapotik')\n          };\n          return j;\n        });\n      };\n      if (currentPar('idbarang')) {\n        selector = {\n          idbarang: currentPar('idbarang')\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        if (sub.ready()) {\n          return coll.gudang.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          nama: {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byBatch = {\n          idbatch: search()\n        };\n        selector = {\n          $or: [byName, byBatch]\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        return sub.ready() && aggr(coll.gudang.find().fetch());\n      } else {\n        sub = Meteor.subscribe('coll', 'gudang', {}, {});\n        return sub.ready() && aggr(coll.gudang.find().fetch());\n      }\n    },\n    nearEds: function() {\n      return Session.get('nearEds');\n    },\n    addAmprah: function() {\n      return Session.get('addAmprah');\n    },\n    schemaAmprah: function() {\n      return new SimpleSchema(schema.amprah);\n    }\n  });\n  Template.gudang.events({\n    'click #showForm': function() {\n      return Session.set('showForm', !Session.get('showForm'));\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.idbarang);\n    },\n    'dblclick #transfer': function() {\n      var data;\n      data = this;\n      if (roles().farmasi) {\n        return MaterializeModal.prompt({\n          message: 'Transfer Gudang > Apotek',\n          callback: function(err, res) {\n            if (res.submit) {\n              return Meteor.call('transfer', currentPar('idbarang'), data.idbatch, parseInt(res.value));\n            }\n          }\n        });\n      }\n    },\n    'click #rmBarang': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Hapus Jenis Obat',\n        message: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmBarang', self.idbarang);\n        }\n      });\n    },\n    'click #rmBatch': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Yakin?',\n        message: 'Hapus 1 batch ini'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmBatch', currentPar('idbarang'), self.idbatch);\n        }\n      });\n    },\n    'click #nearEds': function() {\n      var returnable;\n      Session.set('nearEds', null);\n      returnable = $('#returnable').is(':checked');\n      return Meteor.call('nearEds', returnable, function(err, res) {\n        if (res) {\n          return Session.set('nearEds', res);\n        }\n      });\n    },\n    'dblclick #nearEd': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Karantina?',\n        message: 'Pindahkan ke karantina'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('returBatch', self);\n        }\n      });\n    },\n    'click #addAmprah': function() {\n      if (!userGroup('farmasi')) {\n        return Session.set('addAmprah', !Session.get('addAmprah'));\n      }\n    },\n    'dblclick #amprah': function() {\n      var self;\n      if (userGroup('farmasi')) {\n        if (!this.diserah) {\n          self = this;\n          return MaterializeModal.prompt({\n            message: 'Jumlah diserahkan',\n            callback: function(err, res) {\n              if (res.submit) {\n                return Meteor.call('amprah', currentPar('idbarang'), self.idamprah, parseInt(res.value));\n              }\n            }\n          });\n        }\n      }\n    }\n  });\n  Template.manajemen.helpers({\n    users: function() {\n      return Meteor.users.find().fetch();\n    },\n    onUser: function() {\n      return Session.get('onUser');\n    },\n    selRoles: function() {\n      return ['petugas', 'admin'];\n    },\n    klinik: function() {\n      return selects.klinik;\n    },\n    schemadokter: function() {\n      return new SimpleSchema(schema.dokter);\n    },\n    schematarif: function() {\n      return new SimpleSchema(schema.tarif);\n    },\n    dokters: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.dokter.find(selector, options).fetch();\n    },\n    tarifs: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.tarif.find(selector, options).fetch();\n    }\n  });\n  Template.manajemen.events({\n    'submit #userForm': function(event) {\n      var doc, group, onUser, poli, repeat, role, theRole;\n      event.preventDefault();\n      onUser = Session.get('onUser');\n      if (!onUser) {\n        doc = {\n          username: event.target.children.username.value,\n          password: event.target.children.password.value\n        };\n        repeat = event.target.children.repeat.value;\n        if (doc.password === repeat) {\n          Meteor.call('newUser', doc);\n          return $('input').val('');\n        } else {\n          return Materialize.toast('Password tidak mirip', 3000);\n        }\n      } else {\n        role = $('input[name=\"role\"]:checked', event.target)[0].id;\n        group = $('input[name=\"group\"]:checked', event.target)[0].id;\n        poli = $('input[name=\"poli\"]:checked', event.target)[0];\n        theRole = !poli ? role : _.snakeCase(poli.id);\n        return Meteor.call('addRole', onUser._id, [theRole], group);\n      }\n    },\n    'dblclick #row': function() {\n      return Session.set('onUser', this);\n    },\n    'dblclick #reset': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Reset Peranan',\n        message: 'Anda yakin untuk menghapus semua perannya?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRole', self._id);\n        }\n      });\n    },\n    'click #close': function() {\n      return sessNull();\n    },\n    'dblclick #baris': function(event) {\n      var dialog, jenis, self;\n      jenis = event.currentTarget.className;\n      dialog = {\n        title: 'Hapus ' + _.startCase(jenis),\n        message: 'Yakin untuk menghapus ' + jenis + ' dari daftar?'\n      };\n      self = this;\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('inactive', jenis, self._id);\n        }\n      });\n    }\n  });\n  Template.login.onRendered(function() {\n    return $('.slider').slider();\n  });\n  Template.login.events({\n    'submit form': function(event) {\n      var password, username;\n      event.preventDefault();\n      username = event.target.children.username.value;\n      password = event.target.children.password.value;\n      return Meteor.loginWithPassword(username, password, function(err) {\n        if (err) {\n          return Materialize.toast('Salah username / password', 3000);\n        } else {\n          return Router.go('/' + _.keys(roles())[0]);\n        }\n      });\n    }\n  });\n  Template.pagination.helpers({\n    pagins: function(name) {\n      var end, l, length, limit, results;\n      limit = Session.get('limit');\n      length = coll[name].find().fetch().length;\n      end = (length - (length % limit)) / limit;\n      return (function() {\n        results = [];\n        for (var l = 1; 1 <= end ? l <= end : l >= end; 1 <= end ? l++ : l--){ results.push(l); }\n        return results;\n      }).apply(this);\n    }\n  });\n  Template.pagination.events({\n    'click #next': function() {\n      return Session.set('page', 1 + page());\n    },\n    'click #prev': function() {\n      return Session.set('page', -1 + page());\n    },\n    'click #num': function(event) {\n      return Session.set('page', parseInt(event.target.innerText));\n    }\n  });\n  Template.report.helpers({\n    datas: function() {\n      return Session.get('laporan');\n    }\n  });\n  Template.report.events({\n    'click .datepicker': function(event, template) {\n      var type;\n      type = event.target.attributes.date.nodeValue;\n      return $('#' + type).pickadate({\n        onSet: function(data) {\n          var end, start;\n          Session.set(type + 'Date', data.select);\n          start = Session.get('startDate');\n          end = Session.get('endDate');\n          if (start && end) {\n            return Meteor.call('report', template.data.jenis, start, end, function(err, res) {\n              return res && Session.set('laporan', res);\n            });\n          }\n        }\n      });\n    },\n    'click #export': function(event, template) {\n      var blob, content;\n      content = exportcsv.exportToCSV(Session.get('laporan').csv, true, ';');\n      blob = new Blob([content], {\n        type: 'text/plain;charset=utf-8'\n      });\n      return saveAs(blob, template.data.jenis + '.csv');\n    }\n  });\n}\n","if Meteor.isServer\n\n\tMeteor.startup ->\n\t\tcoll.pasien._ensureIndex 'regis.nama_lengkap': 1\n\n\tMeteor.publish 'coll', (name, selector, options) ->\n\t\tcoll[name].find selector, options\n\n\tMeteor.publish 'users', (selector, options) ->\n\t\tMeteor.users.find selector, options\n\n\tMeteor.methods\n\t\timport: (name, selector, modifier, arrName) ->\n\t\t\tfind = coll[name].findOne selector\n\t\t\tunless find\n\t\t\t\tcoll[name].upsert selector, $set: modifier\n\t\t\telse if arrName\n\t\t\t\tsel = _id: find._id\n\t\t\t\tobj = {}; obj[arrName] = modifier[arrName][0]\n\t\t\t\tcoll[name].update sel, $push: obj\n\n\t\texport: (jenis) ->\n\t\t\tif jenis is 'regis'\n\t\t\t\tarr = _.map coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\telse if jenis is 'jalan'\n\t\t\t\tfind = (type, value) ->\n\t\t\t\t\tdoc = _.find selects[type], (i) -> i.value is value\n\t\t\t\t\tdoc.label\n\t\t\t\tarr = _.flatMap coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tif i.rawat then _.map i.rawat, (j) ->\n\t\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\t\t\t\tidbayar: j.idbayar\n\t\t\t\t\t\tcara_bayar: find 'cara_bayar', j.cara_bayar\n\t\t\t\t\t\tklinik: find 'klinik', j.klinik\n\t\t\telse if jenis is 'farmasi'\n\t\t\t\tarr = _.flatMap coll.gudang.find().fetch(), (i) ->\n\t\t\t\t\t_.map i.batch, (j) ->\n\t\t\t\t\t\thead = ['jenis', 'nama']\n\t\t\t\t\t\thead = _.zipObject head, _.map head, (k) -> i[k]\n\t\t\t\t\t\tbody = ['nobatch', 'merek', 'satuan', 'masuk', 'kadaluarsa', 'digudang', 'diapotik', 'beli', 'jual', 'suplier', 'anggaran', 'pengadaan']\n\t\t\t\t\t\tbody = _.zipObject body, _.map body, (k) -> j[k]\n\t\t\t\t\t\t_.assign head, body\n\t\t\texportcsv.exportToCSV arr, true, ';'\n\n\t\tbillCard: (no_mr, state) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'regis.billCard': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbillRegis: (no_mr, idbayar, state) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'rawat.$.billRegis': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbayar: (no_mr, idbayar) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = 'rawat.$.status_bayar': true\n\t\t\tcoll.pasien.update selector, $set: modifier\n\n\t\trequest: (no_mr, idbayar, jenis, idjenis, hasil) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tfindPasien = coll.pasien.findOne selector\n\t\t\tfor i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i[jenis] then for j in i[jenis]\n\t\t\t\t\tif j['id'+jenis] is idjenis then j.hasil = hasil\n\t\t\tmodifier = rawat: findPasien.rawat\n\t\t\tcoll.pasien.update selector, $set: modifier\n\t\t\tgive = {}\n\t\t\tif jenis is 'obat' then for i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i.obat then for j in i.obat\n\t\t\t\t\tif j.idobat is idjenis\n\t\t\t\t\t\tfindStock = coll.gudang.findOne _id: j.nama\n\t\t\t\t\t\tfor k in [1..j.jumlah]\n\t\t\t\t\t\t\tfiltered = _.filter findStock.batch, (l) -> l.diapotik > 0\n\t\t\t\t\t\t\tsortedIn = _.sortBy filtered, (l) -> new Date(l.masuk).getTime()\n\t\t\t\t\t\t\tsortedEd = _.sortBy sortedIn, (l) -> new Date(l.kadaluarsa).getTime()\n\t\t\t\t\t\t\tsortedEd[0].diapotik -= 1\n\t\t\t\t\t\t\tkey = findStock.nama +';'+ sortedEd[0].nobatch\n\t\t\t\t\t\t\tgive[key] or= 0; give[key] += 1\n\t\t\t\t\t\tselector = _id: findStock._id\n\t\t\t\t\t\tmodifier = $set: batch: findStock.batch\n\t\t\t\t\t\tcoll.gudang.update selector, modifier\n\t\t\tgive if jenis is 'obat'\n\n\t\ttransfer: (idbarang, idbatch, amount) ->\n\t\t\tselector = idbarang: idbarang, 'batch.idbatch': idbatch\n\t\t\tmodifier = $inc: 'batch.$.digudang': -amount, 'batch.$.diapotik': amount\n\t\t\tcoll.gudang.update selector, modifier\n\n\t\trmPasien: (no_mr) ->\n\t\t\tcoll.pasien.remove no_mr: parseInt no_mr\n\n\t\trmRawat: (no_mr, idbayar) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $pull: rawat: idbayar: idbayar\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\taddRole: (id, roles, group, poli) ->\n\t\t\trole = poli or roles\n\t\t\tRoles.addUsersToRoles id, role, group\n\n\t\trmRole: (id) ->\n\t\t\tselector = _id: id\n\t\t\tmodifier = $set: roles: {}\n\t\t\tMeteor.users.update selector, modifier\n\n\t\tnewUser: (doc) ->\n\t\t\tfind = Accounts.findUserByUsername doc.username\n\t\t\tif find\n\t\t\t\tAccounts.setUsername find._id, doc.username\n\t\t\t\tAccounts.setPassword find._id, doc.password\n\t\t\telse\n\t\t\t\tAccounts.createUser doc\n\n\t\trmBarang: (idbarang) ->\n\t\t\tcoll.gudang.remove idbarang: idbarang\n\n\t\trmBatch: (idbarang, idbatch) ->\n\t\t\tfindStock = coll.gudang.findOne idbarang: idbarang\n\t\t\tterbuang = _.without findStock.batch, _.find findStock.batch, (i) ->\n\t\t\t\ti.idbatch is idbatch\n\t\t\tcoll.gudang.update {_id: findStock._id}, $set: batch: terbuang\n\n\t\tinactive: (name, id) ->\n\t\t\tsel = _id: id; mod = $set: active: false\n\t\t\tcoll[name].update sel, mod\n\n\t\tpindah: (no_mr) ->\n\t\t\tfind = coll.pasien.findOne 'no_mr': parseInt no_mr\n\t\t\t[..., last] = find.rawat\n\t\t\tif last.pindah\n\t\t\t\tselector = _id: find._id\n\t\t\t\tmodifier = $push: rawat:\n\t\t\t\t\tidbayar: randomId()\n\t\t\t\t\ttanggal: new Date()\n\t\t\t\t\tcara_bayar: last.cara_bayar\n\t\t\t\t\tklinik: last.pindah\n\t\t\t\t\tbillRegis: true\n\t\t\t\t\ttotal: semua: 0\n\t\t\t\tcoll.pasien.update selector, modifier\n\n\t\treport: (jenis, start, end) ->\n\t\t\tfilter = (arr) -> _.filter arr, (i) ->\n\t\t\t\tnew Date(start) < new Date(i.tanggal) < new Date(end)\n\t\t\tdocs = _.flatMap coll.pasien.find().fetch(), (i) -> _.map filter(i.rawat), (j) ->\n\t\t\t\tobj =\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: _.startCase i.regis.nama_lengkap\n\t\t\t\t\ttanggal: j.tanggal\n\t\t\t\t\tno_bill: j.nobill\n\t\t\t\t\tcara_bayar: look('cara_bayar', j.cara_bayar).label\n\t\t\t\t\trujukan: if j.rujukan then look('rujukan', j.rujukan).label else ''\n\t\t\t\t\tklinik: look('klinik', j.klinik).label\n\t\t\t\t\tdiagnosa: j.diagnosa or '-'\n\t\t\t\t\ttindakan: _.flatMap ['tindakan', 'labor', 'radio'], (k) ->\n\t\t\t\t\t\tsaring = _.filter j[k], (l) -> l\n\t\t\t\t\t\t_.map saring, (l) -> '/' + _.startCase look2('tarif', l.nama).nama\n\t\t\t\t\tharga: 'Rp ' + j.total.semua\n\t\t\t\t\tpetugas: Meteor.users.findOne(_id: j.petugas).username\n\t\t\t\t\tkeluar: if j.keluar then look('keluar', j.keluar).label else '-'\n\t\t\t\t\tbaru_lama: if i.rawat.length > 1 then 'Lama' else 'Baru'\n\t\t\t\tif jenis is 'pendaftaran'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'diagnosa', 'baru_lama']\n\t\t\t\telse if jenis is 'pembayaran'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'diagnosa', 'tindakan', 'harga', 'petugas']\n\t\t\t\telse if jenis is 'rawat_jalan'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']\n\t\t\theaders: _.map _.keys(docs[0]), (i) -> _.startCase i\n\t\t\trows: _.map docs, (i) -> _.values i\n\t\t\tcsv: docs\n\n\t\tpatientExist: (no_mr) ->\n\t\t\ttrue if coll.pasien.findOne no_mr: parseInt no_mr\n\n\t\tnearEds: (returnable) ->\n\t\t\tsel = 'digudang': {$gt: 0}, 'diretur': {$ne: true}\n\t\t\tsource = coll.gudang.find(batch: $elemMatch: sel).fetch()\n\t\t\tassign = _.map source, (i) -> _.map i.batch, (j) -> _.assign j,\n\t\t\t\tidbarang: i.idbarang, nama: i.nama\n\t\t\tbatch = _.flatMap source, (i) -> i.batch\n\t\t\tdiffed = _.filter batch, (i) ->\n\t\t\t\ta = -> 6 > monthDiff i.kadaluarsa\n\t\t\t\tb = -> i.returnable\n\t\t\t\tif returnable then a() and b() else a()\n\n\t\treturBatch: (doc) ->\n\t\t\tfindStock = coll.gudang.findOne idbarang: doc.idbarang\n\t\t\tfor i in findStock.batch\n\t\t\t\tif i.idbatch is doc.idbatch\n\t\t\t\t\ti.diretur = true\n\t\t\tsel = _id: findStock._id; mod = batch: findStock.batch\n\t\t\tcoll.gudang.update sel, $set: mod\n\n\t\tamprah: (idbarang, idamprah, diserah) ->\n\t\t\tbarang = coll.gudang.findOne idbarang: idbarang\n\t\t\tfor i in barang.amprah\n\t\t\t\tif i.idamprah is idamprah\n\t\t\t\t\ti.penyerah = this.userId\n\t\t\t\t\ti.diserah = diserah\n\t\t\tcoll.gudang.update barang._id, barang\n","if (Meteor.isServer) {\n  Meteor.startup(function() {\n    return coll.pasien._ensureIndex({\n      'regis.nama_lengkap': 1\n    });\n  });\n  Meteor.publish('coll', function(name, selector, options) {\n    return coll[name].find(selector, options);\n  });\n  Meteor.publish('users', function(selector, options) {\n    return Meteor.users.find(selector, options);\n  });\n  Meteor.methods({\n    \"import\": function(name, selector, modifier, arrName) {\n      var find, obj, sel;\n      find = coll[name].findOne(selector);\n      if (!find) {\n        return coll[name].upsert(selector, {\n          $set: modifier\n        });\n      } else if (arrName) {\n        sel = {\n          _id: find._id\n        };\n        obj = {};\n        obj[arrName] = modifier[arrName][0];\n        return coll[name].update(sel, {\n          $push: obj\n        });\n      }\n    },\n    \"export\": function(jenis) {\n      var arr, find;\n      if (jenis === 'regis') {\n        arr = _.map(coll.pasien.find().fetch(), function(i) {\n          return {\n            no_mr: i.no_mr,\n            nama_lengkap: i.regis.nama_lengkap\n          };\n        });\n      } else if (jenis === 'jalan') {\n        find = function(type, value) {\n          var doc;\n          doc = _.find(selects[type], function(i) {\n            return i.value === value;\n          });\n          return doc.label;\n        };\n        arr = _.flatMap(coll.pasien.find().fetch(), function(i) {\n          if (i.rawat) {\n            return _.map(i.rawat, function(j) {\n              return {\n                no_mr: i.no_mr,\n                nama_lengkap: i.regis.nama_lengkap,\n                idbayar: j.idbayar,\n                cara_bayar: find('cara_bayar', j.cara_bayar),\n                klinik: find('klinik', j.klinik)\n              };\n            });\n          }\n        });\n      } else if (jenis === 'farmasi') {\n        arr = _.flatMap(coll.gudang.find().fetch(), function(i) {\n          return _.map(i.batch, function(j) {\n            var body, head;\n            head = ['jenis', 'nama'];\n            head = _.zipObject(head, _.map(head, function(k) {\n              return i[k];\n            }));\n            body = ['nobatch', 'merek', 'satuan', 'masuk', 'kadaluarsa', 'digudang', 'diapotik', 'beli', 'jual', 'suplier', 'anggaran', 'pengadaan'];\n            body = _.zipObject(body, _.map(body, function(k) {\n              return j[k];\n            }));\n            return _.assign(head, body);\n          });\n        });\n      }\n      return exportcsv.exportToCSV(arr, true, ';');\n    },\n    billCard: function(no_mr, state) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'regis.billCard': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    billRegis: function(no_mr, idbayar, state) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'rawat.$.billRegis': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    bayar: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        'rawat.$.status_bayar': true\n      };\n      return coll.pasien.update(selector, {\n        $set: modifier\n      });\n    },\n    request: function(no_mr, idbayar, jenis, idjenis, hasil) {\n      var filtered, findPasien, findStock, give, i, j, k, key, len, len1, len2, len3, m, modifier, n, o, p, q, ref, ref1, ref2, ref3, ref4, selector, sortedEd, sortedIn;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      findPasien = coll.pasien.findOne(selector);\n      ref = findPasien.rawat;\n      for (m = 0, len = ref.length; m < len; m++) {\n        i = ref[m];\n        if (i.idbayar === idbayar) {\n          if (i[jenis]) {\n            ref1 = i[jenis];\n            for (n = 0, len1 = ref1.length; n < len1; n++) {\n              j = ref1[n];\n              if (j['id' + jenis] === idjenis) {\n                j.hasil = hasil;\n              }\n            }\n          }\n        }\n      }\n      modifier = {\n        rawat: findPasien.rawat\n      };\n      coll.pasien.update(selector, {\n        $set: modifier\n      });\n      give = {};\n      if (jenis === 'obat') {\n        ref2 = findPasien.rawat;\n        for (o = 0, len2 = ref2.length; o < len2; o++) {\n          i = ref2[o];\n          if (i.idbayar === idbayar) {\n            if (i.obat) {\n              ref3 = i.obat;\n              for (p = 0, len3 = ref3.length; p < len3; p++) {\n                j = ref3[p];\n                if (j.idobat === idjenis) {\n                  findStock = coll.gudang.findOne({\n                    _id: j.nama\n                  });\n                  for (k = q = 1, ref4 = j.jumlah; 1 <= ref4 ? q <= ref4 : q >= ref4; k = 1 <= ref4 ? ++q : --q) {\n                    filtered = _.filter(findStock.batch, function(l) {\n                      return l.diapotik > 0;\n                    });\n                    sortedIn = _.sortBy(filtered, function(l) {\n                      return new Date(l.masuk).getTime();\n                    });\n                    sortedEd = _.sortBy(sortedIn, function(l) {\n                      return new Date(l.kadaluarsa).getTime();\n                    });\n                    sortedEd[0].diapotik -= 1;\n                    key = findStock.nama(+';' + sortedEd[0].nobatch);\n                    give[key] || (give[key] = 0);\n                    give[key] += 1;\n                  }\n                  selector = {\n                    _id: findStock._id\n                  };\n                  modifier = {\n                    $set: {\n                      batch: findStock.batch\n                    }\n                  };\n                  coll.gudang.update(selector, modifier);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (jenis === 'obat') {\n        return give;\n      }\n    },\n    transfer: function(idbarang, idbatch, amount) {\n      var modifier, selector;\n      selector = {\n        idbarang: idbarang,\n        'batch.idbatch': idbatch\n      };\n      modifier = {\n        $inc: {\n          'batch.$.digudang': -amount,\n          'batch.$.diapotik': amount\n        }\n      };\n      return coll.gudang.update(selector, modifier);\n    },\n    rmPasien: function(no_mr) {\n      return coll.pasien.remove({\n        no_mr: parseInt(no_mr)\n      });\n    },\n    rmRawat: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $pull: {\n          rawat: {\n            idbayar: idbayar\n          }\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    addRole: function(id, roles, group, poli) {\n      var role;\n      role = poli || roles;\n      return Roles.addUsersToRoles(id, role, group);\n    },\n    rmRole: function(id) {\n      var modifier, selector;\n      selector = {\n        _id: id\n      };\n      modifier = {\n        $set: {\n          roles: {}\n        }\n      };\n      return Meteor.users.update(selector, modifier);\n    },\n    newUser: function(doc) {\n      var find;\n      find = Accounts.findUserByUsername(doc.username);\n      if (find) {\n        Accounts.setUsername(find._id, doc.username);\n        return Accounts.setPassword(find._id, doc.password);\n      } else {\n        return Accounts.createUser(doc);\n      }\n    },\n    rmBarang: function(idbarang) {\n      return coll.gudang.remove({\n        idbarang: idbarang\n      });\n    },\n    rmBatch: function(idbarang, idbatch) {\n      var findStock, terbuang;\n      findStock = coll.gudang.findOne({\n        idbarang: idbarang\n      });\n      terbuang = _.without(findStock.batch, _.find(findStock.batch, function(i) {\n        return i.idbatch === idbatch;\n      }));\n      return coll.gudang.update({\n        _id: findStock._id\n      }, {\n        $set: {\n          batch: terbuang\n        }\n      });\n    },\n    inactive: function(name, id) {\n      var mod, sel;\n      sel = {\n        _id: id\n      };\n      mod = {\n        $set: {\n          active: false\n        }\n      };\n      return coll[name].update(sel, mod);\n    },\n    pindah: function(no_mr) {\n      var find, last, modifier, ref, selector;\n      find = coll.pasien.findOne({\n        'no_mr': parseInt(no_mr)\n      });\n      ref = find.rawat, last = ref[ref.length - 1];\n      if (last.pindah) {\n        selector = {\n          _id: find._id\n        };\n        modifier = {\n          $push: {\n            rawat: {\n              idbayar: randomId(),\n              tanggal: new Date(),\n              cara_bayar: last.cara_bayar,\n              klinik: last.pindah,\n              billRegis: true,\n              total: {\n                semua: 0\n              }\n            }\n          }\n        };\n        return coll.pasien.update(selector, modifier);\n      }\n    },\n    report: function(jenis, start, end) {\n      var docs, filter;\n      filter = function(arr) {\n        return _.filter(arr, function(i) {\n          var ref;\n          return (new Date(start) < (ref = new Date(i.tanggal)) && ref < new Date(end));\n        });\n      };\n      docs = _.flatMap(coll.pasien.find().fetch(), function(i) {\n        return _.map(filter(i.rawat), function(j) {\n          var obj;\n          obj = {\n            no_mr: i.no_mr,\n            nama_lengkap: _.startCase(i.regis.nama_lengkap),\n            tanggal: j.tanggal,\n            no_bill: j.nobill,\n            cara_bayar: look('cara_bayar', j.cara_bayar).label,\n            rujukan: j.rujukan ? look('rujukan', j.rujukan).label : '',\n            klinik: look('klinik', j.klinik).label,\n            diagnosa: j.diagnosa || '-',\n            tindakan: _.flatMap(['tindakan', 'labor', 'radio'], function(k) {\n              var saring;\n              saring = _.filter(j[k], function(l) {\n                return l;\n              });\n              return _.map(saring, function(l) {\n                return '/' + _.startCase(look2('tarif', l.nama).nama);\n              });\n            }),\n            harga: 'Rp ' + j.total.semua,\n            petugas: Meteor.users.findOne({\n              _id: j.petugas\n            }).username,\n            keluar: j.keluar ? look('keluar', j.keluar).label : '-',\n            baru_lama: i.rawat.length > 1 ? 'Lama' : 'Baru'\n          };\n          if (jenis === 'pendaftaran') {\n            return _.pick(obj, ['tanggal', 'no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'diagnosa', 'baru_lama']);\n          } else if (jenis === 'pembayaran') {\n            return _.pick(obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'diagnosa', 'tindakan', 'harga', 'petugas']);\n          } else if (jenis === 'rawat_jalan') {\n            return _.pick(obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']);\n          }\n        });\n      });\n      return {\n        headers: _.map(_.keys(docs[0]), function(i) {\n          return _.startCase(i);\n        }),\n        rows: _.map(docs, function(i) {\n          return _.values(i);\n        }),\n        csv: docs\n      };\n    },\n    patientExist: function(no_mr) {\n      if (coll.pasien.findOne({\n        no_mr: parseInt(no_mr)\n      })) {\n        return true;\n      }\n    },\n    nearEds: function(returnable) {\n      var assign, batch, diffed, sel, source;\n      sel = {\n        'digudang': {\n          $gt: 0\n        },\n        'diretur': {\n          $ne: true\n        }\n      };\n      source = coll.gudang.find({\n        batch: {\n          $elemMatch: sel\n        }\n      }).fetch();\n      assign = _.map(source, function(i) {\n        return _.map(i.batch, function(j) {\n          return _.assign(j, {\n            idbarang: i.idbarang,\n            nama: i.nama\n          });\n        });\n      });\n      batch = _.flatMap(source, function(i) {\n        return i.batch;\n      });\n      return diffed = _.filter(batch, function(i) {\n        var a, b;\n        a = function() {\n          return 6 > monthDiff(i.kadaluarsa);\n        };\n        b = function() {\n          return i.returnable;\n        };\n        if (returnable) {\n          return a() && b();\n        } else {\n          return a();\n        }\n      });\n    },\n    returBatch: function(doc) {\n      var findStock, i, len, m, mod, ref, sel;\n      findStock = coll.gudang.findOne({\n        idbarang: doc.idbarang\n      });\n      ref = findStock.batch;\n      for (m = 0, len = ref.length; m < len; m++) {\n        i = ref[m];\n        if (i.idbatch === doc.idbatch) {\n          i.diretur = true;\n        }\n      }\n      sel = {\n        _id: findStock._id\n      };\n      mod = {\n        batch: findStock.batch\n      };\n      return coll.gudang.update(sel, {\n        $set: mod\n      });\n    },\n    amprah: function(idbarang, idamprah, diserah) {\n      var barang, i, len, m, ref;\n      barang = coll.gudang.findOne({\n        idbarang: idbarang\n      });\n      ref = barang.amprah;\n      for (m = 0, len = ref.length; m < len; m++) {\n        i = ref[m];\n        if (i.idamprah === idamprah) {\n          i.penyerah = this.userId;\n          i.diserah = diserah;\n        }\n      }\n      return coll.gudang.update(barang._id, barang);\n    }\n  });\n}\n"]}
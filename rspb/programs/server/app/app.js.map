{"version":3,"sources":["meteor://ðŸ’»app/folder/hooks.coffee","meteor://ðŸ’»app/folder/hooks.coffee.js","meteor://ðŸ’»app/folder/menus.coffee","meteor://ðŸ’»app/folder/menus.coffee.js","meteor://ðŸ’»app/folder/modules.coffee","meteor://ðŸ’»app/folder/pdf.coffee","meteor://ðŸ’»app/folder/pdf.coffee.js","meteor://ðŸ’»app/folder/selects.coffee","meteor://ðŸ’»app/folder/selects.coffee.js","meteor://ðŸ’»app/both.coffee","meteor://ðŸ’»app/both.coffee.js","meteor://ðŸ’»app/client.coffee","meteor://ðŸ’»app/client.coffee.js","meteor://ðŸ’»app/server.coffee","meteor://ðŸ’»app/server.coffee.js"],"names":["closeForm","currentPar","currentRoute","Meteor","isClient","Router","current","route","getName","param","params","randomId","Math","random","toString","slice","modForm","doc","idbayar","begin","i","l","len","ref","stop","total","tanggal","Date","jenis","tindakan","labor","radio","obat","_","map","find","j","results","length","coll","tarif","fetch","k","_id","nama","harga","push","idobat","semua","cara_bayar","billRegis","status_bayar","Session","get","moment","spm","diff","petugas","userId","nobill","parseInt","now","substr","AutoForm","addHooks","before","formDoc","call","result","after","insert","err","res","formToDoc","set","idbarang","batch","idbatch","rights","group","list","modules","name","full","icon","color","look","val","selects","value","makePdf","card","pdf","pasien","findOne","pdfMake","createPdf","content","regis","nama_lengkap","no_mr","pageSize","pageMargins","pageOrientation","download","consent","text","alignment","tmpt_lahir","tgl_lahir","format","darah","label","kelamin","agama","pendidikan","pekerjaan","ayah","ibu","pasangan","alamat","kontak","payRawat","len1","m","ref1","rows","table","startCase","widths","body","numeral","payRegCard","amount","words","italics","rekap","strings","rawat","nikah","klinik","bentuk","tipe_dokter","rujukan","keluar","barang","satuan","anggaran","keys","x","selector","sub","subscribe","user","roles","jalan","ready","dokter","snakeCase","poli","filter","arr","gudang","len2","makeGudang","makeOther","makePasien","ref2","lodash","configure","layoutTemplate","loadingTemplate","action","render","schema","type","Number","Object","String","autoform","pickadateOptions","selectYears","selectMonths","optional","options","autoValue","Boolean","idtindakan","idlabor","hasil","idradio","puyer","aturan","jumlah","subtotal","Array","SimpleSchema","assign","inap","igd","decimal","farmasi","logistik","tipe","grup","obj","active","Collection","allow","update","remove","modul","waitOn","search","indexOf","item","setDefaultTemplate","limit","page","onBeforeAction","next","onAfterAction","uniq","flatMap","go","Template","registerHelper","num","size","repeat","date","JSON","stringify","reverse","sel","sort","sortBy","getTime","a","b","option","field","end","apply","events","event","term","key","target","layout","onRendered","menu","helpers","menus","navTitle","today","logout","document","location","reload","formType","umur","showButton","showButtonText","preview","omitFields","roleFilter","userPoli","insurance","selPol","pasiens","byName","byNoMR","elem","kliniks","past","selSub","fields","$options","$regex","$or","getDate","$elemMatch","$in","$gt","c","$ne","$exists","later","$","trigger","prop","prepend","setTimeout","dialog","title","message","Confirmation","ok","nodes","attributes","nodeValue","concat","MaterializeModal","prompt","callback","submit","flat","flatten","toPairs","headers","modal","self","id","template","Papa","parse","files","header","step","data","modifier","tmpt_kelahiran","password","username","role","beli","diapotik","digudang","jual","kadaluarsa","masuk","merek","nobatch","pengadaan","suplier","schemagudang","gudangs","byBatch","manajemen","material_select","users","onUser","selRoles","schemadokter","schematarif","dokters","skip","tarifs","theRole","preventDefault","children","Materialize","toast","console","log","select","blob","Blob","saveAs","currentTarget","className","login","slider","loginWithPassword","pagination","innerText","report","datas","pickadate","onSet","start","exportcsv","exportToCSV","csv","isServer","startup","_ensureIndex","publish","methods","arrName","upsert","$set","$push","billCard","state","bayar","request","idjenis","filtered","findPasien","findStock","give","len3","n","o","p","q","ref3","ref4","sortedEd","sortedIn","transfer","$inc","rmPasien","rmRawat","$pull","addRole","Roles","addUsersToRoles","rmRole","newUser","Accounts","findUserByUsername","setUsername","setPassword","createUser","rmBarang","inactive","mod","pindah","last","docs","look2","pick","no_bill","diagnosa","saring","baru_lama","values"],"mappings":"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","file":"/app.js","sourcesContent":["if Meteor.isClient\n\n\t# SimpleSchema.debug = true\n\tcurrentRoute = -> Router.current().route.getName()\n\tcurrentPar = (param) -> Router.current().params[param]\n\t@randomId = -> Math.random().toString(36).slice(2)\n\t\n\t@modForm = (doc, idbayar) -> if currentRoute() is 'jalan'\n\t\tdoc.tanggal = new Date()\n\t\tdoc.idbayar = if idbayar then idbayar else randomId()\n\t\tdoc.jenis = currentRoute()\n\t\ttotal = tindakan: 0, labor: 0, radio: 0, obat: 0\n\t\t_.map ['tindakan', 'labor', 'radio'], (i) ->\n\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\tj['id'+i] = randomId()\n\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\tj.harga = find.harga\n\t\t\t\ttotal[i] += j.harga\n\t\ti.idobat = randomId() for i in doc.obat if doc.obat\n\t\tdoc.total =\n\t\t\ttindakan: total.tindakan\n\t\t\tlabor: total.labor\n\t\t\tradio: total.radio\n\t\tdoc.total.semua = doc.total.tindakan + doc.total.labor + doc.total.radio\n\t\tdoc.billRegis = true if doc.total.semua > 0 or doc.cara_bayar isnt 1\n\t\tdoc.status_bayar = true if doc.total.semua > 0 and doc.cara_bayar isnt 1\n\t\tif doc.obat and 0 is doc.total.semua\n\t\t\tdoc.billRegis = true\n\t\t\tdoc.status_bayar = true\n\t\tbegin = Session.get 'begin'; stop = moment()\n\t\tdoc.spm = stop.diff begin, 'minutes'\n\t\tdoc.petugas = Meteor.userId()\n\t\tdoc.nobill = parseInt _.toString(Date.now()).substr 7, 13\n\t\tdoc\n\n\tcloseForm = ->\n\t\t_.map ['showForm', 'formDoc'], (i) ->\n\t\t\tSession.get i, null\n\n\tAutoForm.addHooks 'formPasien',\n\t\tbefore:\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tformDoc = Session.get 'formDoc'\n\t\t\t\tif formDoc then Meteor.call 'rmRawat', currentPar('no_mr'), formDoc.idbayar\n\t\t\t\tthis.result modForm doc\n\t\tafter:\n\t\t\tinsert: -> closeForm()\n\t\t\t'update-pushArray': (err, res) ->\n\t\t\t\tcloseForm()\n\t\t\t\tif res then Meteor.call 'pindah', currentPar 'no_mr'\n\t\tformToDoc: (doc) ->\n\t\t\tSession.set 'preview', modForm doc\n\t\t\tdoc\n\n\tAutoForm.addHooks 'formGudang',\n\t\tbefore:\n\t\t\tinsert: (doc) ->\n\t\t\t\tdoc.idbarang = randomId()\n\t\t\t\tdoc.batch[0].idbatch = randomId()\n\t\t\t\tthis.result doc\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tdoc.idbatch = randomId()\n\t\t\t\tthis.result doc\n","var closeForm, currentPar, currentRoute;\n\nif (Meteor.isClient) {\n  currentRoute = function() {\n    return Router.current().route.getName();\n  };\n  currentPar = function(param) {\n    return Router.current().params[param];\n  };\n  this.randomId = function() {\n    return Math.random().toString(36).slice(2);\n  };\n  this.modForm = function(doc, idbayar) {\n    var begin, i, l, len, ref, stop, total;\n    if (currentRoute() === 'jalan') {\n      doc.tanggal = new Date();\n      doc.idbayar = idbayar ? idbayar : randomId();\n      doc.jenis = currentRoute();\n      total = {\n        tindakan: 0,\n        labor: 0,\n        radio: 0,\n        obat: 0\n      };\n      _.map(['tindakan', 'labor', 'radio'], function(i) {\n        var find, j, l, len, ref, results;\n        if (doc[i]) {\n          ref = doc[i];\n          results = [];\n          for (l = 0, len = ref.length; l < len; l++) {\n            j = ref[l];\n            j['id' + i] = randomId();\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            j.harga = find.harga;\n            results.push(total[i] += j.harga);\n          }\n          return results;\n        }\n      });\n      if (doc.obat) {\n        ref = doc.obat;\n        for (l = 0, len = ref.length; l < len; l++) {\n          i = ref[l];\n          i.idobat = randomId();\n        }\n      }\n      doc.total = {\n        tindakan: total.tindakan,\n        labor: total.labor,\n        radio: total.radio\n      };\n      doc.total.semua = doc.total.tindakan + doc.total.labor + doc.total.radio;\n      if (doc.total.semua > 0 || doc.cara_bayar !== 1) {\n        doc.billRegis = true;\n      }\n      if (doc.total.semua > 0 && doc.cara_bayar !== 1) {\n        doc.status_bayar = true;\n      }\n      if (doc.obat && 0 === doc.total.semua) {\n        doc.billRegis = true;\n        doc.status_bayar = true;\n      }\n      begin = Session.get('begin');\n      stop = moment();\n      doc.spm = stop.diff(begin, 'minutes');\n      doc.petugas = Meteor.userId();\n      doc.nobill = parseInt(_.toString(Date.now()).substr(7, 13));\n      return doc;\n    }\n  };\n  closeForm = function() {\n    return _.map(['showForm', 'formDoc'], function(i) {\n      return Session.get(i, null);\n    });\n  };\n  AutoForm.addHooks('formPasien', {\n    before: {\n      'update-pushArray': function(doc) {\n        var formDoc;\n        formDoc = Session.get('formDoc');\n        if (formDoc) {\n          Meteor.call('rmRawat', currentPar('no_mr'), formDoc.idbayar);\n        }\n        return this.result(modForm(doc));\n      }\n    },\n    after: {\n      insert: function() {\n        return closeForm();\n      },\n      'update-pushArray': function(err, res) {\n        closeForm();\n        if (res) {\n          return Meteor.call('pindah', currentPar('no_mr'));\n        }\n      }\n    },\n    formToDoc: function(doc) {\n      Session.set('preview', modForm(doc));\n      return doc;\n    }\n  });\n  AutoForm.addHooks('formGudang', {\n    before: {\n      insert: function(doc) {\n        doc.idbarang = randomId();\n        doc.batch[0].idbatch = randomId();\n        return this.result(doc);\n      },\n      'update-pushArray': function(doc) {\n        doc.idbatch = randomId();\n        return this.result(doc);\n      }\n    }\n  });\n}\n","if Meteor.isClient\n\n\t@rights = [\n\t\tgroup: 'regis'\n\t\tlist: ['regis', 'jalan']\n\t,\n\t\tgroup: 'bayar'\n\t\tlist: ['bayar']\n\t,\n\t\tgroup: 'jalan'\n\t\tlist: ['jalan', 'farmasi']\n\t,\n\t\tgroup: 'inap'\n\t\tlist: ['inap', 'farmasi']\n\t,\n\t\tgroup: 'labor'\n\t\tlist: ['labor']\n\t,\n\t\tgroup: 'radio'\n\t\tlist: ['radio']\n\t,\n\t\tgroup: 'obat'\n\t\tlist: ['obat', 'farmasi']\n\t,\n\t\tgroup: 'rekam'\n\t\tlist: ['rekam', 'regis']\n\t,\n\t\tgroup: 'admisi'\n\t\tlist: ['admisi']\n\t,\n\t\tgroup: 'manajemen'\n\t\tlist: ['manajemen']\n\t,\n\t\tgroup: 'farmasi'\n\t\tlist: ['farmasi']\n\t]\n","if (Meteor.isClient) {\n  this.rights = [\n    {\n      group: 'regis',\n      list: ['regis', 'jalan']\n    }, {\n      group: 'bayar',\n      list: ['bayar']\n    }, {\n      group: 'jalan',\n      list: ['jalan', 'farmasi']\n    }, {\n      group: 'inap',\n      list: ['inap', 'farmasi']\n    }, {\n      group: 'labor',\n      list: ['labor']\n    }, {\n      group: 'radio',\n      list: ['radio']\n    }, {\n      group: 'obat',\n      list: ['obat', 'farmasi']\n    }, {\n      group: 'rekam',\n      list: ['rekam', 'regis']\n    }, {\n      group: 'admisi',\n      list: ['admisi']\n    }, {\n      group: 'manajemen',\n      list: ['manajemen']\n    }, {\n      group: 'farmasi',\n      list: ['farmasi']\n    }\n  ];\n}\n","@modules = [\n\tname: 'regis'\n\tfull: 'Pendaftaran'\n\ticon: 'people'\n\tcolor: 'orange'\n,\n\tname: 'bayar'\n\tfull: 'Pembayaran'\n\ticon: 'monetization_on'\n\tcolor: 'green'\n,\n\tname: 'jalan'\n\tfull: 'Rawat Jalan'\n\ticon: 'directions'\n\tcolor: 'blue'\n,\n\tname: 'igd'\n\tfull: 'IGD'\n\ticon: 'airport_shuttle'\n\tcolor: 'red'\n,\n\tname: 'inap'\n\tfull: 'Rawat Inap'\n\ticon: 'hotel'\n\tcolor: 'cyan'\n,\n\tname: 'labor'\n\tfull: 'Laboratorium'\n\ticon: 'wb_incandescent'\n\tcolor: 'amber'\n,\n\tname: 'radio'\n\tfull: 'Radiologi'\n\ticon: 'airline_seat_flat'\n\tcolor: 'indigo'\n,\n\tname: 'obat'\n\tfull: 'Apotek'\n\ticon: 'enhanced_encryption'\n\tcolor: 'light-green'\n,\n\tname: 'admisi'\n\tfull: 'Admisi'\n\ticon: 'assignment'\n\tcolor: 'purple'\n,\n\tname: 'rekam'\n\tfull: 'Rekam Medik'\n\ticon: 'content_copy'\n\tcolor: 'brown'\n,\n\tname: 'farmasi'\n\tfull: 'Gudang Farmasi'\n\ticon: 'local_pharmacy'\n\tcolor: 'orange'\n,\n\tname: 'logistik'\n\tfull: 'Gudang Logistik'\n\ticon: 'rv_hookup'\n\tcolor: 'blue-grey'\n,\n\tname: 'manajemen'\n\tfull: 'Manajemen'\n\ticon: 'people'\n\tcolor: 'orange'\n]\n","if Meteor.isClient\n\n\tlook = (list, val) -> _.find selects[list], (i) -> i.value is val\n\t@makePdf =\n\t\tcard: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t'Nama: ' + doc.regis.nama_lengkap\n\t\t\t\t\t'No. MR: ' + doc.no_mr\n\t\t\t\t]\n\t\t\t\tpageSize: 'B8'\n\t\t\t\tpageMargins: [110, 50, 0, 0]\n\t\t\t\tpageOrientation: 'landscape'\n\t\t\tpdf.download doc.no_mr + '_card.pdf'\n\t\tconsent: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024', alignment: 'center'}\n\t\t\t\t\t'\\nDATA UMUM PASIEN'\n\t\t\t\t\t'\\nNAMA LENGKAP : ' + doc.regis.nama_lengkap\n\t\t\t\t\t'TEMPAT & TANGGAL LAHIR : ' + doc.regis.tmpt_lahir + ', tanggal ' + moment(doc.regis.tgl_lahir).format('D/MMMM/YYYY')\n\t\t\t\t\t'GOLONGAN DARAH : ' + look('darah', doc.regis.darah).label\n\t\t\t\t\t'JENIS KELAMIN : ' + look('kelamin', doc.regis.kelamin).label\n\t\t\t\t\t'AGAMA : ' + look('agama', doc.regis.agama).label\n\t\t\t\t\t'PENDIDIKAN : ' + look('pendidikan', doc.regis.pendidikan).label\n\t\t\t\t\t'PEKERJAAN : ' + look('pekerjaan', doc.regis.pekerjaan).label\n\t\t\t\t\t'NAMA AYAH : ' + doc.regis.ayah\n\t\t\t\t\t'NAMA IBU : ' + doc.regis.ibu\n\t\t\t\t\t'NAMA SUAMI/ISTRI : ' + doc.regis.pasangan\n\t\t\t\t\t'ALAMAT : ' + doc.regis.alamat\n\t\t\t\t\t'NO. TELP / HP : ' + doc.regis.kontak\n\t\t\t\t\t'\\nPERSETUJUAN UMUM (GENERAL CONSENT)'\n\t\t\t\t\t'\\nSaya akan mentaati peraturan yang berlaku di RSUD Petala Bumi'\n\t\t\t\t\t'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas'\n\t\t\t\t\t'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.'\n\t\t\t\t\t'Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat'\n\t\t\t\t\t'Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan'\n\t\t\t\t\t'\\nPetunjuk :'\n\t\t\t\t\t'S: Setuju'\n\t\t\t\t\t'TS: Tidak Setuju'\n\t\t\t\t\t{text: 'Pekanbaru,                        .\\n\\n\\n__________________', alignment: 'right'}\n\t\t\t\t]\n\t\t\tpdf.download doc.no_mr + '_consent.pdf'\n\t\tpayRawat: (doc) ->\n\t\t\tpasien = coll.pasien.findOne()\n\t\t\trows = [['Uraian', 'Harga']]\n\t\t\tfor i in ['tindakan', 'labor', 'radio']\n\t\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\t\trows.push [_.startCase(find.nama), _.toString(j.harga)]\n\t\t\ttable = table: widths: [400, 100], body: rows\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t'\\nRINCIAN BIAYA RAWAT JALAN'\n\t\t\t\t\t'IDENTITAS PASIEN'\n\t\t\t\t\t'NO. MR' + pasien.no_mr\n\t\t\t\t\t'NAMA PASIEN' + pasien.regis.nama_lengkap\n\t\t\t\t\t'JENIS KELAMIN' + look('kelamin', pasien.regis.kelamin).label\n\t\t\t\t\t'TANGGAL LAHIR' + moment(pasien.regis.tgl_lahir).format('D MM YYYY')\n\t\t\t\t\t'UMUR' + _.toString moment().diff(pasien.regis.tgl_lahir, 'years')\n\t\t\t\t\t'KLINIK'\n\t\t\t\t\t'\\n\\nRINCIAN PEMBAYARAN'\n\t\t\t\t\ttable\n\t\t\t\t\t'TOTAL BIAYA' + 'Rp ' + _.toString numeral(doc.total.semua).format('0,0')\n\t\t\t\t\t'\\nPEKANBARU, ' + moment().format('DD MM YYYY')\n\t\t\t\t\t'PETUGAS'\n\t\t\t\t]\n\t\t\tpdf.download pasien.no_mr + '_payRawat.pdf'\n\t\tpayRegCard: (amount, words) ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\ttext: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'\n\t\t\t\t,\n\t\t\t\t\t'\\nKARCIS'\n\t\t\t\t\t'TANGGAL : ' + moment().format('DD MM YYYY')\n\t\t\t\t\t'NO. MR : ' + _.toString doc.no_mr\n\t\t\t\t\t'NAMA PASIEN : ' + doc.regis.nama_lengkap\n\t\t\t\t\t'\\nTARIF : Rp ' + _.toString amount\n\t\t\t\t,\n\t\t\t\t\ttext: '(' + words + ')', italics: true\n\t\t\t\t]\n\t\t\tpdf.download doc.no_mr + '_payRegCard.pdf'\n\t\trekap: (rows) ->\n\t\t\tstrings = _.map rows, (i) -> _.map i, (j) -> _.toString j\n\t\t\tpdf = pdfMake.createPdf content: [table: body: strings]\n\t\t\tpdf.download 'rekap.pdf'\n\t\t\t\n","var look;\n\nif (Meteor.isClient) {\n  look = function(list, val) {\n    return _.find(selects[list], function(i) {\n      return i.value === val;\n    });\n  };\n  this.makePdf = {\n    card: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: ['Nama: ' + doc.regis.nama_lengkap, 'No. MR: ' + doc.no_mr],\n        pageSize: 'B8',\n        pageMargins: [110, 50, 0, 0],\n        pageOrientation: 'landscape'\n      });\n      return pdf.download(doc.no_mr + '_card.pdf');\n    },\n    consent: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024',\n            alignment: 'center'\n          }, '\\nDATA UMUM PASIEN', '\\nNAMA LENGKAP : ' + doc.regis.nama_lengkap, 'TEMPAT & TANGGAL LAHIR : ' + doc.regis.tmpt_lahir + ', tanggal ' + moment(doc.regis.tgl_lahir).format('D/MMMM/YYYY'), 'GOLONGAN DARAH : ' + look('darah', doc.regis.darah).label, 'JENIS KELAMIN : ' + look('kelamin', doc.regis.kelamin).label, 'AGAMA : ' + look('agama', doc.regis.agama).label, 'PENDIDIKAN : ' + look('pendidikan', doc.regis.pendidikan).label, 'PEKERJAAN : ' + look('pekerjaan', doc.regis.pekerjaan).label, 'NAMA AYAH : ' + doc.regis.ayah, 'NAMA IBU : ' + doc.regis.ibu, 'NAMA SUAMI/ISTRI : ' + doc.regis.pasangan, 'ALAMAT : ' + doc.regis.alamat, 'NO. TELP / HP : ' + doc.regis.kontak, '\\nPERSETUJUAN UMUM (GENERAL CONSENT)', '\\nSaya akan mentaati peraturan yang berlaku di RSUD Petala Bumi', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.', 'Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat', 'Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan', '\\nPetunjuk :', 'S: Setuju', 'TS: Tidak Setuju', {\n            text: 'Pekanbaru,                        .\\n\\n\\n__________________',\n            alignment: 'right'\n          }\n        ]\n      });\n      return pdf.download(doc.no_mr + '_consent.pdf');\n    },\n    payRawat: function(doc) {\n      var find, i, j, l, len, len1, m, pasien, pdf, ref, ref1, rows, table;\n      pasien = coll.pasien.findOne();\n      rows = [['Uraian', 'Harga']];\n      ref = ['tindakan', 'labor', 'radio'];\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        if (doc[i]) {\n          ref1 = doc[i];\n          for (m = 0, len1 = ref1.length; m < len1; m++) {\n            j = ref1[m];\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            rows.push([_.startCase(find.nama), _.toString(j.harga)]);\n          }\n        }\n      }\n      table = {\n        table: {\n          widths: [400, 100],\n          body: rows\n        }\n      };\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, '\\nRINCIAN BIAYA RAWAT JALAN', 'IDENTITAS PASIEN', 'NO. MR' + pasien.no_mr, 'NAMA PASIEN' + pasien.regis.nama_lengkap, 'JENIS KELAMIN' + look('kelamin', pasien.regis.kelamin).label, 'TANGGAL LAHIR' + moment(pasien.regis.tgl_lahir).format('D MM YYYY'), 'UMUR' + _.toString(moment().diff(pasien.regis.tgl_lahir, 'years')), 'KLINIK', '\\n\\nRINCIAN PEMBAYARAN', table, 'TOTAL BIAYA' + 'Rp ' + _.toString(numeral(doc.total.semua).format('0,0')), '\\nPEKANBARU, ' + moment().format('DD MM YYYY'), 'PETUGAS'\n        ]\n      });\n      return pdf.download(pasien.no_mr + '_payRawat.pdf');\n    },\n    payRegCard: function(amount, words) {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, '\\nKARCIS', 'TANGGAL : ' + moment().format('DD MM YYYY'), 'NO. MR : ' + _.toString(doc.no_mr), 'NAMA PASIEN : ' + doc.regis.nama_lengkap, '\\nTARIF : Rp ' + _.toString(amount), {\n            text: '(' + words + ')',\n            italics: true\n          }\n        ]\n      });\n      return pdf.download(doc.no_mr + '_payRegCard.pdf');\n    },\n    rekap: function(rows) {\n      var pdf, strings;\n      strings = _.map(rows, function(i) {\n        return _.map(i, function(j) {\n          return _.toString(j);\n        });\n      });\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            table: {\n              body: strings\n            }\n          }\n        ]\n      });\n      return pdf.download('rekap.pdf');\n    }\n  };\n}\n","@selects =\n\trawat: ['Rawat Jalan', 'Rawat Inap', 'IGD']\n\tpekerjaan: ['Pegawa Negeri', 'Karyawan Swasta', 'Wirausaha', 'Petani', 'Tidak Bekerja']\n\tkelamin: ['Laki-laki', 'Perempuan']\n\tagama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu']\n\tpendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah']\n\tdarah: ['A', 'B', 'C', 'AB', 'O']\n\tcara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free']\n\tnikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda']\n\tklinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio']\n\tbentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh']\n\ttipe_dokter: ['Umum', 'Spesialis']\n\trujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya']\n\tkeluar: ['Pulang', 'Rujuk']\n\tbarang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP']\n\tsatuan: ['Botol', 'Vial', 'Ampul', 'Pcs']\n\tanggaran: ['BLUD']\n\n_.map (_.keys selects), (i) -> selects[i] = _.map selects[i], (j, x) -> label: j, value: x+1\n\nselects.tindakan = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\tselector = jenis: Meteor.user().roles.jalan[0]\n\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: _.startCase i.nama\n\nselects.dokter = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'dokter', {}, {}\n\tfind = _.find selects.klinik, (i) ->\n\t\tMeteor.user().roles.jalan[0] is _.snakeCase i.label\n\tselector = poli: find.value\n\tif sub.ready() then _.map coll.dokter.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: i.nama\n\nselects.obat = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\tfilter = (arr) -> _.filter arr, (i) -> i.jenis is 1\n\tif sub.ready() then _.map filter(coll.gudang.find().fetch()), (i) ->\n\t\tvalue: i._id, label: i.nama\n\n_.map ['labor', 'radio'], (i) ->\n\tselects[i] = -> if Meteor.isClient\n\t\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\t\tselector = jenis: i\n\t\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (j) ->\n\t\t\tvalue: j._id, label: _.startCase j.nama\n","this.selects = {\n  rawat: ['Rawat Jalan', 'Rawat Inap', 'IGD'],\n  pekerjaan: ['Pegawa Negeri', 'Karyawan Swasta', 'Wirausaha', 'Petani', 'Tidak Bekerja'],\n  kelamin: ['Laki-laki', 'Perempuan'],\n  agama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu'],\n  pendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah'],\n  darah: ['A', 'B', 'C', 'AB', 'O'],\n  cara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free'],\n  nikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda'],\n  klinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio'],\n  bentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh'],\n  tipe_dokter: ['Umum', 'Spesialis'],\n  rujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya'],\n  keluar: ['Pulang', 'Rujuk'],\n  barang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP'],\n  satuan: ['Botol', 'Vial', 'Ampul', 'Pcs'],\n  anggaran: ['BLUD']\n};\n\n_.map(_.keys(selects), function(i) {\n  return selects[i] = _.map(selects[i], function(j, x) {\n    return {\n      label: j,\n      value: x + 1\n    };\n  });\n});\n\nselects.tindakan = function() {\n  var selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'tarif', {}, {});\n    selector = {\n      jenis: Meteor.user().roles.jalan[0]\n    };\n    if (sub.ready()) {\n      return _.map(coll.tarif.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: _.startCase(i.nama)\n        };\n      });\n    }\n  }\n};\n\nselects.dokter = function() {\n  var find, selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'dokter', {}, {});\n    find = _.find(selects.klinik, function(i) {\n      return Meteor.user().roles.jalan[0] === _.snakeCase(i.label);\n    });\n    selector = {\n      poli: find.value\n    };\n    if (sub.ready()) {\n      return _.map(coll.dokter.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\nselects.obat = function() {\n  var filter, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'gudang', {}, {});\n    filter = function(arr) {\n      return _.filter(arr, function(i) {\n        return i.jenis === 1;\n      });\n    };\n    if (sub.ready()) {\n      return _.map(filter(coll.gudang.find().fetch()), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\n_.map(['labor', 'radio'], function(i) {\n  return selects[i] = function() {\n    var selector, sub;\n    if (Meteor.isClient) {\n      sub = Meteor.subscribe('coll', 'tarif', {}, {});\n      selector = {\n        jenis: i\n      };\n      if (sub.ready()) {\n        return _.map(coll.tarif.find(selector).fetch(), function(j) {\n          return {\n            value: j._id,\n            label: _.startCase(j.nama)\n          };\n        });\n      }\n    }\n  };\n});\n","@_ = lodash\n\nRouter.configure\n\tlayoutTemplate: 'layout'\n\tloadingTemplate: 'loading'\n\nRouter.route '/',\n\taction: -> this.render 'home'\n\n@coll = {}\n@schema = {}\n\nrandomId = -> Math.random().toString(36).slice(2)\n\nschema.regis =\n\tno_mr: type: Number\n\tregis: type: Object\n\t'regis.nama_lengkap': type: String\n\t'regis.tgl_lahir': type: Date, autoform: type: 'pickadate', pickadateOptions: selectYears: 150, selectMonths: true\n\t'regis.tmpt_lahir': type: String, optional: true\n\t'regis.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'regis.kelamin': type: Number, autoform: options: selects.kelamin, type: 'select-radio-inline'\n\t'regis.agama': type: Number, autoform: options: selects.agama, type: 'select-radio-inline'\n\t'regis.nikah': type: Number, autoform: options: selects.nikah, type: 'select-radio-inline'\n\t'regis.pendidikan': type: Number, optional: true, autoform: options: selects.pendidikan, type: 'select-radio-inline'\n\t'regis.darah': type: Number, optional: true, autoform: options: selects.darah, type: 'select-radio-inline'\n\t'regis.pekerjaan': type: Number, optional: true, autoform: options: selects.pekerjaan, type: 'select-radio-inline'\n\t'regis.kabupaten': type: String, optional: true\n\t'regis.kecamatan': type: String, optional: true\n\t'regis.kelurahan': type: String, optional: true\n\t'regis.alamat': type: String\n\t'regis.kontak': type: String, optional: true\n\t'regis.ayah': type: String, optional: true\n\t'regis.ibu': type: String, optional: true\n\t'regis.pasangan': type: String, optional: true\n\t'regis.petugas':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> if Meteor.isClient then Meteor.userId()\n\t'regis.date':\n\t\ttype: Date\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> new Date\n\t'regis.billCard': type: Boolean, optional: true, autoform: type: 'hidden'\n\nschema.tindakan =\n\tidtindakan: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.tindakan\n\tdokter: type: String, autoform: options: selects.dokter\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\nschema.labor =\n\tidlabor: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.labor\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.radio =\n\tidradio: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.radio\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.obat =\n\tidobat: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.obat\n\tpuyer: type: String, optional: true\n\taturan: type: Object\n\t'aturan.kali': type: Number\n\t'aturan.dosis': type: Number\n\t'aturan.bentuk': type: Number, autoform: options: selects.bentuk\n\tjumlah: type: Number\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\tsubtotal: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.rawat =\n\tno_mr: type: Number\n\trawat: type: Array\n\t'rawat.$': type: Object\n\t'rawat.$.tanggal': type: Date, autoform: type: 'hidden'\n\t'rawat.$.idbayar': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.jenis': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'rawat.$.klinik': type: Number, autoform: options: selects.klinik, type: 'select-radio-inline'\n\t'rawat.$.billRegis': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.nobill': type: Number, autoform: type: 'hidden'\n\t'rawat.$.status_bayar': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.rujukan': type: Number, optional: true, autoform: options: selects.rujukan, type: 'select-radio-inline'\n\t'rawat.$.anamesa': type: String, optional: true\n\t'rawat.$.diagnosa': type: String, optional: true\n\t'rawat.$.tindakan': type: [new SimpleSchema schema.tindakan], optional: true\n\t'rawat.$.labor': type: [new SimpleSchema schema.labor], optional: true\n\t'rawat.$.radio': type: [new SimpleSchema schema.radio], optional: true\n\t'rawat.$.obat': type: [new SimpleSchema schema.obat], optional: true\n\t'rawat.$.total': type: Object, optional: true, autoform: type: 'hidden'\n\t'rawat.$.total.tindakan': type: Number, optional: true\n\t'rawat.$.total.labor': type: Number, optional: true\n\t'rawat.$.total.radio': type: Number, optional: true\n\t'rawat.$.total.obat': type: Number, optional: true\n\t'rawat.$.total.semua': type: Number, optional: true\n\t'rawat.$.spm': type: Number, optional: true, autoform: type: 'hidden'\n\t'rawat.$.pindah': type: Number, optional: true, autoform: options: selects.klinik\n\t'rawat.$.keluar': type: Number, optional: true, autoform: options: selects.keluar\n\t'rawat.$.petugas': type: String, autoform: type: 'hidden'\n\nschema.jalan = _.assign schema.rawat, {}\nschema.inap = _.assign schema.rawat, {}\nschema.igd = _.assign schema.rawat, {}\n\nschema.gudang =\n\tidbarang:\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\tjenis: type: Number, autoform: options: selects.barang\n\tnama: type: String\n\tbatch: type: Array\n\t'batch.$': type: Object\n\t'batch.$.idbatch':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\t'batch.$.nobatch': type: String\n\t'batch.$.merek': type: String\n\t'batch.$.satuan': type: Number, autoform: options: selects.satuan\n\t'batch.$.masuk': type: Date, autoform: type: 'pickadate'\n\t'batch.$.kadaluarsa': type: Date, autoform: type: 'pickadate'\n\t'batch.$.digudang': type: Number\n\t'batch.$.diapotik': type: Number\n\t'batch.$.beli': type: Number, decimal: true\n\t'batch.$.jual': type: Number, decimal: true\n\t'batch.$.suplier': type: String\n\t'batch.$.anggaran': type: Number, autoform: options: selects.anggaran\n\t'batch.$.pengadaan': type: Number\n\nschema.farmasi = _.assign schema.gudang, {}\nschema.logistik = _.assign schema.gudang, {}\n\nschema.dokter =\n\tnama: type: String\n\ttipe: type: Number, autoform: options: selects.tipe_dokter\n\tpoli: type: Number, autoform: options: selects.klinik\n\nschema.tarif =\n\tjenis: type: String\n\tnama: type: String\n\tharga: type: Number\n\tgrup: type: String, optional: true\n\n_.map ['dokter', 'tarif'], (i) ->\n\tobj = active:\n\t\ttype: Boolean\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> true\n\t_.assign schema[i], obj\n\n_.map ['pasien', 'gudang', 'dokter', 'tarif'], (i) ->\n\tcoll[i] = new Meteor.Collection i\n\tcoll[i].allow\n\t\tinsert: -> true\n\t\tupdate: -> true\n\t\tremove: -> true\n\nmakePasien = (modul) ->\n\tRouter.route '/'+modul+'/:no_mr?',\n\t\tname: modul\n\t\taction: -> this.render 'pasien'\n\t\twaitOn: ->\n\t\t\t_.map ['dokter', 'tarif', 'gudang'], (i) ->\n\t\t\t\tMeteor.subscribe 'coll', i, {}, {}\n\nmakePasien i.name for i in modules[0..9]\n\nmakeGudang = (modul) ->\n\tRouter.route '/'+modul+'/:idbarang?',\n\t\tname: modul\n\t\taction: -> this.render 'gudang'\n\nmakeGudang i.name for i in modules[10..11]\n\nmakeOther = (name) ->\n\tRouter.route '/' + name,\n\t\taction: -> this.render name\n\nmakeOther i for i in ['panduan']\n\nRouter.route '/manajemen',\n\taction: -> this.render 'manajemen'\n\twaitOn: -> [\n\t\tMeteor.subscribe 'users'\n\t\tMeteor.subscribe 'coll', 'dokter', {}, {}\n\t\tMeteor.subscribe 'coll', 'tarif', {}, {}\n\t]\n\nRouter.route '/login', ->\n\taction: -> this.render 'login'\n","var i, j, k, l, len, len1, len2, makeGudang, makeOther, makePasien, randomId, ref, ref1, ref2;\n\nthis._ = lodash;\n\nRouter.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading'\n});\n\nRouter.route('/', {\n  action: function() {\n    return this.render('home');\n  }\n});\n\nthis.coll = {};\n\nthis.schema = {};\n\nrandomId = function() {\n  return Math.random().toString(36).slice(2);\n};\n\nschema.regis = {\n  no_mr: {\n    type: Number\n  },\n  regis: {\n    type: Object\n  },\n  'regis.nama_lengkap': {\n    type: String\n  },\n  'regis.tgl_lahir': {\n    type: Date,\n    autoform: {\n      type: 'pickadate',\n      pickadateOptions: {\n        selectYears: 150,\n        selectMonths: true\n      }\n    }\n  },\n  'regis.tmpt_lahir': {\n    type: String,\n    optional: true\n  },\n  'regis.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kelamin': {\n    type: Number,\n    autoform: {\n      options: selects.kelamin,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.agama': {\n    type: Number,\n    autoform: {\n      options: selects.agama,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.nikah': {\n    type: Number,\n    autoform: {\n      options: selects.nikah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pendidikan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pendidikan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.darah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.darah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pekerjaan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pekerjaan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kabupaten': {\n    type: String,\n    optional: true\n  },\n  'regis.kecamatan': {\n    type: String,\n    optional: true\n  },\n  'regis.kelurahan': {\n    type: String,\n    optional: true\n  },\n  'regis.alamat': {\n    type: String\n  },\n  'regis.kontak': {\n    type: String,\n    optional: true\n  },\n  'regis.ayah': {\n    type: String,\n    optional: true\n  },\n  'regis.ibu': {\n    type: String,\n    optional: true\n  },\n  'regis.pasangan': {\n    type: String,\n    optional: true\n  },\n  'regis.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      if (Meteor.isClient) {\n        return Meteor.userId();\n      }\n    }\n  },\n  'regis.date': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return new Date;\n    }\n  },\n  'regis.billCard': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.tindakan = {\n  idtindakan: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.tindakan\n    }\n  },\n  dokter: {\n    type: String,\n    autoform: {\n      options: selects.dokter\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.labor = {\n  idlabor: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.labor\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.radio = {\n  idradio: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.radio\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.obat = {\n  idobat: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.obat\n    }\n  },\n  puyer: {\n    type: String,\n    optional: true\n  },\n  aturan: {\n    type: Object\n  },\n  'aturan.kali': {\n    type: Number\n  },\n  'aturan.dosis': {\n    type: Number\n  },\n  'aturan.bentuk': {\n    type: Number,\n    autoform: {\n      options: selects.bentuk\n    }\n  },\n  jumlah: {\n    type: Number\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  subtotal: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.rawat = {\n  no_mr: {\n    type: Number\n  },\n  rawat: {\n    type: Array\n  },\n  'rawat.$': {\n    type: Object\n  },\n  'rawat.$.tanggal': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.idbayar': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.jenis': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.klinik': {\n    type: Number,\n    autoform: {\n      options: selects.klinik,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.billRegis': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.nobill': {\n    type: Number,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.status_bayar': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.rujukan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.rujukan,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.anamesa': {\n    type: String,\n    optional: true\n  },\n  'rawat.$.diagnosa': {\n    type: String,\n    optional: true\n  },\n  'rawat.$.tindakan': {\n    type: [new SimpleSchema(schema.tindakan)],\n    optional: true\n  },\n  'rawat.$.labor': {\n    type: [new SimpleSchema(schema.labor)],\n    optional: true\n  },\n  'rawat.$.radio': {\n    type: [new SimpleSchema(schema.radio)],\n    optional: true\n  },\n  'rawat.$.obat': {\n    type: [new SimpleSchema(schema.obat)],\n    optional: true\n  },\n  'rawat.$.total': {\n    type: Object,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.total.tindakan': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.labor': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.radio': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.obat': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.semua': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.spm': {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.pindah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.klinik\n    }\n  },\n  'rawat.$.keluar': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.keluar\n    }\n  },\n  'rawat.$.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.jalan = _.assign(schema.rawat, {});\n\nschema.inap = _.assign(schema.rawat, {});\n\nschema.igd = _.assign(schema.rawat, {});\n\nschema.gudang = {\n  idbarang: {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  jenis: {\n    type: Number,\n    autoform: {\n      options: selects.barang\n    }\n  },\n  nama: {\n    type: String\n  },\n  batch: {\n    type: Array\n  },\n  'batch.$': {\n    type: Object\n  },\n  'batch.$.idbatch': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  'batch.$.nobatch': {\n    type: String\n  },\n  'batch.$.merek': {\n    type: String\n  },\n  'batch.$.satuan': {\n    type: Number,\n    autoform: {\n      options: selects.satuan\n    }\n  },\n  'batch.$.masuk': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.kadaluarsa': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.digudang': {\n    type: Number\n  },\n  'batch.$.diapotik': {\n    type: Number\n  },\n  'batch.$.beli': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.jual': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.suplier': {\n    type: String\n  },\n  'batch.$.anggaran': {\n    type: Number,\n    autoform: {\n      options: selects.anggaran\n    }\n  },\n  'batch.$.pengadaan': {\n    type: Number\n  }\n};\n\nschema.farmasi = _.assign(schema.gudang, {});\n\nschema.logistik = _.assign(schema.gudang, {});\n\nschema.dokter = {\n  nama: {\n    type: String\n  },\n  tipe: {\n    type: Number,\n    autoform: {\n      options: selects.tipe_dokter\n    }\n  },\n  poli: {\n    type: Number,\n    autoform: {\n      options: selects.klinik\n    }\n  }\n};\n\nschema.tarif = {\n  jenis: {\n    type: String\n  },\n  nama: {\n    type: String\n  },\n  harga: {\n    type: Number\n  },\n  grup: {\n    type: String,\n    optional: true\n  }\n};\n\n_.map(['dokter', 'tarif'], function(i) {\n  var obj;\n  obj = {\n    active: {\n      type: Boolean,\n      autoform: {\n        type: 'hidden'\n      },\n      autoValue: function() {\n        return true;\n      }\n    }\n  };\n  return _.assign(schema[i], obj);\n});\n\n_.map(['pasien', 'gudang', 'dokter', 'tarif'], function(i) {\n  coll[i] = new Meteor.Collection(i);\n  return coll[i].allow({\n    insert: function() {\n      return true;\n    },\n    update: function() {\n      return true;\n    },\n    remove: function() {\n      return true;\n    }\n  });\n});\n\nmakePasien = function(modul) {\n  return Router.route('/' + modul + '/:no_mr?', {\n    name: modul,\n    action: function() {\n      return this.render('pasien');\n    },\n    waitOn: function() {\n      return _.map(['dokter', 'tarif', 'gudang'], function(i) {\n        return Meteor.subscribe('coll', i, {}, {});\n      });\n    }\n  });\n};\n\nref = modules.slice(0, 10);\nfor (j = 0, len = ref.length; j < len; j++) {\n  i = ref[j];\n  makePasien(i.name);\n}\n\nmakeGudang = function(modul) {\n  return Router.route('/' + modul + '/:idbarang?', {\n    name: modul,\n    action: function() {\n      return this.render('gudang');\n    }\n  });\n};\n\nref1 = modules.slice(10, 12);\nfor (k = 0, len1 = ref1.length; k < len1; k++) {\n  i = ref1[k];\n  makeGudang(i.name);\n}\n\nmakeOther = function(name) {\n  return Router.route('/' + name, {\n    action: function() {\n      return this.render(name);\n    }\n  });\n};\n\nref2 = ['panduan'];\nfor (l = 0, len2 = ref2.length; l < len2; l++) {\n  i = ref2[l];\n  makeOther(i);\n}\n\nRouter.route('/manajemen', {\n  action: function() {\n    return this.render('manajemen');\n  },\n  waitOn: function() {\n    return [Meteor.subscribe('users'), Meteor.subscribe('coll', 'dokter', {}, {}), Meteor.subscribe('coll', 'tarif', {}, {})];\n  }\n});\n\nRouter.route('/login', function() {\n  return {\n    action: function() {\n      return this.render('login');\n    }\n  };\n});\n","if Meteor.isClient\n\n\tAutoForm.setDefaultTemplate 'materialize'\n\tcurrentRoute = -> Router.current().route.getName()\n\tcurrentPar = (param) -> Router.current().params[param]\n\tsearch = -> Session.get 'search'\n\tformDoc = -> Session.get 'formDoc'\n\t@limit = -> Session.get 'limit'\n\t@page = -> Session.get 'page'\n\troles = -> Meteor.user().roles\n\n\tRouter.onBeforeAction ->\n\t\tunless Meteor.userId() then this.render 'login' else this.next()\n\tRouter.onAfterAction ->\n\t\tRouter.go '/' unless currentRoute() in\n\t\t\t_.uniq _.flatMap _.keys(roles()), (i) ->\n\t\t\t\t_.find(rights, (j) -> j.group is i).list\n\n\tTemplate.registerHelper 'coll', -> coll\n\tTemplate.registerHelper 'schema', -> new SimpleSchema schema[currentRoute()]\n\tTemplate.registerHelper 'zeros', (num) ->\n\t\tsize = _.size _.toString num\n\t\tif size < 7 then '0'.repeat(6-size) + _.toString num\n\tTemplate.registerHelper 'showForm', -> Session.get 'showForm'\n\tTemplate.registerHelper 'hari', (date) -> moment(date).format('D MMM YYYY')\n\tTemplate.registerHelper 'rupiah', (val) -> 'Rp ' + numeral(val).format('0,0')\n\tTemplate.registerHelper 'currentPar', (param) -> currentPar param\n\tTemplate.registerHelper 'stringify', (obj) -> JSON.stringify obj\n\tTemplate.registerHelper 'startCase', (val) -> _.startCase val\n\tTemplate.registerHelper 'modules', -> modules\n\tTemplate.registerHelper 'reverse', (arr) -> _.reverse arr\n\tTemplate.registerHelper 'sortBy', (arr, sel, sort) -> _.sortBy arr, (i) -> -i.tanggal.getTime()\n\tTemplate.registerHelper 'isTrue', (a, b) -> a is b\n\tTemplate.registerHelper 'isFalse', (a, b) -> a isnt b\n\tTemplate.registerHelper 'look', (option, value, field) ->\n\t\tfind = _.find selects[option], (i) -> i.value is value\n\t\tfind[field]\n\tTemplate.registerHelper 'look2', (option, value, field) ->\n\t\tfind = _.find coll[option].find().fetch(), (i) -> i._id is value\n\t\t_.startCase find[field]\n\tTemplate.registerHelper 'routeIs', (name) ->\n\t\tcurrentRoute() is name\n\tTemplate.registerHelper 'userGroup', (name) ->\n\t\troles()[name]\n\tTemplate.registerHelper 'userRole', (name) ->\n\t\troles()[currentRoute()][0] is name\n\tTemplate.registerHelper 'pagins', (name) ->\n\t\tlimit = Session.get 'limit'\n\t\tlength = coll[name].find().fetch().length\n\t\tend = (length - (length % limit)) / limit\n\t\t[1..end]\n\n\tTemplate.body.events\n\t\t'keypress #search': (event) ->\n\t\t\tif event.key is 'Enter'\n\t\t\t\tterm = event.target.value\n\t\t\t\tif term.length > 2\n\t\t\t\t\tSession.set 'search', term\n\n\tTemplate.layout.onRendered ->\n\t\tSession.set 'limit', 10\n\t\tSession.set 'page', 0\n\n\tTemplate.menu.helpers\n\t\tmenus: ->\t\t\t\n\t\t\t_.flatMap _.keys(roles()), (i) ->\n\t\t\t\tfind = _.find rights, (j) -> j.group is i\n\t\t\t\t_.map find.list, (j) -> _.find modules, (k) -> k.name is j\n\t\tnavTitle: ->\n\t\t\tfind = _.find modules, (i) -> i.name is currentRoute()\n\t\t\tif find then find.full else _.startCase currentRoute()\n\t\ttoday: -> moment().format('LLL')\n\tTemplate.menu.events\n\t\t'click #logout': -> Meteor.logout()\n\t\t'click #refresh': -> document.location.reload()\n\n\tTemplate.pasien.helpers\n\t\troute: -> currentRoute()\n\t\tformType: ->\n\t\t\tif currentRoute() is 'regis'\n\t\t\t\tif currentPar 'no_mr' then 'update' else 'insert'\n\t\t\telse\n\t\t\t\t'update-pushArray'\n\t\tumur: (date) -> moment().diff(date, 'years') + ' tahun'\n\t\tshowButton: -> Router.current().params.no_mr or currentRoute() is 'regis'\n\t\tshowButtonText: ->\n\t\t\tswitch currentRoute()\n\t\t\t\twhen 'regis' then '+ Pasien'\n\t\t\t\twhen 'jalan' then '+ Rawat'\n\t\tformDoc: -> formDoc()\n\t\tpreview: -> Session.get 'preview'\n\t\tomitFields: ->\n\t\t\tunless formDoc() and formDoc().billRegis\n\t\t\t\t['anamesa', 'diagnosa', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah']\n\t\troleFilter: (arr) -> _.reverse _.filter arr, (i) ->\n\t\t\tfind = _.find selects.klinik, (j) ->\n\t\t\t\tj.label is _.startCase roles().jalan[0]\n\t\t\ti.klinik is find.value\n\t\tuserPoli: -> roles().jalan\n\t\tinsurance: (val) -> 'Rp ' + numeral(val+30000).format('0,0')\n\t\tselPol: -> _.map roles().jalan, (i) ->\n\t\t\t_.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\tpasiens: ->\n\t\t\tif currentPar 'no_mr'\n\t\t\t\tselector = no_mr: parseInt currentPar 'no_mr'\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tarr = ['bayar', 'jalan', 'labor', 'radio', 'obat']\n\t\t\t\toptions.fields.rawat = 1 if currentRoute() in arr\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = 'regis.nama_lengkap': $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyNoMR = no_mr: parseInt search()\n\t\t\t\tselector = $or: [byName, byNoMR]\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if roles().jalan\n\t\t\t\tnow = new Date(); past = new Date now.getDate()-2\n\t\t\t\tkliniks = _.map roles().jalan, (i) ->\n\t\t\t\t\tfind = _.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\t\t\t\tfind.value\n\t\t\t\tselector = rawat: $elemMatch:\n\t\t\t\t\tklinik: $in: kliniks\n\t\t\t\t\ttanggal: $gt: past\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready()\n\t\t\t\t\tfilter = _.filter coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\t\ta = -> i.rawat[i.rawat.length-1].klinik in kliniks\n\t\t\t\t\t\tb = -> not i.rawat[i.rawat.length-1].total.semua\n\t\t\t\t\t\tselPol = Session.get 'selPol'\n\t\t\t\t\t\tc = -> i.rawat[i.rawat.length-1].klinik is selPol\n\t\t\t\t\t\tif selPol then b() and c() else a() and b()\n\t\t\t\t\t_.sortBy filter, (i) -> i.rawat[i.rawat.length-1].tanggal\n\t\t\telse if currentRoute() is 'bayar'\n\t\t\t\tselector = rawat: $elemMatch: $or: ['total.semua': 0, 'status_bayar': $ne: true]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if currentRoute() in ['labor', 'radio', 'obat']\n\t\t\t\telem = 'status_bayar': true\n\t\t\t\telem[currentRoute()] = $exists: true, $elemMatch: hasil: $exists: false\n\t\t\t\tselSub = rawat: $elemMatch: elem\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selSub, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\n\tTemplate.pasien.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t\tlater = ->\n\t\t\t\t$('.autoform-remove-item').trigger 'click'\n\t\t\t\tif currentRoute() is 'jalan' then _.map ['cara_bayar', 'klinik', 'rujukan'], (i) ->\n\t\t\t\t\tif formDoc() then $('input[name=\"'+i+'\"][value=\"'+formDoc()[i]+'\"]').prop 'checked', true\n\t\t\t\t\t$('div[data-schema-key=\"'+i+'\"]').prepend('<p>'+_.startCase(i)+'</p>')\n\t\t\t\tlist = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan']\n\t\t\t\tif currentRoute() is 'regis' then _.map list, (i) ->\n\t\t\t\t\t$('div[data-schema-key=\"regis.'+i+'\"]').prepend('<p>'+_.startCase(i)+'</p>')\n\t\t\tsetTimeout later, 1000\n\t\t\tMeteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\tSession.set 'begin', moment()\n\t\t'dblclick #row': ->\n\t\t\tRouter.go '/' + currentRoute() + '/' + this.no_mr\n\t\t'click #close': ->\n\t\t\t_.map ['showForm', 'formDoc', 'preview', 'search'], (i) ->\n\t\t\t\tSession.set i, null\n\t\t\tRouter.go currentRoute()\n\t\t'click #card': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak Kartu'\n\t\t\t\tmessage: 'Yakin untuk cetak kartu ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'billCard', currentPar('no_mr'), true\n\t\t\t\tmakePdf.card()\n\t\t'click #consent': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak General Consent'\n\t\t\t\tmessage: 'Yakin untuk cetak persetujuan pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> makePdf.consent() if ok\n\t\t'dblclick #bill': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Pembayaran Pendaftaran'\n\t\t\t\tmessage: 'Apakah yakin pasien sudah membayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tif nodes[1]\n\t\t\t\t\tMeteor.call 'billRegis', nodes..., true\n\t\t\t\t\tmakePdf.payRegCard 30000, 'Tiga Puluh Ribu Rupiah'\n\t\t\t\telse\n\t\t\t\t\tMeteor.call 'billCard', nodes[0], false\n\t\t\t\t\tmakePdf.payRegCard 10000, 'Sepuluh Ribu Rupiah'\n\t\t'dblclick #bayar': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Pembayaran'\n\t\t\t\tmessage: 'Apakah yakin tagihan ini sudah dibayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'bayar', nodes...\n\t\t\t\tpasien = coll.pasien.findOne no_mr: parseInt nodes[0]\n\t\t\t\tdoc = _.find pasien.rawat, (i) -> i.idbayar is nodes[1]\n\t\t\t\tmakePdf.payRawat doc\n\t\t'dblclick #request': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'jenis', 'idjenis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tMaterializeModal.prompt\n\t\t\t\tmessage: 'Isikan data requestnya'\n\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\tparams = ['request', nodes..., res.value]\n\t\t\t\t\tMeteor.call params..., (err, res) -> if res\n\t\t\t\t\t\tmessage = ''\n\t\t\t\t\t\tfor key, val of res\n\t\t\t\t\t\t\tmessage += '</p>'+key+': '+val+'</p>'\n\t\t\t\t\t\tMaterializeModal.message\n\t\t\t\t\t\t\ttitle: 'Penyerahan Obat'\n\t\t\t\t\t\t\tmessage: message\n\t\t\t\t\t\trekap = Session.get('rekap') or []\n\t\t\t\t\t\tflat = _.flatten _.toPairs res\n\t\t\t\t\t\tSession.set 'rekap', [rekap..., [nodes..., flat...]]\n\t\t'dblclick #rekap': ->\n\t\t\theaders = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah']\n\t\t\tmakePdf.rekap [headers, Session.get('rekap')...]\n\t\t\tSession.set 'rekap', null\n\t\t'click .modal-trigger': (event) ->\n\t\t\tif this.idbayar\n\t\t\t\tSession.set 'formDoc', this\n\t\t\t\tSession.set 'preview', modForm this, this.idbayar\n\t\t\t$('#preview').modal 'open'\n\t\t'click #rmRawat': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Hapus'\n\t\t\t\tmessage: 'Apakah yakin hapus data rawat pasien ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRawat', currentPar('no_mr'), self.idbayar\n\t\t'change #selPol': (event) ->\n\t\t\tSession.set 'selPol', parseInt event.target.id\n\t\t'click #rmPasien': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Pasien'\n\t\t\t\tmessage: 'Apakah yakin untuk menghapus pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmPasien', currentPar 'no_mr'\n\t\t\t\tRouter.go '/' + currentRoute()\n\n\tTemplate.import.events\n\t\t'change :file': (event, template) ->\n\t\t\tPapa.parse event.target.files[0],\n\t\t\t\theader: true\n\t\t\t\tstep: (result) ->\n\t\t\t\t\tdata = result.data[0]\n\t\t\t\t\tif currentRoute() is 'regis'\n\t\t\t\t\t\tselector = no_mr: parseInt data.no_mr\n\t\t\t\t\t\tmodifier = regis:\n\t\t\t\t\t\t\tnama_lengkap: _.startCase data.nama_lengkap\n\t\t\t\t\t\t\talamat: _.startCase data.alamat\n\t\t\t\t\t\t\tagama: parseInt data.agama\n\t\t\t\t\t\t\tayah: _.startCase data.ayah\n\t\t\t\t\t\t\tnikah: parseInt data.nikah\n\t\t\t\t\t\t\tpekerjaan: parseInt data.pekerjaan\n\t\t\t\t\t\t\tpendidikan: parseInt data.pendidikan\n\t\t\t\t\t\t\ttgl_lahir: new Date data.tgl_lahir\n\t\t\t\t\t\t\ttmpt_kelahiran: _.startCase data.tmpt_kelahiran\n\t\t\t\t\t\tMeteor.call 'import', 'pasien', selector, modifier\n\t\t\t\t\telse if currentRoute() is 'manajemen'\n\t\t\t\t\t\tif data.tipe\n\t\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\ttipe: parseInt data.tipe\n\t\t\t\t\t\t\t\tpoli: parseInt data.poli\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tMeteor.call 'import', 'dokter', selector, modifier\n\t\t\t\t\t\telse if data.harga\n\t\t\t\t\t\t\tselector = nama: _.snakeCase data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\tharga: parseInt data.harga\n\t\t\t\t\t\t\t\tjenis: _.snakeCase data.jenis\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tdata.grup and modifier.grup = _.startCase data.grup\n\t\t\t\t\t\t\tMeteor.call 'import', 'tarif', selector, modifier\n\t\t\t\t\t\telse if data.password\n\t\t\t\t\t\t\tMeteor.call 'newUser', data\n\t\t\t\t\t\t\tMeteor.call 'addRole', data.username, [data.role], data.group\n\t\t\t\t\telse if currentRoute() is 'farmasi'\n\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\tidbarang: randomId()\n\t\t\t\t\t\t\tbatch: [\n\t\t\t\t\t\t\t\tidbatch: randomId()\n\t\t\t\t\t\t\t\tanggaran: data.anggaran\n\t\t\t\t\t\t\t\tbeli: parseInt data.beli\n\t\t\t\t\t\t\t\tdiapotik: parseInt data.diapotik\n\t\t\t\t\t\t\t\tdigudang: parseInt data.digudang\n\t\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\t\tjual: parseInt data.jual\n\t\t\t\t\t\t\t\tkadaluarsa: new Date data.kadaluarsa\n\t\t\t\t\t\t\t\tmasuk: new Date data.masuk\n\t\t\t\t\t\t\t\tmerek: data.merek or ''\n\t\t\t\t\t\t\t\tnobatch: data.nobatch\n\t\t\t\t\t\t\t\tpengadaan: parseInt data.pengadaan\n\t\t\t\t\t\t\t\tsatuan: parseInt data.satuan\n\t\t\t\t\t\t\t\tsuplier: data.suplier\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\tdata.nama and Meteor.call 'import', 'gudang', selector, modifier, 'batch'\n\n\tTemplate.gudang.helpers\n\t\tschemagudang: -> new SimpleSchema schema.gudang\n\t\tformType: -> if currentPar('idbarang') then 'update-pushArray' else 'insert'\n\t\tgudangs: ->\n\t\t\tif currentPar 'idbarang'\n\t\t\t\tselector = idbarang: currentPar 'idbarang'\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tif sub.ready() then coll.gudang.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = nama: $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyBatch = idbatch: search()\n\t\t\t\tselector = $or: [byName, byBatch]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tsub.ready() and coll.gudang.find().fetch()\n\t\t\telse\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\t\tsub.ready() and coll.gudang.find().fetch()\n\n\tTemplate.gudang.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t'dblclick #row': -> Router.go '/' + currentRoute() + '/' + this.idbarang\n\t\t'dblclick #transfer': ->\n\t\t\tdata = this\n\t\t\tif roles().farmasi\n\t\t\t\tMaterializeModal.prompt\n\t\t\t\t\tmessage: 'Transfer Gudang > Apotek'\n\t\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\t\tMeteor.call 'transfer', currentPar('idbarang'), data.idbatch, parseInt res.value\n\t\t'click #rmBarang': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Jenis Obat'\n\t\t\t\tmessage: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmBarang', self.idbarang\n\n\tTemplate.manajemen.onRendered ->\n\t\t$('select#export').material_select()\n\n\tTemplate.manajemen.helpers\n\t\tusers: -> Meteor.users.find().fetch()\n\t\tonUser: -> Session.get 'onUser'\n\t\tselRoles: -> ['petugas', 'admin']\n\t\tklinik: -> selects.klinik\n\t\tschemadokter: -> new SimpleSchema schema.dokter\n\t\tschematarif: -> new SimpleSchema schema.tarif\n\t\tdokters: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.dokter.find(selector, options).fetch()\n\t\ttarifs: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.tarif.find(selector, options).fetch()\n\n\tTemplate.manajemen.events\n\t\t'submit #userForm': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tonUser = Session.get 'onUser'\n\t\t\tunless onUser\n\t\t\t\tdoc =\n\t\t\t\t\tusername: event.target.children.username.value\n\t\t\t\t\tpassword: event.target.children.password.value\n\t\t\t\trepeat = event.target.children.repeat.value\n\t\t\t\tif doc.password is repeat\n\t\t\t\t\tMeteor.call 'newUser', doc\n\t\t\t\t\t$('input').val ''\n\t\t\t\telse\n\t\t\t\t\tMaterialize.toast 'Password tidak mirip', 3000\n\t\t\telse\n\t\t\t\trole = $('input[name=\"role\"]:checked', event.target)[0].id\n\t\t\t\tgroup = $('input[name=\"group\"]:checked', event.target)[0].id\n\t\t\t\tpoli = $('input[name=\"poli\"]:checked', event.target)[0]\n\t\t\t\ttheRole = unless poli then role else _.snakeCase poli.id\n\t\t\t\tMeteor.call 'addRole', onUser._id, [theRole], group\n\t\t'dblclick #row': -> Session.set 'onUser', this\n\t\t'dblclick #reset': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Reset Peranan'\n\t\t\t\tmessage: 'Anda yakin untuk menghapus semua perannya?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRole', self._id\n\t\t'click #close': -> console.log 'tutup'\n\t\t'click #export': ->\n\t\t\tselect = $('select#export').val()\n\t\t\tMeteor.call 'export', select, (err, content) -> if content\n\t\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\t\tsaveAs blob, select+'.csv'\n\t\t'dblclick #baris': (event) ->\n\t\t\tjenis = event.currentTarget.className\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus ' + _.startCase jenis\n\t\t\t\tmessage: 'Yakin untuk menghapus '+jenis+' dari daftar?'\n\t\t\tself = this\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'inactive', jenis, self._id\n\n\tTemplate.login.onRendered ->\n\t\t$('.slider').slider()\n\n\tTemplate.login.events\n\t\t'submit form': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tusername = event.target.children.username.value\n\t\t\tpassword = event.target.children.password.value\n\t\t\tMeteor.loginWithPassword username, password, (err) ->\n\t\t\t\tif err\n\t\t\t\t\tMaterialize.toast 'Salah username / password', 3000\n\t\t\t\telse\n\t\t\t\t\tRouter.go '/' + _.keys(roles())[0]\n\n\tTemplate.pagination.events\n\t\t'click #next': -> Session.set 'page', 1 + page()\n\t\t'click #prev': -> Session.set 'page', -1 + page()\n\t\t'click #num': (event) ->\n\t\t\tSession.set 'page', parseInt event.target.innerText\n\n\tTemplate.report.helpers\n\t\tdatas: -> Session.get 'laporan'\n\n\tTemplate.report.events\n\t\t'click .datepicker': (event, template) ->\n\t\t\ttype = event.target.attributes.date.nodeValue\n\t\t\t$('#'+type).pickadate onSet: (data) ->\n\t\t\t\tSession.set type+'Date', data.select\n\t\t\t\tstart = Session.get 'startDate'\n\t\t\t\tend = Session.get 'endDate'\n\t\t\t\tif start and end\n\t\t\t\t\tMeteor.call 'report', template.data.jenis, start, end, (err, res) ->\n\t\t\t\t\t\tres and Session.set 'laporan', res\n\t\t'click #export': (event, template) ->\n\t\t\tcontent = exportcsv.exportToCSV Session.get('laporan').csv, true, ';'\n\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\tsaveAs blob, template.data.jenis+'.csv'\n","var currentPar, currentRoute, formDoc, roles, search,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  slice = [].slice;\n\nif (Meteor.isClient) {\n  AutoForm.setDefaultTemplate('materialize');\n  currentRoute = function() {\n    return Router.current().route.getName();\n  };\n  currentPar = function(param) {\n    return Router.current().params[param];\n  };\n  search = function() {\n    return Session.get('search');\n  };\n  formDoc = function() {\n    return Session.get('formDoc');\n  };\n  this.limit = function() {\n    return Session.get('limit');\n  };\n  this.page = function() {\n    return Session.get('page');\n  };\n  roles = function() {\n    return Meteor.user().roles;\n  };\n  Router.onBeforeAction(function() {\n    if (!Meteor.userId()) {\n      return this.render('login');\n    } else {\n      return this.next();\n    }\n  });\n  Router.onAfterAction(function() {\n    var ref;\n    if (ref = currentRoute(), indexOf.call(_.uniq(_.flatMap(_.keys(roles()), function(i) {\n      return _.find(rights, function(j) {\n        return j.group === i;\n      }).list;\n    })), ref) < 0) {\n      return Router.go('/');\n    }\n  });\n  Template.registerHelper('coll', function() {\n    return coll;\n  });\n  Template.registerHelper('schema', function() {\n    return new SimpleSchema(schema[currentRoute()]);\n  });\n  Template.registerHelper('zeros', function(num) {\n    var size;\n    size = _.size(_.toString(num));\n    if (size < 7) {\n      return '0'.repeat(6 - size) + _.toString(num);\n    }\n  });\n  Template.registerHelper('showForm', function() {\n    return Session.get('showForm');\n  });\n  Template.registerHelper('hari', function(date) {\n    return moment(date).format('D MMM YYYY');\n  });\n  Template.registerHelper('rupiah', function(val) {\n    return 'Rp ' + numeral(val).format('0,0');\n  });\n  Template.registerHelper('currentPar', function(param) {\n    return currentPar(param);\n  });\n  Template.registerHelper('stringify', function(obj) {\n    return JSON.stringify(obj);\n  });\n  Template.registerHelper('startCase', function(val) {\n    return _.startCase(val);\n  });\n  Template.registerHelper('modules', function() {\n    return modules;\n  });\n  Template.registerHelper('reverse', function(arr) {\n    return _.reverse(arr);\n  });\n  Template.registerHelper('sortBy', function(arr, sel, sort) {\n    return _.sortBy(arr, function(i) {\n      return -i.tanggal.getTime();\n    });\n  });\n  Template.registerHelper('isTrue', function(a, b) {\n    return a === b;\n  });\n  Template.registerHelper('isFalse', function(a, b) {\n    return a !== b;\n  });\n  Template.registerHelper('look', function(option, value, field) {\n    var find;\n    find = _.find(selects[option], function(i) {\n      return i.value === value;\n    });\n    return find[field];\n  });\n  Template.registerHelper('look2', function(option, value, field) {\n    var find;\n    find = _.find(coll[option].find().fetch(), function(i) {\n      return i._id === value;\n    });\n    return _.startCase(find[field]);\n  });\n  Template.registerHelper('routeIs', function(name) {\n    return currentRoute() === name;\n  });\n  Template.registerHelper('userGroup', function(name) {\n    return roles()[name];\n  });\n  Template.registerHelper('userRole', function(name) {\n    return roles()[currentRoute()][0] === name;\n  });\n  Template.registerHelper('pagins', function(name) {\n    var end, l, length, limit, results;\n    limit = Session.get('limit');\n    length = coll[name].find().fetch().length;\n    end = (length - (length % limit)) / limit;\n    return (function() {\n      results = [];\n      for (var l = 1; 1 <= end ? l <= end : l >= end; 1 <= end ? l++ : l--){ results.push(l); }\n      return results;\n    }).apply(this);\n  });\n  Template.body.events({\n    'keypress #search': function(event) {\n      var term;\n      if (event.key === 'Enter') {\n        term = event.target.value;\n        if (term.length > 2) {\n          return Session.set('search', term);\n        }\n      }\n    }\n  });\n  Template.layout.onRendered(function() {\n    Session.set('limit', 10);\n    return Session.set('page', 0);\n  });\n  Template.menu.helpers({\n    menus: function() {\n      return _.flatMap(_.keys(roles()), function(i) {\n        var find;\n        find = _.find(rights, function(j) {\n          return j.group === i;\n        });\n        return _.map(find.list, function(j) {\n          return _.find(modules, function(k) {\n            return k.name === j;\n          });\n        });\n      });\n    },\n    navTitle: function() {\n      var find;\n      find = _.find(modules, function(i) {\n        return i.name === currentRoute();\n      });\n      if (find) {\n        return find.full;\n      } else {\n        return _.startCase(currentRoute());\n      }\n    },\n    today: function() {\n      return moment().format('LLL');\n    }\n  });\n  Template.menu.events({\n    'click #logout': function() {\n      return Meteor.logout();\n    },\n    'click #refresh': function() {\n      return document.location.reload();\n    }\n  });\n  Template.pasien.helpers({\n    route: function() {\n      return currentRoute();\n    },\n    formType: function() {\n      if (currentRoute() === 'regis') {\n        if (currentPar('no_mr')) {\n          return 'update';\n        } else {\n          return 'insert';\n        }\n      } else {\n        return 'update-pushArray';\n      }\n    },\n    umur: function(date) {\n      return moment().diff(date, 'years') + ' tahun';\n    },\n    showButton: function() {\n      return Router.current().params.no_mr || currentRoute() === 'regis';\n    },\n    showButtonText: function() {\n      switch (currentRoute()) {\n        case 'regis':\n          return '+ Pasien';\n        case 'jalan':\n          return '+ Rawat';\n      }\n    },\n    formDoc: function() {\n      return formDoc();\n    },\n    preview: function() {\n      return Session.get('preview');\n    },\n    omitFields: function() {\n      if (!(formDoc() && formDoc().billRegis)) {\n        return ['anamesa', 'diagnosa', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah'];\n      }\n    },\n    roleFilter: function(arr) {\n      return _.reverse(_.filter(arr, function(i) {\n        var find;\n        find = _.find(selects.klinik, function(j) {\n          return j.label === _.startCase(roles().jalan[0]);\n        });\n        return i.klinik === find.value;\n      }));\n    },\n    userPoli: function() {\n      return roles().jalan;\n    },\n    insurance: function(val) {\n      return 'Rp ' + numeral(val + 30000).format('0,0');\n    },\n    selPol: function() {\n      return _.map(roles().jalan, function(i) {\n        return _.find(selects.klinik, function(j) {\n          return i === _.snakeCase(j.label);\n        });\n      });\n    },\n    pasiens: function() {\n      var arr, byName, byNoMR, elem, filter, kliniks, now, options, past, ref, ref1, selSub, selector, sub;\n      if (currentPar('no_mr')) {\n        selector = {\n          no_mr: parseInt(currentPar('no_mr'))\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        arr = ['bayar', 'jalan', 'labor', 'radio', 'obat'];\n        if (ref = currentRoute(), indexOf.call(arr, ref) >= 0) {\n          options.fields.rawat = 1;\n        }\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          'regis.nama_lengkap': {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byNoMR = {\n          no_mr: parseInt(search())\n        };\n        selector = {\n          $or: [byName, byNoMR]\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if (roles().jalan) {\n        now = new Date();\n        past = new Date(now.getDate() - 2);\n        kliniks = _.map(roles().jalan, function(i) {\n          var find;\n          find = _.find(selects.klinik, function(j) {\n            return i === _.snakeCase(j.label);\n          });\n          return find.value;\n        });\n        selector = {\n          rawat: {\n            $elemMatch: {\n              klinik: {\n                $in: kliniks\n              },\n              tanggal: {\n                $gt: past\n              }\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          filter = _.filter(coll.pasien.find().fetch(), function(i) {\n            var a, b, c, selPol;\n            a = function() {\n              var ref1;\n              return ref1 = i.rawat[i.rawat.length - 1].klinik, indexOf.call(kliniks, ref1) >= 0;\n            };\n            b = function() {\n              return !i.rawat[i.rawat.length - 1].total.semua;\n            };\n            selPol = Session.get('selPol');\n            c = function() {\n              return i.rawat[i.rawat.length - 1].klinik === selPol;\n            };\n            if (selPol) {\n              return b() && c();\n            } else {\n              return a() && b();\n            }\n          });\n          return _.sortBy(filter, function(i) {\n            return i.rawat[i.rawat.length - 1].tanggal;\n          });\n        }\n      } else if (currentRoute() === 'bayar') {\n        selector = {\n          rawat: {\n            $elemMatch: {\n              $or: [\n                {\n                  'total.semua': 0,\n                  'status_bayar': {\n                    $ne: true\n                  }\n                }\n              ]\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if ((ref1 = currentRoute()) === 'labor' || ref1 === 'radio' || ref1 === 'obat') {\n        elem = {\n          'status_bayar': true\n        };\n        elem[currentRoute()] = {\n          $exists: true,\n          $elemMatch: {\n            hasil: {\n              $exists: false\n            }\n          }\n        };\n        selSub = {\n          rawat: {\n            $elemMatch: elem\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selSub, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      }\n    }\n  });\n  Template.pasien.events({\n    'click #showForm': function() {\n      var later;\n      Session.set('showForm', !Session.get('showForm'));\n      later = function() {\n        var list;\n        $('.autoform-remove-item').trigger('click');\n        if (currentRoute() === 'jalan') {\n          _.map(['cara_bayar', 'klinik', 'rujukan'], function(i) {\n            if (formDoc()) {\n              $('input[name=\"' + i + '\"][value=\"' + formDoc()[i] + '\"]').prop('checked', true);\n            }\n            return $('div[data-schema-key=\"' + i + '\"]').prepend('<p>' + _.startCase(i) + '</p>');\n          });\n        }\n        list = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan'];\n        if (currentRoute() === 'regis') {\n          return _.map(list, function(i) {\n            return $('div[data-schema-key=\"regis.' + i + '\"]').prepend('<p>' + _.startCase(i) + '</p>');\n          });\n        }\n      };\n      setTimeout(later, 1000);\n      Meteor.subscribe('coll', 'gudang', {}, {});\n      return Session.set('begin', moment());\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.no_mr);\n    },\n    'click #close': function() {\n      _.map(['showForm', 'formDoc', 'preview', 'search'], function(i) {\n        return Session.set(i, null);\n      });\n      return Router.go(currentRoute());\n    },\n    'click #card': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak Kartu',\n        message: 'Yakin untuk cetak kartu ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          Meteor.call('billCard', currentPar('no_mr'), true);\n          return makePdf.card();\n        }\n      });\n    },\n    'click #consent': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak General Consent',\n        message: 'Yakin untuk cetak persetujuan pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.consent();\n        }\n      });\n    },\n    'dblclick #bill': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Pembayaran Pendaftaran',\n        message: 'Apakah yakin pasien sudah membayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          if (nodes[1]) {\n            Meteor.call.apply(Meteor, ['billRegis'].concat(slice.call(nodes), [true]));\n            return makePdf.payRegCard(30000, 'Tiga Puluh Ribu Rupiah');\n          } else {\n            Meteor.call('billCard', nodes[0], false);\n            return makePdf.payRegCard(10000, 'Sepuluh Ribu Rupiah');\n          }\n        }\n      });\n    },\n    'dblclick #bayar': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Konfirmasi Pembayaran',\n        message: 'Apakah yakin tagihan ini sudah dibayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        var doc, pasien;\n        if (ok) {\n          Meteor.call.apply(Meteor, ['bayar'].concat(slice.call(nodes)));\n          pasien = coll.pasien.findOne({\n            no_mr: parseInt(nodes[0])\n          });\n          doc = _.find(pasien.rawat, function(i) {\n            return i.idbayar === nodes[1];\n          });\n          return makePdf.payRawat(doc);\n        }\n      });\n    },\n    'dblclick #request': function(event) {\n      var nodes;\n      nodes = _.map(['pasien', 'idbayar', 'jenis', 'idjenis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      return MaterializeModal.prompt({\n        message: 'Isikan data requestnya',\n        callback: function(err, res) {\n          var params;\n          if (res.submit) {\n            params = ['request'].concat(slice.call(nodes), [res.value]);\n            return Meteor.call.apply(Meteor, slice.call(params).concat([function(err, res) {\n              var flat, key, message, rekap, val;\n              if (res) {\n                message = '';\n                for (key in res) {\n                  val = res[key];\n                  message += '</p>' + key + ': ' + val + '</p>';\n                }\n                MaterializeModal.message({\n                  title: 'Penyerahan Obat',\n                  message: message\n                });\n                rekap = Session.get('rekap') || [];\n                flat = _.flatten(_.toPairs(res));\n                return Session.set('rekap', slice.call(rekap).concat([slice.call(nodes).concat(slice.call(flat))]));\n              }\n            }]));\n          }\n        }\n      });\n    },\n    'dblclick #rekap': function() {\n      var headers;\n      headers = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah'];\n      makePdf.rekap([headers].concat(slice.call(Session.get('rekap'))));\n      return Session.set('rekap', null);\n    },\n    'click .modal-trigger': function(event) {\n      if (this.idbayar) {\n        Session.set('formDoc', this);\n        Session.set('preview', modForm(this, this.idbayar));\n      }\n      return $('#preview').modal('open');\n    },\n    'click #rmRawat': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Konfirmasi Hapus',\n        message: 'Apakah yakin hapus data rawat pasien ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRawat', currentPar('no_mr'), self.idbayar);\n        }\n      });\n    },\n    'change #selPol': function(event) {\n      return Session.set('selPol', parseInt(event.target.id));\n    },\n    'click #rmPasien': function() {\n      var dialog;\n      dialog = {\n        title: 'Hapus Pasien',\n        message: 'Apakah yakin untuk menghapus pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          Meteor.call('rmPasien', currentPar('no_mr'));\n          return Router.go('/' + currentRoute());\n        }\n      });\n    }\n  });\n  Template[\"import\"].events({\n    'change :file': function(event, template) {\n      return Papa.parse(event.target.files[0], {\n        header: true,\n        step: function(result) {\n          var data, modifier, selector;\n          data = result.data[0];\n          if (currentRoute() === 'regis') {\n            selector = {\n              no_mr: parseInt(data.no_mr)\n            };\n            modifier = {\n              regis: {\n                nama_lengkap: _.startCase(data.nama_lengkap),\n                alamat: _.startCase(data.alamat),\n                agama: parseInt(data.agama),\n                ayah: _.startCase(data.ayah),\n                nikah: parseInt(data.nikah),\n                pekerjaan: parseInt(data.pekerjaan),\n                pendidikan: parseInt(data.pendidikan),\n                tgl_lahir: new Date(data.tgl_lahir),\n                tmpt_kelahiran: _.startCase(data.tmpt_kelahiran)\n              }\n            };\n            return Meteor.call('import', 'pasien', selector, modifier);\n          } else if (currentRoute() === 'manajemen') {\n            if (data.tipe) {\n              selector = {\n                nama: data.nama\n              };\n              modifier = {\n                tipe: parseInt(data.tipe),\n                poli: parseInt(data.poli),\n                active: true\n              };\n              return Meteor.call('import', 'dokter', selector, modifier);\n            } else if (data.harga) {\n              selector = {\n                nama: _.snakeCase(data.nama)\n              };\n              modifier = {\n                harga: parseInt(data.harga),\n                jenis: _.snakeCase(data.jenis),\n                active: true\n              };\n              data.grup && (modifier.grup = _.startCase(data.grup));\n              return Meteor.call('import', 'tarif', selector, modifier);\n            } else if (data.password) {\n              Meteor.call('newUser', data);\n              return Meteor.call('addRole', data.username, [data.role], data.group);\n            }\n          } else if (currentRoute() === 'farmasi') {\n            selector = {\n              nama: data.nama\n            };\n            modifier = {\n              jenis: parseInt(data.jenis),\n              idbarang: randomId(),\n              batch: [\n                {\n                  idbatch: randomId(),\n                  anggaran: data.anggaran,\n                  beli: parseInt(data.beli),\n                  diapotik: parseInt(data.diapotik),\n                  digudang: parseInt(data.digudang),\n                  jenis: parseInt(data.jenis),\n                  jual: parseInt(data.jual),\n                  kadaluarsa: new Date(data.kadaluarsa),\n                  masuk: new Date(data.masuk),\n                  merek: data.merek || '',\n                  nobatch: data.nobatch,\n                  pengadaan: parseInt(data.pengadaan),\n                  satuan: parseInt(data.satuan),\n                  suplier: data.suplier\n                }\n              ]\n            };\n            return data.nama && Meteor.call('import', 'gudang', selector, modifier, 'batch');\n          }\n        }\n      });\n    }\n  });\n  Template.gudang.helpers({\n    schemagudang: function() {\n      return new SimpleSchema(schema.gudang);\n    },\n    formType: function() {\n      if (currentPar('idbarang')) {\n        return 'update-pushArray';\n      } else {\n        return 'insert';\n      }\n    },\n    gudangs: function() {\n      var byBatch, byName, selector, sub;\n      if (currentPar('idbarang')) {\n        selector = {\n          idbarang: currentPar('idbarang')\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        if (sub.ready()) {\n          return coll.gudang.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          nama: {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byBatch = {\n          idbatch: search()\n        };\n        selector = {\n          $or: [byName, byBatch]\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        return sub.ready() && coll.gudang.find().fetch();\n      } else {\n        sub = Meteor.subscribe('coll', 'gudang', {}, {});\n        return sub.ready() && coll.gudang.find().fetch();\n      }\n    }\n  });\n  Template.gudang.events({\n    'click #showForm': function() {\n      return Session.set('showForm', !Session.get('showForm'));\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.idbarang);\n    },\n    'dblclick #transfer': function() {\n      var data;\n      data = this;\n      if (roles().farmasi) {\n        return MaterializeModal.prompt({\n          message: 'Transfer Gudang > Apotek',\n          callback: function(err, res) {\n            if (res.submit) {\n              return Meteor.call('transfer', currentPar('idbarang'), data.idbatch, parseInt(res.value));\n            }\n          }\n        });\n      }\n    },\n    'click #rmBarang': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Hapus Jenis Obat',\n        message: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmBarang', self.idbarang);\n        }\n      });\n    }\n  });\n  Template.manajemen.onRendered(function() {\n    return $('select#export').material_select();\n  });\n  Template.manajemen.helpers({\n    users: function() {\n      return Meteor.users.find().fetch();\n    },\n    onUser: function() {\n      return Session.get('onUser');\n    },\n    selRoles: function() {\n      return ['petugas', 'admin'];\n    },\n    klinik: function() {\n      return selects.klinik;\n    },\n    schemadokter: function() {\n      return new SimpleSchema(schema.dokter);\n    },\n    schematarif: function() {\n      return new SimpleSchema(schema.tarif);\n    },\n    dokters: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.dokter.find(selector, options).fetch();\n    },\n    tarifs: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.tarif.find(selector, options).fetch();\n    }\n  });\n  Template.manajemen.events({\n    'submit #userForm': function(event) {\n      var doc, group, onUser, poli, repeat, role, theRole;\n      event.preventDefault();\n      onUser = Session.get('onUser');\n      if (!onUser) {\n        doc = {\n          username: event.target.children.username.value,\n          password: event.target.children.password.value\n        };\n        repeat = event.target.children.repeat.value;\n        if (doc.password === repeat) {\n          Meteor.call('newUser', doc);\n          return $('input').val('');\n        } else {\n          return Materialize.toast('Password tidak mirip', 3000);\n        }\n      } else {\n        role = $('input[name=\"role\"]:checked', event.target)[0].id;\n        group = $('input[name=\"group\"]:checked', event.target)[0].id;\n        poli = $('input[name=\"poli\"]:checked', event.target)[0];\n        theRole = !poli ? role : _.snakeCase(poli.id);\n        return Meteor.call('addRole', onUser._id, [theRole], group);\n      }\n    },\n    'dblclick #row': function() {\n      return Session.set('onUser', this);\n    },\n    'dblclick #reset': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Reset Peranan',\n        message: 'Anda yakin untuk menghapus semua perannya?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRole', self._id);\n        }\n      });\n    },\n    'click #close': function() {\n      return console.log('tutup');\n    },\n    'click #export': function() {\n      var select;\n      select = $('select#export').val();\n      return Meteor.call('export', select, function(err, content) {\n        var blob;\n        if (content) {\n          blob = new Blob([content], {\n            type: 'text/plain;charset=utf-8'\n          });\n          return saveAs(blob, select + '.csv');\n        }\n      });\n    },\n    'dblclick #baris': function(event) {\n      var dialog, jenis, self;\n      jenis = event.currentTarget.className;\n      dialog = {\n        title: 'Hapus ' + _.startCase(jenis),\n        message: 'Yakin untuk menghapus ' + jenis + ' dari daftar?'\n      };\n      self = this;\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('inactive', jenis, self._id);\n        }\n      });\n    }\n  });\n  Template.login.onRendered(function() {\n    return $('.slider').slider();\n  });\n  Template.login.events({\n    'submit form': function(event) {\n      var password, username;\n      event.preventDefault();\n      username = event.target.children.username.value;\n      password = event.target.children.password.value;\n      return Meteor.loginWithPassword(username, password, function(err) {\n        if (err) {\n          return Materialize.toast('Salah username / password', 3000);\n        } else {\n          return Router.go('/' + _.keys(roles())[0]);\n        }\n      });\n    }\n  });\n  Template.pagination.events({\n    'click #next': function() {\n      return Session.set('page', 1 + page());\n    },\n    'click #prev': function() {\n      return Session.set('page', -1 + page());\n    },\n    'click #num': function(event) {\n      return Session.set('page', parseInt(event.target.innerText));\n    }\n  });\n  Template.report.helpers({\n    datas: function() {\n      return Session.get('laporan');\n    }\n  });\n  Template.report.events({\n    'click .datepicker': function(event, template) {\n      var type;\n      type = event.target.attributes.date.nodeValue;\n      return $('#' + type).pickadate({\n        onSet: function(data) {\n          var end, start;\n          Session.set(type + 'Date', data.select);\n          start = Session.get('startDate');\n          end = Session.get('endDate');\n          if (start && end) {\n            return Meteor.call('report', template.data.jenis, start, end, function(err, res) {\n              return res && Session.set('laporan', res);\n            });\n          }\n        }\n      });\n    },\n    'click #export': function(event, template) {\n      var blob, content;\n      content = exportcsv.exportToCSV(Session.get('laporan').csv, true, ';');\n      blob = new Blob([content], {\n        type: 'text/plain;charset=utf-8'\n      });\n      return saveAs(blob, template.data.jenis + '.csv');\n    }\n  });\n}\n","if Meteor.isServer\n\n\tMeteor.startup ->\n\t\tcoll.pasien._ensureIndex 'regis.nama_lengkap': 1\n\n\tMeteor.publish 'coll', (name, selector, options) ->\n\t\tcoll[name].find selector, options\n\n\tMeteor.publish 'users', ->\n\t\tMeteor.users.find {}\n\n\tMeteor.methods\n\t\timport: (name, selector, modifier, arrName) ->\n\t\t\tfind = coll[name].findOne selector\n\t\t\tunless find\n\t\t\t\tcoll[name].upsert selector, $set: modifier\n\t\t\telse if arrName\n\t\t\t\tsel = _id: find._id\n\t\t\t\tobj = {}; obj[arrName] = modifier[arrName][0]\n\t\t\t\tcoll[name].update sel, $push: obj\n\n\t\texport: (jenis) ->\n\t\t\tif jenis is 'regis'\n\t\t\t\tarr = _.map coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\telse if jenis is 'jalan'\n\t\t\t\tfind = (type, value) ->\n\t\t\t\t\tdoc = _.find selects[type], (i) -> i.value is value\n\t\t\t\t\tdoc.label\n\t\t\t\tarr = _.flatMap coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tif i.rawat then _.map i.rawat, (j) ->\n\t\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\t\t\t\tidbayar: j.idbayar\n\t\t\t\t\t\tcara_bayar: find 'cara_bayar', j.cara_bayar\n\t\t\t\t\t\tklinik: find 'klinik', j.klinik\n\t\t\texportcsv.exportToCSV arr, true, ';'\n\n\t\tbillCard: (no_mr, state) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'regis.billCard': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbillRegis: (no_mr, idbayar, state) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'rawat.$.billRegis': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbayar: (no_mr, idbayar) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = 'rawat.$.status_bayar': true\n\t\t\tcoll.pasien.update selector, $set: modifier\n\n\t\trequest: (no_mr, idbayar, jenis, idjenis, hasil) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tfindPasien = coll.pasien.findOne selector\n\t\t\tfor i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i[jenis] then for j in i[jenis]\n\t\t\t\t\tif j['id'+jenis] is idjenis then j.hasil = hasil\n\t\t\tmodifier = rawat: findPasien.rawat\n\t\t\tcoll.pasien.update selector, $set: modifier\n\t\t\tgive = {}\n\t\t\tif jenis is 'obat' then for i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i.obat then for j in i.obat\n\t\t\t\t\tif j.idobat is idjenis\n\t\t\t\t\t\tfindStock = coll.gudang.findOne _id: j.nama\n\t\t\t\t\t\tfor k in [1..j.jumlah]\n\t\t\t\t\t\t\tfiltered = _.filter findStock.batch, (l) -> l.diapotik > 0\n\t\t\t\t\t\t\tsortedIn = _.sortBy filtered, (l) -> new Date(l.masuk).getTime()\n\t\t\t\t\t\t\tsortedEd = _.sortBy sortedIn, (l) -> new Date(l.kadaluarsa).getTime()\n\t\t\t\t\t\t\tsortedEd[0].diapotik -= 1\n\t\t\t\t\t\t\tkey = findStock.nama +';'+ sortedEd[0].nobatch\n\t\t\t\t\t\t\tgive[key] or= 0; give[key] += 1\n\t\t\t\t\t\tselector = _id: findStock._id\n\t\t\t\t\t\tmodifier = $set: batch: findStock.batch\n\t\t\t\t\t\tcoll.gudang.update selector, modifier\n\t\t\tgive if jenis is 'obat'\n\n\t\ttransfer: (idbarang, idbatch, amount) ->\n\t\t\tselector = idbarang: idbarang, 'batch.idbatch': idbatch\n\t\t\tmodifier = $inc: 'batch.$.digudang': -amount, 'batch.$.diapotik': amount\n\t\t\tcoll.gudang.update selector, modifier\n\n\t\trmPasien: (no_mr) ->\n\t\t\tcoll.pasien.remove no_mr: parseInt no_mr\n\n\t\trmRawat: (no_mr, idbayar) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $pull: rawat: idbayar: idbayar\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\taddRole: (id, roles, group, poli) ->\n\t\t\trole = poli or roles\n\t\t\tRoles.addUsersToRoles id, role, group\n\n\t\trmRole: (id) ->\n\t\t\tselector = _id: id\n\t\t\tmodifier = $set: roles: {}\n\t\t\tMeteor.users.update selector, modifier\n\n\t\tnewUser: (doc) ->\n\t\t\tfind = Accounts.findUserByUsername doc.username\n\t\t\tif find\n\t\t\t\tAccounts.setUsername find._id, doc.username\n\t\t\t\tAccounts.setPassword find._id, doc.password\n\t\t\telse\n\t\t\t\tAccounts.createUser doc\n\n\t\trmBarang: (idbarang) ->\n\t\t\tcoll.gudang.remove idbarang: idbarang\n\n\t\tinactive: (name, id) ->\n\t\t\tsel = _id: id; mod = $set: active: false\n\t\t\tcoll[name].update sel, mod\n\n\t\tpindah: (no_mr) ->\n\t\t\tfind = coll.pasien.findOne 'no_mr': parseInt no_mr\n\t\t\t[..., last] = find.rawat\n\t\t\tif last.pindah\n\t\t\t\tselector = _id: find._id\n\t\t\t\tmodifier = $push: rawat:\n\t\t\t\t\tidbayar: randomId()\n\t\t\t\t\ttanggal: new Date()\n\t\t\t\t\tcara_bayar: last.cara_bayar\n\t\t\t\t\tklinik: last.pindah\n\t\t\t\t\tbillRegis: true\n\t\t\t\t\ttotal: semua: 0\n\t\t\t\tcoll.pasien.update selector, modifier\n\n\t\treport: (jenis, start, end) ->\n\t\t\tfilter = (arr) -> _.filter arr, (i) ->\n\t\t\t\tnew Date(start) < new Date(i.tanggal) < new Date(end)\n\t\t\tlook = (list, val) -> _.find selects[list], (i) -> i.value is val\n\t\t\tlook2 = (list, id) -> _.find coll[list].find().fetch(), (i) -> i._id is id\n\t\t\tdocs = _.flatMap coll.pasien.find().fetch(), (i) -> _.map filter(i.rawat), (j) ->\n\t\t\t\tobj =\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: _.startCase i.regis.nama_lengkap\n\t\t\t\t\tno_bill: j.nobill\n\t\t\t\t\tcara_bayar: look('cara_bayar', j.cara_bayar).label\n\t\t\t\t\trujukan: if j.rujukan then look('rujukan', j.rujukan).label else ''\n\t\t\t\t\tklinik: look('klinik', j.klinik).label\n\t\t\t\t\tdiagnosa: j.diagnosa or '-'\n\t\t\t\t\ttindakan: _.flatMap ['tindakan', 'labor', 'radio'], (k) ->\n\t\t\t\t\t\tsaring = _.filter j[k], (l) -> l\n\t\t\t\t\t\t_.map saring, (l) -> '/' + _.startCase look2('tarif', l.nama).nama\n\t\t\t\t\tharga: 'Rp ' + j.total.semua\n\t\t\t\t\tpetugas: Meteor.users.findOne(_id: j.petugas).username\n\t\t\t\t\tkeluar: if j.keluar then look('keluar', j.keluar).label else '-'\n\t\t\t\t\tbaru_lama: 'L'\n\t\t\t\tif jenis is 'pendaftaran'\n\t\t\t\t\tpick = _.pick obj, ['no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']\n\t\t\t\telse if jenis is 'pembayaran'\n\t\t\t\t\tpick = _.pick obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'tindakan', 'harga', 'petugas']\n\t\t\t\telse if jenis is 'rawat_jalan'\n\t\t\t\t\tpick = _.pick obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']\n\t\t\t\tpick\n\t\t\theaders: _.map _.keys(docs[0]), (i) -> _.startCase i\n\t\t\trows: _.map docs, (i) -> _.values i\n\t\t\tcsv: docs\n","if (Meteor.isServer) {\n  Meteor.startup(function() {\n    return coll.pasien._ensureIndex({\n      'regis.nama_lengkap': 1\n    });\n  });\n  Meteor.publish('coll', function(name, selector, options) {\n    return coll[name].find(selector, options);\n  });\n  Meteor.publish('users', function() {\n    return Meteor.users.find({});\n  });\n  Meteor.methods({\n    \"import\": function(name, selector, modifier, arrName) {\n      var find, obj, sel;\n      find = coll[name].findOne(selector);\n      if (!find) {\n        return coll[name].upsert(selector, {\n          $set: modifier\n        });\n      } else if (arrName) {\n        sel = {\n          _id: find._id\n        };\n        obj = {};\n        obj[arrName] = modifier[arrName][0];\n        return coll[name].update(sel, {\n          $push: obj\n        });\n      }\n    },\n    \"export\": function(jenis) {\n      var arr, find;\n      if (jenis === 'regis') {\n        arr = _.map(coll.pasien.find().fetch(), function(i) {\n          return {\n            no_mr: i.no_mr,\n            nama_lengkap: i.regis.nama_lengkap\n          };\n        });\n      } else if (jenis === 'jalan') {\n        find = function(type, value) {\n          var doc;\n          doc = _.find(selects[type], function(i) {\n            return i.value === value;\n          });\n          return doc.label;\n        };\n        arr = _.flatMap(coll.pasien.find().fetch(), function(i) {\n          if (i.rawat) {\n            return _.map(i.rawat, function(j) {\n              return {\n                no_mr: i.no_mr,\n                nama_lengkap: i.regis.nama_lengkap,\n                idbayar: j.idbayar,\n                cara_bayar: find('cara_bayar', j.cara_bayar),\n                klinik: find('klinik', j.klinik)\n              };\n            });\n          }\n        });\n      }\n      return exportcsv.exportToCSV(arr, true, ';');\n    },\n    billCard: function(no_mr, state) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'regis.billCard': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    billRegis: function(no_mr, idbayar, state) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'rawat.$.billRegis': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    bayar: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        'rawat.$.status_bayar': true\n      };\n      return coll.pasien.update(selector, {\n        $set: modifier\n      });\n    },\n    request: function(no_mr, idbayar, jenis, idjenis, hasil) {\n      var filtered, findPasien, findStock, give, i, j, k, key, len, len1, len2, len3, m, modifier, n, o, p, q, ref, ref1, ref2, ref3, ref4, selector, sortedEd, sortedIn;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      findPasien = coll.pasien.findOne(selector);\n      ref = findPasien.rawat;\n      for (m = 0, len = ref.length; m < len; m++) {\n        i = ref[m];\n        if (i.idbayar === idbayar) {\n          if (i[jenis]) {\n            ref1 = i[jenis];\n            for (n = 0, len1 = ref1.length; n < len1; n++) {\n              j = ref1[n];\n              if (j['id' + jenis] === idjenis) {\n                j.hasil = hasil;\n              }\n            }\n          }\n        }\n      }\n      modifier = {\n        rawat: findPasien.rawat\n      };\n      coll.pasien.update(selector, {\n        $set: modifier\n      });\n      give = {};\n      if (jenis === 'obat') {\n        ref2 = findPasien.rawat;\n        for (o = 0, len2 = ref2.length; o < len2; o++) {\n          i = ref2[o];\n          if (i.idbayar === idbayar) {\n            if (i.obat) {\n              ref3 = i.obat;\n              for (p = 0, len3 = ref3.length; p < len3; p++) {\n                j = ref3[p];\n                if (j.idobat === idjenis) {\n                  findStock = coll.gudang.findOne({\n                    _id: j.nama\n                  });\n                  for (k = q = 1, ref4 = j.jumlah; 1 <= ref4 ? q <= ref4 : q >= ref4; k = 1 <= ref4 ? ++q : --q) {\n                    filtered = _.filter(findStock.batch, function(l) {\n                      return l.diapotik > 0;\n                    });\n                    sortedIn = _.sortBy(filtered, function(l) {\n                      return new Date(l.masuk).getTime();\n                    });\n                    sortedEd = _.sortBy(sortedIn, function(l) {\n                      return new Date(l.kadaluarsa).getTime();\n                    });\n                    sortedEd[0].diapotik -= 1;\n                    key = findStock.nama(+';' + sortedEd[0].nobatch);\n                    give[key] || (give[key] = 0);\n                    give[key] += 1;\n                  }\n                  selector = {\n                    _id: findStock._id\n                  };\n                  modifier = {\n                    $set: {\n                      batch: findStock.batch\n                    }\n                  };\n                  coll.gudang.update(selector, modifier);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (jenis === 'obat') {\n        return give;\n      }\n    },\n    transfer: function(idbarang, idbatch, amount) {\n      var modifier, selector;\n      selector = {\n        idbarang: idbarang,\n        'batch.idbatch': idbatch\n      };\n      modifier = {\n        $inc: {\n          'batch.$.digudang': -amount,\n          'batch.$.diapotik': amount\n        }\n      };\n      return coll.gudang.update(selector, modifier);\n    },\n    rmPasien: function(no_mr) {\n      return coll.pasien.remove({\n        no_mr: parseInt(no_mr)\n      });\n    },\n    rmRawat: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $pull: {\n          rawat: {\n            idbayar: idbayar\n          }\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    addRole: function(id, roles, group, poli) {\n      var role;\n      role = poli || roles;\n      return Roles.addUsersToRoles(id, role, group);\n    },\n    rmRole: function(id) {\n      var modifier, selector;\n      selector = {\n        _id: id\n      };\n      modifier = {\n        $set: {\n          roles: {}\n        }\n      };\n      return Meteor.users.update(selector, modifier);\n    },\n    newUser: function(doc) {\n      var find;\n      find = Accounts.findUserByUsername(doc.username);\n      if (find) {\n        Accounts.setUsername(find._id, doc.username);\n        return Accounts.setPassword(find._id, doc.password);\n      } else {\n        return Accounts.createUser(doc);\n      }\n    },\n    rmBarang: function(idbarang) {\n      return coll.gudang.remove({\n        idbarang: idbarang\n      });\n    },\n    inactive: function(name, id) {\n      var mod, sel;\n      sel = {\n        _id: id\n      };\n      mod = {\n        $set: {\n          active: false\n        }\n      };\n      return coll[name].update(sel, mod);\n    },\n    pindah: function(no_mr) {\n      var find, last, modifier, ref, selector;\n      find = coll.pasien.findOne({\n        'no_mr': parseInt(no_mr)\n      });\n      ref = find.rawat, last = ref[ref.length - 1];\n      if (last.pindah) {\n        selector = {\n          _id: find._id\n        };\n        modifier = {\n          $push: {\n            rawat: {\n              idbayar: randomId(),\n              tanggal: new Date(),\n              cara_bayar: last.cara_bayar,\n              klinik: last.pindah,\n              billRegis: true,\n              total: {\n                semua: 0\n              }\n            }\n          }\n        };\n        return coll.pasien.update(selector, modifier);\n      }\n    },\n    report: function(jenis, start, end) {\n      var docs, filter, look, look2;\n      filter = function(arr) {\n        return _.filter(arr, function(i) {\n          var ref;\n          return (new Date(start) < (ref = new Date(i.tanggal)) && ref < new Date(end));\n        });\n      };\n      look = function(list, val) {\n        return _.find(selects[list], function(i) {\n          return i.value === val;\n        });\n      };\n      look2 = function(list, id) {\n        return _.find(coll[list].find().fetch(), function(i) {\n          return i._id === id;\n        });\n      };\n      docs = _.flatMap(coll.pasien.find().fetch(), function(i) {\n        return _.map(filter(i.rawat), function(j) {\n          var obj, pick;\n          obj = {\n            no_mr: i.no_mr,\n            nama_lengkap: _.startCase(i.regis.nama_lengkap),\n            no_bill: j.nobill,\n            cara_bayar: look('cara_bayar', j.cara_bayar).label,\n            rujukan: j.rujukan ? look('rujukan', j.rujukan).label : '',\n            klinik: look('klinik', j.klinik).label,\n            diagnosa: j.diagnosa || '-',\n            tindakan: _.flatMap(['tindakan', 'labor', 'radio'], function(k) {\n              var saring;\n              saring = _.filter(j[k], function(l) {\n                return l;\n              });\n              return _.map(saring, function(l) {\n                return '/' + _.startCase(look2('tarif', l.nama).nama);\n              });\n            }),\n            harga: 'Rp ' + j.total.semua,\n            petugas: Meteor.users.findOne({\n              _id: j.petugas\n            }).username,\n            keluar: j.keluar ? look('keluar', j.keluar).label : '-',\n            baru_lama: 'L'\n          };\n          if (jenis === 'pendaftaran') {\n            pick = _.pick(obj, ['no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']);\n          } else if (jenis === 'pembayaran') {\n            pick = _.pick(obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'tindakan', 'harga', 'petugas']);\n          } else if (jenis === 'rawat_jalan') {\n            pick = _.pick(obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']);\n          }\n          return pick;\n        });\n      });\n      return {\n        headers: _.map(_.keys(docs[0]), function(i) {\n          return _.startCase(i);\n        }),\n        rows: _.map(docs, function(i) {\n          return _.values(i);\n        }),\n        csv: docs\n      };\n    }\n  });\n}\n"]}
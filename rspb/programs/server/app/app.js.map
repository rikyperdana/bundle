{"version":3,"sources":["meteor://ðŸ’»app/folder/parent/funcs.coffee","meteor://ðŸ’»app/folder/parent/funcs.coffee.js","meteor://ðŸ’»app/folder/hooks.coffee","meteor://ðŸ’»app/folder/hooks.coffee.js","meteor://ðŸ’»app/folder/modules.coffee","meteor://ðŸ’»app/folder/pdf.coffee","meteor://ðŸ’»app/folder/pdf.coffee.js","meteor://ðŸ’»app/folder/rights.coffee","meteor://ðŸ’»app/folder/rights.coffee.js","meteor://ðŸ’»app/folder/selects.coffee","meteor://ðŸ’»app/folder/selects.coffee.js","meteor://ðŸ’»app/both.coffee","meteor://ðŸ’»app/both.coffee.js","meteor://ðŸ’»app/client.coffee","meteor://ðŸ’»app/client.coffee.js","meteor://ðŸ’»app/server.coffee","meteor://ðŸ’»app/server.coffee.js"],"names":["_","lodash","coll","schema","look","list","val","find","selects","i","value","look2","id","fetch","_id","randomId","Math","random","toString","slice","zeros","num","size","repeat","Meteor","isClient","AutoForm","setDefaultTemplate","currentRoute","Router","current","route","getName","currentPar","param","params","search","Session","get","formDoc","limit","page","roles","user","userGroup","name","userRole","tag","sessNull","map","tail","keys","set","modForm","doc","idbayar","begin","l","len","ref","stop","tanggal","Date","jenis","total","tindakan","labor","radio","obat","j","results","length","tarif","k","nama","harga","push","idobat","gudang","subtotal","jumlah","semua","reduce","values","acc","anamesa_perawat","anamesa_dokter","billRegis","cara_bayar","status_bayar","moment","spm","diff","petugas","userId","nobill","parseInt","now","substr","addHooks","before","call","result","after","insert","err","res","formToDoc","no_mr","Materialize","toast","$","idbarang","batch","idbatch","modules","full","icon","color","makePdf","card","pdf","pasien","findOne","pdfMake","createPdf","content","regis","nama_lengkap","pageSize","pageMargins","pageOrientation","download","consent","text","alignment","columns","tmpt_lahir","tgl_lahir","format","concat","label","table","body","startCase","username","payRawat","len1","m","ref1","ref2","ref3","rows","widths","kelamin","klinik","numeral","payRegCard","amount","words","rekap","strings","rights","group","rawat","pekerjaan","agama","pendidikan","darah","nikah","bentuk","tipe_dokter","rujukan","keluar","barang","satuan","anggaran","alias","x","karcis","selector","sub","subscribe","jalan","ready","dokter","snakeCase","poli","filter","arr","configure","layoutTemplate","loadingTemplate","action","render","type","Number","max","Object","optional","autoform","options","String","pickadateOptions","selectYears","selectMonths","autoValue","Boolean","fisik","tekanan_darah","nadi","suhu","decimal","pernapasan","berat","tinggi","lila","idtindakan","idlabor","hasil","idradio","puyer","aturan","Array","afFieldInput","SimpleSchema","assign","inap","igd","farmasi","logistik","tipe","grup","obj","active","Collection","allow","zipObject","waitOn","globalHelpers","indexOf","item","onBeforeAction","next","onAfterAction","uniq","flatMap","go","date","JSON","stringify","reverse","sel","sort","sortBy","getTime","a","b","option","field","end","apply","Template","registerHelper","events","event","term","key","target","layout","onRendered","menu","helpers","menus","initial","navTitle","today","logout","heads","bayar","previewDokter","previewLabor","previewRadio","previewObat","formType","umur","showButton","showButtonText","preview","omitFields","split","roleFilter","userPoli","insurance","selPol","pasiens","byName","byNoMR","elem","kliniks","past","selSub","fields","$options","$regex","$or","getDate","$elemMatch","$in","$gt","c","$ne","$exists","later","trigger","prepend","attr","checked","disabled","setTimeout","dialog","title","message","Confirmation","ok","nodes","attributes","nodeValue","MaterializeModal","prompt","callback","submit","flat","flatten","toPairs","headers","modal","self","template","Papa","parse","files","header","step","data","modifier","alamat","ayah","tmpt_kelahiran","password","role","beli","diapotik","digudang","jual","kadaluarsa","masuk","merek","nobatch","pengadaan","suplier","material_select","select","blob","Blob","saveAs","schemagudang","warning","getFullYear","getMonth","gudangs","aggr","byBatch","reduced","sum","n","akumulasi","manajemen","users","onUser","selRoles","schemadokter","schematarif","dokters","skip","tarifs","theRole","preventDefault","children","currentTarget","className","login","slider","loginWithPassword","pagination","innerText","report","datas","pickadate","onSet","start","exportcsv","exportToCSV","csv","isServer","startup","_ensureIndex","publish","methods","arrName","upsert","$set","update","$push","head","billCard","state","request","idjenis","filtered","findPasien","findStock","give","len2","len3","o","p","q","ref4","sortedEd","sortedIn","transfer","$inc","rmPasien","remove","rmRawat","$pull","addRole","Roles","addUsersToRoles","rmRole","newUser","Accounts","findUserByUsername","setUsername","setPassword","createUser","rmBarang","inactive","mod","pindah","last","docs","no_bill","diagnosa","saring","baru_lama","pick","patientExist"],"mappings":"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","file":"/app.js","sourcesContent":["@_ = lodash\n@coll = {}; @schema = {}\n@look = (list, val) -> _.find selects[list], (i) -> i.value is val\n@look2 = (list, id) -> _.find coll[list].find().fetch(), (i) -> i._id is id\n@randomId = -> Math.random().toString(36).slice(2)\n@zeros = (num) ->\n\tsize = _.size _.toString num\n\t'0'.repeat(6-size) + _.toString num\n\nif Meteor.isClient\n\n\t# SimpleSchema.debug = true\n\tAutoForm.setDefaultTemplate 'materialize'\n\t@currentRoute = -> Router.current().route.getName()\n\t@currentPar = (param) -> Router.current().params[param]\n\t@search = -> Session.get 'search'\n\t@formDoc = -> Session.get 'formDoc'\n\t@limit = -> Session.get 'limit'\n\t@page = -> Session.get 'page'\n\t@roles = -> Meteor.user().roles\n\t@userGroup = (name) -> roles()[name]\n\t@userRole = (name) -> roles()[currentRoute()][0] is name\n\t@tag = (tag, val) -> '<'+tag+'>'+val+'</'+tag+'>'\n\t@sessNull = -> _.map (_.tail _.keys Session.keys), (i) ->\n\t\tSession.set i, null\n","this._ = lodash;\n\nthis.coll = {};\n\nthis.schema = {};\n\nthis.look = function(list, val) {\n  return _.find(selects[list], function(i) {\n    return i.value === val;\n  });\n};\n\nthis.look2 = function(list, id) {\n  return _.find(coll[list].find().fetch(), function(i) {\n    return i._id === id;\n  });\n};\n\nthis.randomId = function() {\n  return Math.random().toString(36).slice(2);\n};\n\nthis.zeros = function(num) {\n  var size;\n  size = _.size(_.toString(num));\n  return '0'.repeat(6 - size) + _.toString(num);\n};\n\nif (Meteor.isClient) {\n  AutoForm.setDefaultTemplate('materialize');\n  this.currentRoute = function() {\n    return Router.current().route.getName();\n  };\n  this.currentPar = function(param) {\n    return Router.current().params[param];\n  };\n  this.search = function() {\n    return Session.get('search');\n  };\n  this.formDoc = function() {\n    return Session.get('formDoc');\n  };\n  this.limit = function() {\n    return Session.get('limit');\n  };\n  this.page = function() {\n    return Session.get('page');\n  };\n  this.roles = function() {\n    return Meteor.user().roles;\n  };\n  this.userGroup = function(name) {\n    return roles()[name];\n  };\n  this.userRole = function(name) {\n    return roles()[currentRoute()][0] === name;\n  };\n  this.tag = function(tag, val) {\n    return '<' + tag + '>' + val + '</' + tag + '>';\n  };\n  this.sessNull = function() {\n    return _.map(_.tail(_.keys(Session.keys)), function(i) {\n      return Session.set(i, null);\n    });\n  };\n}\n","if Meteor.isClient\n\n\t@modForm = (doc, idbayar) -> if currentRoute() is 'jalan'\n\t\tdoc.tanggal = new Date()\n\t\tdoc.idbayar = if idbayar then idbayar else randomId()\n\t\tdoc.jenis = currentRoute()\n\t\tdoc.total = tindakan: 0, labor: 0, radio: 0, obat: 0\n\t\t_.map ['tindakan', 'labor', 'radio'], (i) ->\n\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\tj['id'+i] = randomId()\n\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\tj.harga = find.harga\n\t\t\t\tdoc.total[i] += j.harga\n\t\tfor i in doc.obat?\n\t\t\ti.idobat = randomId()\n\t\t\tfind = _.find coll.gudang.find().fetch(), (k) -> k._id is i.nama\n\t\t\ti.harga = 0 # find.batch[find.batch.length-1].jual\n\t\t\ti.subtotal = i.harga * i.jumlah\n\t\t\tdoc.total.obat += i.subtotal\n\t\tdoc.total.semua = _.reduce _.values(doc.total), (acc, val) -> acc + val\n\t\tdoc.billRegis = true if doc.anamesa_perawat or doc.anamesa_dokter\n\t\tdoc.billRegis = true if doc.total.semua > 0 or doc.cara_bayar isnt 1\n\t\tdoc.status_bayar = true if doc.total.semua > 0 and doc.cara_bayar isnt 1\n\t\tif doc.obat and 0 is doc.total.semua\n\t\t\tdoc.billRegis = true\n\t\t\tdoc.status_bayar = true\n\t\tbegin = Session.get 'begin'; stop = moment()\n\t\tdoc.spm = stop.diff begin, 'minutes'\n\t\tdoc.petugas = Meteor.userId()\n\t\tdoc.nobill = parseInt _.toString(Date.now()).substr 7, 13\n\t\tdoc\n\n\tAutoForm.addHooks 'formPasien',\n\t\tbefore:\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tformDoc = Session.get 'formDoc'\n\t\t\t\tif formDoc then Meteor.call 'rmRawat', currentPar('no_mr'), formDoc.idbayar\n\t\t\t\tthis.result modForm doc\n\t\tafter:\n\t\t\tinsert: -> sessNull()\n\t\t\t'update-pushArray': (err, res) ->\n\t\t\t\tsessNull()\n\t\t\t\tif res then Meteor.call 'pindah', currentPar 'no_mr'\n\t\tformToDoc: (doc) ->\n\t\t\tSession.set 'preview', modForm doc\n\t\t\tif currentRoute() is 'regis'\n\t\t\t\tMeteor.call 'patientExist', doc.no_mr, (err, res) -> if res\n\t\t\t\t\tMaterialize.toast 'No MR sudah dipakai pasien yang lain', 3000\n\t\t\t\t\t$('input[name=\"no_mr\"]').val ''\n\t\t\tdoc\n\n\tAutoForm.addHooks 'formGudang',\n\t\tbefore:\n\t\t\tinsert: (doc) ->\n\t\t\t\tdoc.idbarang = randomId()\n\t\t\t\tdoc.batch[0].idbatch = randomId()\n\t\t\t\tthis.result doc\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tdoc.idbatch = randomId()\n\t\t\t\tthis.result doc\n","if (Meteor.isClient) {\n  this.modForm = function(doc, idbayar) {\n    var begin, find, i, l, len, ref, stop;\n    if (currentRoute() === 'jalan') {\n      doc.tanggal = new Date();\n      doc.idbayar = idbayar ? idbayar : randomId();\n      doc.jenis = currentRoute();\n      doc.total = {\n        tindakan: 0,\n        labor: 0,\n        radio: 0,\n        obat: 0\n      };\n      _.map(['tindakan', 'labor', 'radio'], function(i) {\n        var find, j, l, len, ref, results;\n        if (doc[i]) {\n          ref = doc[i];\n          results = [];\n          for (l = 0, len = ref.length; l < len; l++) {\n            j = ref[l];\n            j['id' + i] = randomId();\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            j.harga = find.harga;\n            results.push(doc.total[i] += j.harga);\n          }\n          return results;\n        }\n      });\n      ref = doc.obat != null;\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        i.idobat = randomId();\n        find = _.find(coll.gudang.find().fetch(), function(k) {\n          return k._id === i.nama;\n        });\n        i.harga = 0;\n        i.subtotal = i.harga * i.jumlah;\n        doc.total.obat += i.subtotal;\n      }\n      doc.total.semua = _.reduce(_.values(doc.total), function(acc, val) {\n        return acc + val;\n      });\n      if (doc.anamesa_perawat || doc.anamesa_dokter) {\n        doc.billRegis = true;\n      }\n      if (doc.total.semua > 0 || doc.cara_bayar !== 1) {\n        doc.billRegis = true;\n      }\n      if (doc.total.semua > 0 && doc.cara_bayar !== 1) {\n        doc.status_bayar = true;\n      }\n      if (doc.obat && 0 === doc.total.semua) {\n        doc.billRegis = true;\n        doc.status_bayar = true;\n      }\n      begin = Session.get('begin');\n      stop = moment();\n      doc.spm = stop.diff(begin, 'minutes');\n      doc.petugas = Meteor.userId();\n      doc.nobill = parseInt(_.toString(Date.now()).substr(7, 13));\n      return doc;\n    }\n  };\n  AutoForm.addHooks('formPasien', {\n    before: {\n      'update-pushArray': function(doc) {\n        var formDoc;\n        formDoc = Session.get('formDoc');\n        if (formDoc) {\n          Meteor.call('rmRawat', currentPar('no_mr'), formDoc.idbayar);\n        }\n        return this.result(modForm(doc));\n      }\n    },\n    after: {\n      insert: function() {\n        return sessNull();\n      },\n      'update-pushArray': function(err, res) {\n        sessNull();\n        if (res) {\n          return Meteor.call('pindah', currentPar('no_mr'));\n        }\n      }\n    },\n    formToDoc: function(doc) {\n      Session.set('preview', modForm(doc));\n      if (currentRoute() === 'regis') {\n        Meteor.call('patientExist', doc.no_mr, function(err, res) {\n          if (res) {\n            Materialize.toast('No MR sudah dipakai pasien yang lain', 3000);\n            return $('input[name=\"no_mr\"]').val('');\n          }\n        });\n      }\n      return doc;\n    }\n  });\n  AutoForm.addHooks('formGudang', {\n    before: {\n      insert: function(doc) {\n        doc.idbarang = randomId();\n        doc.batch[0].idbatch = randomId();\n        return this.result(doc);\n      },\n      'update-pushArray': function(doc) {\n        doc.idbatch = randomId();\n        return this.result(doc);\n      }\n    }\n  });\n}\n","@modules = [\n\tname: 'regis'\n\tfull: 'Pendaftaran'\n\ticon: 'people'\n\tcolor: 'orange'\n,\n\tname: 'bayar'\n\tfull: 'Pembayaran'\n\ticon: 'monetization_on'\n\tcolor: 'green'\n,\n\tname: 'jalan'\n\tfull: 'Rawat Jalan'\n\ticon: 'directions'\n\tcolor: 'blue'\n,\n\tname: 'igd'\n\tfull: 'IGD'\n\ticon: 'airport_shuttle'\n\tcolor: 'red'\n,\n\tname: 'inap'\n\tfull: 'Rawat Inap'\n\ticon: 'hotel'\n\tcolor: 'cyan'\n,\n\tname: 'labor'\n\tfull: 'Laboratorium'\n\ticon: 'wb_incandescent'\n\tcolor: 'amber'\n,\n\tname: 'radio'\n\tfull: 'Radiologi'\n\ticon: 'airline_seat_flat'\n\tcolor: 'indigo'\n,\n\tname: 'obat'\n\tfull: 'Apotek'\n\ticon: 'enhanced_encryption'\n\tcolor: 'light-green'\n,\n\tname: 'admisi'\n\tfull: 'Admisi'\n\ticon: 'assignment'\n\tcolor: 'purple'\n,\n\tname: 'rekam'\n\tfull: 'Rekam Medik'\n\ticon: 'content_copy'\n\tcolor: 'brown'\n,\n\tname: 'farmasi'\n\tfull: 'Gudang Farmasi'\n\ticon: 'local_pharmacy'\n\tcolor: 'orange'\n,\n\tname: 'logistik'\n\tfull: 'Gudang Logistik'\n\ticon: 'rv_hookup'\n\tcolor: 'blue-grey'\n,\n\tname: 'manajemen'\n\tfull: 'Manajemen'\n\ticon: 'people'\n\tcolor: 'orange'\n]\n","if Meteor.isClient\n\n\t@makePdf =\n\t\tcard: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t'Nama  : ' + doc.regis.nama_lengkap\n\t\t\t\t\t'No. MR: ' + zeros doc.no_mr\n\t\t\t\t]\n\t\t\t\tpageSize: 'B8'\n\t\t\t\tpageMargins: [110, 50, 0, 0]\n\t\t\t\tpageOrientation: 'landscape'\n\t\t\tpdf.download zeros(doc.no_mr) + '_card.pdf'\n\t\tconsent: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024', alignment: 'center'}\n\t\t\t\t\t{text: '\\nDATA UMUM PASIEN', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['NO. MR', 'NAMA LENGKAP', 'TEMPAT & TANGGAL LAHIR', 'GOLONGAN DARAH', 'JENIS KELAMIN', 'AGAMA', 'PENDIDIKAN', 'PEKERJAAN', 'NAMA AYAH', 'NAMA IBU', 'NAMA SUAMI / ISTRI', 'ALAMAT', 'NO. TELP / HP']\n\t\t\t\t\t\t_.map [\n\t\t\t\t\t\t\tzeros doc.no_mr\n\t\t\t\t\t\t\tdoc.regis.nama_lengkap\n\t\t\t\t\t\t\t(doc.regis.tmpt_lahir or '-') + ', ' + moment(doc.regis.tgl_lahir).format('D/MM/YYYY')\n\t\t\t\t\t\t\t(_.map ['darah', 'kelamin', 'agama', 'pendidikan', 'pekerjaan'], (i) ->\n\t\t\t\t\t\t\t\t(look(i, doc.regis[i])?.label or '-'))...\n\t\t\t\t\t\t\t(_.map ['ayah', 'ibu', 'pasangan', 'alamat', 'kontak'], (i) ->\n\t\t\t\t\t\t\t\t(doc.regis[i] or '-'))...\n\t\t\t\t\t\t], (i) -> ': ' + i\n\t\t\t\t\t]}\n\t\t\t\t\t{text: '\\nPERSETUJUAN UMUM (GENERAL CONSENT)', alignment: 'center'}\n\t\t\t\t\t{table: body: [\n\t\t\t\t\t\t['S', 'TS', {text: 'Keterangan', alignment: 'center'}]\n\t\t\t\t\t\t(_.map [\n\t\t\t\t\t\t\t['Saya akan mentaati peraturan yang berlaku di RSUD Petala Bumi']\n\t\t\t\t\t\t\t['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas']\n\t\t\t\t\t\t\t['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.']\n\t\t\t\t\t\t\t['Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat']\n\t\t\t\t\t\t\t['Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan']\n\t\t\t\t\t\t], (i) -> [' ', ' ', i...])...\n\t\t\t\t\t]}\n\t\t\t\t\t'\\nPetunjuk :'\n\t\t\t\t\t'S: Setuju'\n\t\t\t\t\t'TS: Tidak Setuju'\n\t\t\t\t\t{alignment: 'justify', columns: [\n\t\t\t\t\t\t{text: '\\n\\n\\n\\n__________________\\n'+(_.startCase Meteor.user().username), alignment: 'center'}\n\t\t\t\t\t\t{text: 'Pekanbaru, '+moment().format('DD/MM/YYYY')+'\\n\\n\\n\\n__________________\\n'+(_.startCase doc.regis.nama_lengkap), alignment: 'center'}\n\t\t\t\t\t]}\n\t\t\t\t]\n\t\t\tpdf.download zeros(doc.no_mr) + '_consent.pdf'\n\t\tpayRawat: (no_mr, doc) ->\n\t\t\tpasien = coll.pasien.findOne no_mr: parseInt no_mr\n\t\t\trows = [['Uraian', 'Harga']]\n\t\t\tfor i in ['tindakan', 'labor', 'radio']\n\t\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\t\trows.push [_.startCase(find.nama), _.toString(j.harga)]\n\t\t\ttable = table: widths: ['*', 'auto'], body: rows\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t{text: '\\nRINCIAN BIAYA RAWAT JALAN\\n', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['NO. MR', 'NAMA PASIEN', 'JENIS KELAMIN', 'TANGGAL LAHIR', 'UMUR', 'KLINIK']\n\t\t\t\t\t\t_.map [\n\t\t\t\t\t\t\tzeros pasien.no_mr\n\t\t\t\t\t\t\t_.startCase pasien.regis.nama_lengkap\n\t\t\t\t\t\t\t(look('kelamin', pasien.regis.kelamin)?.label or '-')\n\t\t\t\t\t\t\tmoment().format('D/MM/YYYY')\n\t\t\t\t\t\t\tmoment().diff(pasien.regis.tgl_lahir, 'years') + ' tahun'\n\t\t\t\t\t\t\t(look('klinik', doc.klinik)?.label or '-')\n\t\t\t\t\t\t], (i) -> ': ' + i\n\t\t\t\t\t]}\n\t\t\t\t\t{text: '\\n\\nRINCIAN PEMBAYARAN', alignment: 'center'}\n\t\t\t\t\ttable\n\t\t\t\t\t'\\nTOTAL BIAYA' + 'Rp ' + _.toString numeral(doc.total.semua).format('0,0')\n\t\t\t\t\t{text: '\\nPEKANBARU, ' + moment().format('D/MM/YYYY') +\n\t\t\t\t\t'\\n\\n\\n\\n\\n' + (_.startCase Meteor.user().username), alignment: 'right'}\n\t\t\t\t]\n\t\t\tpdf.download zeros(pasien.no_mr) + '_payRawat.pdf'\n\t\tpayRegCard: (no_mr, amount, words) ->\n\t\t\tdoc = coll.pasien.findOne no_mr: parseInt no_mr\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t{text: '\\n\\nKARCIS', alignment: 'center'}\n\t\t\t\t\t{columns: [\n\t\t\t\t\t\t['TANGGAL', 'NO. MR', 'NAMA PASIEN', 'TARIF', '\\n\\nPETUGAS']\n\t\t\t\t\t\t_.map [\n\t\t\t\t\t\t\tmoment().format('DD/MM/YYYY')\n\t\t\t\t\t\t\tzeros doc.no_mr\n\t\t\t\t\t\t\t_.startCase doc.regis.nama_lengkap\n\t\t\t\t\t\t\t'Rp ' + amount\n\t\t\t\t\t\t\t'\\n\\n' + _.startCase Meteor.user().username\n\t\t\t\t\t\t], (i) -> ': ' + i\n\t\t\t\t\t]}\n\t\t\t\t]\n\t\t\tpdf.download zeros(doc.no_mr) + '_payRegCard.pdf'\n\t\trekap: (rows) ->\n\t\t\tstrings = _.map rows, (i) -> _.map i, (j) -> _.toString j\n\t\t\tpdf = pdfMake.createPdf content: [table: body: strings]\n\t\t\tpdf.download 'rekap.pdf'\n","var slice = [].slice;\n\nif (Meteor.isClient) {\n  this.makePdf = {\n    card: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: ['Nama  : ' + doc.regis.nama_lengkap, 'No. MR: ' + zeros(doc.no_mr)],\n        pageSize: 'B8',\n        pageMargins: [110, 50, 0, 0],\n        pageOrientation: 'landscape'\n      });\n      return pdf.download(zeros(doc.no_mr) + '_card.pdf');\n    },\n    consent: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024',\n            alignment: 'center'\n          }, {\n            text: '\\nDATA UMUM PASIEN',\n            alignment: 'center'\n          }, {\n            columns: [\n              ['NO. MR', 'NAMA LENGKAP', 'TEMPAT & TANGGAL LAHIR', 'GOLONGAN DARAH', 'JENIS KELAMIN', 'AGAMA', 'PENDIDIKAN', 'PEKERJAAN', 'NAMA AYAH', 'NAMA IBU', 'NAMA SUAMI / ISTRI', 'ALAMAT', 'NO. TELP / HP'], _.map([zeros(doc.no_mr), doc.regis.nama_lengkap, (doc.regis.tmpt_lahir || '-') + ', ' + moment(doc.regis.tgl_lahir).format('D/MM/YYYY')].concat(slice.call(_.map(['darah', 'kelamin', 'agama', 'pendidikan', 'pekerjaan'], function(i) {\n                  var ref;\n                  return ((ref = look(i, doc.regis[i])) != null ? ref.label : void 0) || '-';\n                })), slice.call(_.map(['ayah', 'ibu', 'pasangan', 'alamat', 'kontak'], function(i) {\n                  return doc.regis[i] || '-';\n                }))), function(i) {\n                return ': ' + i;\n              })\n            ]\n          }, {\n            text: '\\nPERSETUJUAN UMUM (GENERAL CONSENT)',\n            alignment: 'center'\n          }, {\n            table: {\n              body: [[\n                  'S', 'TS', {\n                    text: 'Keterangan',\n                    alignment: 'center'\n                  }\n                ]].concat(slice.call(_.map([['Saya akan mentaati peraturan yang berlaku di RSUD Petala Bumi'], ['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas'], ['Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.'], ['Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat'], ['Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan']], function(i) {\n                  return [' ', ' '].concat(slice.call(i));\n                })))\n            }\n          }, '\\nPetunjuk :', 'S: Setuju', 'TS: Tidak Setuju', {\n            alignment: 'justify',\n            columns: [\n              {\n                text: '\\n\\n\\n\\n__________________\\n' + (_.startCase(Meteor.user().username)),\n                alignment: 'center'\n              }, {\n                text: 'Pekanbaru, ' + moment().format('DD/MM/YYYY') + '\\n\\n\\n\\n__________________\\n' + (_.startCase(doc.regis.nama_lengkap)),\n                alignment: 'center'\n              }\n            ]\n          }\n        ]\n      });\n      return pdf.download(zeros(doc.no_mr) + '_consent.pdf');\n    },\n    payRawat: function(no_mr, doc) {\n      var find, i, j, l, len, len1, m, pasien, pdf, ref, ref1, ref2, ref3, rows, table;\n      pasien = coll.pasien.findOne({\n        no_mr: parseInt(no_mr)\n      });\n      rows = [['Uraian', 'Harga']];\n      ref = ['tindakan', 'labor', 'radio'];\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        if (doc[i]) {\n          ref1 = doc[i];\n          for (m = 0, len1 = ref1.length; m < len1; m++) {\n            j = ref1[m];\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            rows.push([_.startCase(find.nama), _.toString(j.harga)]);\n          }\n        }\n      }\n      table = {\n        table: {\n          widths: ['*', 'auto'],\n          body: rows\n        }\n      };\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, {\n            text: '\\nRINCIAN BIAYA RAWAT JALAN\\n',\n            alignment: 'center'\n          }, {\n            columns: [\n              ['NO. MR', 'NAMA PASIEN', 'JENIS KELAMIN', 'TANGGAL LAHIR', 'UMUR', 'KLINIK'], _.map([zeros(pasien.no_mr), _.startCase(pasien.regis.nama_lengkap), ((ref2 = look('kelamin', pasien.regis.kelamin)) != null ? ref2.label : void 0) || '-', moment().format('D/MM/YYYY'), moment().diff(pasien.regis.tgl_lahir, 'years') + ' tahun', ((ref3 = look('klinik', doc.klinik)) != null ? ref3.label : void 0) || '-'], function(i) {\n                return ': ' + i;\n              })\n            ]\n          }, {\n            text: '\\n\\nRINCIAN PEMBAYARAN',\n            alignment: 'center'\n          }, table, '\\nTOTAL BIAYA' + 'Rp ' + _.toString(numeral(doc.total.semua).format('0,0')), {\n            text: '\\nPEKANBARU, ' + moment().format('D/MM/YYYY') + '\\n\\n\\n\\n\\n' + (_.startCase(Meteor.user().username)),\n            alignment: 'right'\n          }\n        ]\n      });\n      return pdf.download(zeros(pasien.no_mr) + '_payRawat.pdf');\n    },\n    payRegCard: function(no_mr, amount, words) {\n      var doc, pdf;\n      doc = coll.pasien.findOne({\n        no_mr: parseInt(no_mr)\n      });\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, {\n            text: '\\n\\nKARCIS',\n            alignment: 'center'\n          }, {\n            columns: [\n              ['TANGGAL', 'NO. MR', 'NAMA PASIEN', 'TARIF', '\\n\\nPETUGAS'], _.map([moment().format('DD/MM/YYYY'), zeros(doc.no_mr), _.startCase(doc.regis.nama_lengkap), 'Rp ' + amount, '\\n\\n' + _.startCase(Meteor.user().username)], function(i) {\n                return ': ' + i;\n              })\n            ]\n          }\n        ]\n      });\n      return pdf.download(zeros(doc.no_mr) + '_payRegCard.pdf');\n    },\n    rekap: function(rows) {\n      var pdf, strings;\n      strings = _.map(rows, function(i) {\n        return _.map(i, function(j) {\n          return _.toString(j);\n        });\n      });\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            table: {\n              body: strings\n            }\n          }\n        ]\n      });\n      return pdf.download('rekap.pdf');\n    }\n  };\n}\n","if Meteor.isClient\n\n\t@rights = [\n\t\tgroup: 'regis'\n\t\tlist: ['regis', 'jalan']\n\t,\n\t\tgroup: 'bayar'\n\t\tlist: ['bayar']\n\t,\n\t\tgroup: 'jalan'\n\t\tlist: ['jalan', 'farmasi']\n\t,\n\t\tgroup: 'inap'\n\t\tlist: ['inap', 'farmasi']\n\t,\n\t\tgroup: 'labor'\n\t\tlist: ['labor']\n\t,\n\t\tgroup: 'radio'\n\t\tlist: ['radio']\n\t,\n\t\tgroup: 'obat'\n\t\tlist: ['obat', 'farmasi']\n\t,\n\t\tgroup: 'rekam'\n\t\tlist: ['rekam', 'regis']\n\t,\n\t\tgroup: 'admisi'\n\t\tlist: ['admisi']\n\t,\n\t\tgroup: 'manajemen'\n\t\tlist: ['manajemen']\n\t,\n\t\tgroup: 'farmasi'\n\t\tlist: ['farmasi']\n\t]\n\n\t_.map rights, (i) ->\n\t\ti.list = [i.list..., 'panduan']\n\t\ti\n","var slice = [].slice;\n\nif (Meteor.isClient) {\n  this.rights = [\n    {\n      group: 'regis',\n      list: ['regis', 'jalan']\n    }, {\n      group: 'bayar',\n      list: ['bayar']\n    }, {\n      group: 'jalan',\n      list: ['jalan', 'farmasi']\n    }, {\n      group: 'inap',\n      list: ['inap', 'farmasi']\n    }, {\n      group: 'labor',\n      list: ['labor']\n    }, {\n      group: 'radio',\n      list: ['radio']\n    }, {\n      group: 'obat',\n      list: ['obat', 'farmasi']\n    }, {\n      group: 'rekam',\n      list: ['rekam', 'regis']\n    }, {\n      group: 'admisi',\n      list: ['admisi']\n    }, {\n      group: 'manajemen',\n      list: ['manajemen']\n    }, {\n      group: 'farmasi',\n      list: ['farmasi']\n    }\n  ];\n  _.map(rights, function(i) {\n    i.list = slice.call(i.list).concat(['panduan']);\n    return i;\n  });\n}\n","@selects =\n\trawat: ['Rawat Jalan', 'Rawat Inap', 'IGD']\n\tpekerjaan: ['PNS', 'BUMN/BUMD', 'TNI/Polri', 'Dokter', 'Karyawan Swasta', 'Wirausaha', 'Honorer', 'Pensiun', 'Petani', 'Buruh', 'Tidak Bekerja', 'Dan Lain-lain']\n\tkelamin: ['Laki-laki', 'Perempuan']\n\tagama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu']\n\tpendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah']\n\tdarah: ['A', 'B', 'C', 'AB', 'O']\n\tcara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free']\n\tnikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda']\n\tklinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio']\n\tbentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh']\n\ttipe_dokter: ['Umum', 'Spesialis']\n\trujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya']\n\tkeluar: ['Pulang', 'Rujuk']\n\tbarang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP']\n\tsatuan: ['Botol', 'Vial', 'Ampul', 'Pcs']\n\tanggaran: ['BLUD']\n\talias: ['Tn.', 'Ny.', 'Nn.', 'An.', 'By.']\n\n_.map (_.keys selects), (i) -> selects[i] = _.map selects[i], (j, x) -> label: j, value: x+1\n\nselects.karcis = _.map [15000, 20000, 25000, 30000, 40000], (i) -> value: i, label: 'Rp ' + i\n\nselects.tindakan = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\tselector = jenis: Meteor.user().roles.jalan[0]\n\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: _.startCase i.nama\n\nselects.dokter = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'dokter', {}, {}\n\tfind = _.find selects.klinik, (i) ->\n\t\tMeteor.user().roles.jalan[0] is _.snakeCase i.label\n\tselector = poli: find.value\n\tif sub.ready() then _.map coll.dokter.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: i.nama\n\nselects.obat = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\tfilter = (arr) -> _.filter arr, (i) -> i.jenis is 1\n\tif sub.ready() then _.map filter(coll.gudang.find().fetch()), (i) ->\n\t\tvalue: i._id, label: i.nama\n\n_.map ['labor', 'radio'], (i) ->\n\tselects[i] = -> if Meteor.isClient\n\t\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\t\tselector = jenis: i\n\t\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (j) ->\n\t\t\tvalue: j._id, label: _.startCase j.nama\n","this.selects = {\n  rawat: ['Rawat Jalan', 'Rawat Inap', 'IGD'],\n  pekerjaan: ['PNS', 'BUMN/BUMD', 'TNI/Polri', 'Dokter', 'Karyawan Swasta', 'Wirausaha', 'Honorer', 'Pensiun', 'Petani', 'Buruh', 'Tidak Bekerja', 'Dan Lain-lain'],\n  kelamin: ['Laki-laki', 'Perempuan'],\n  agama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu'],\n  pendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah'],\n  darah: ['A', 'B', 'C', 'AB', 'O'],\n  cara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free'],\n  nikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda'],\n  klinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio'],\n  bentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh'],\n  tipe_dokter: ['Umum', 'Spesialis'],\n  rujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya'],\n  keluar: ['Pulang', 'Rujuk'],\n  barang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP'],\n  satuan: ['Botol', 'Vial', 'Ampul', 'Pcs'],\n  anggaran: ['BLUD'],\n  alias: ['Tn.', 'Ny.', 'Nn.', 'An.', 'By.']\n};\n\n_.map(_.keys(selects), function(i) {\n  return selects[i] = _.map(selects[i], function(j, x) {\n    return {\n      label: j,\n      value: x + 1\n    };\n  });\n});\n\nselects.karcis = _.map([15000, 20000, 25000, 30000, 40000], function(i) {\n  return {\n    value: i,\n    label: 'Rp ' + i\n  };\n});\n\nselects.tindakan = function() {\n  var selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'tarif', {}, {});\n    selector = {\n      jenis: Meteor.user().roles.jalan[0]\n    };\n    if (sub.ready()) {\n      return _.map(coll.tarif.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: _.startCase(i.nama)\n        };\n      });\n    }\n  }\n};\n\nselects.dokter = function() {\n  var find, selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'dokter', {}, {});\n    find = _.find(selects.klinik, function(i) {\n      return Meteor.user().roles.jalan[0] === _.snakeCase(i.label);\n    });\n    selector = {\n      poli: find.value\n    };\n    if (sub.ready()) {\n      return _.map(coll.dokter.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\nselects.obat = function() {\n  var filter, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'gudang', {}, {});\n    filter = function(arr) {\n      return _.filter(arr, function(i) {\n        return i.jenis === 1;\n      });\n    };\n    if (sub.ready()) {\n      return _.map(filter(coll.gudang.find().fetch()), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\n_.map(['labor', 'radio'], function(i) {\n  return selects[i] = function() {\n    var selector, sub;\n    if (Meteor.isClient) {\n      sub = Meteor.subscribe('coll', 'tarif', {}, {});\n      selector = {\n        jenis: i\n      };\n      if (sub.ready()) {\n        return _.map(coll.tarif.find(selector).fetch(), function(j) {\n          return {\n            value: j._id,\n            label: _.startCase(j.nama)\n          };\n        });\n      }\n    }\n  };\n});\n","Router.configure\n\tlayoutTemplate: 'layout'\n\tloadingTemplate: 'loading'\n\nRouter.route '/',\n\taction: -> this.render 'home'\n\nschema.regis =\n\tno_mr: type: Number, max: 999999\n\tregis: type: Object\n\t'regis.alias': type: Number, optional: true, autoform: options: selects.alias, type: 'select-radio-inline'\n\t'regis.nama_lengkap': type: String\n\t'regis.tgl_lahir': type: Date, autoform: type: 'pickadate', pickadateOptions: selectYears: 150, selectMonths: true\n\t'regis.tmpt_lahir': type: String, optional: true\n\t'regis.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'regis.kelamin': type: Number, autoform: options: selects.kelamin, type: 'select-radio-inline'\n\t'regis.agama': type: Number, autoform: options: selects.agama, type: 'select-radio-inline'\n\t'regis.nikah': type: Number, autoform: options: selects.nikah, type: 'select-radio-inline'\n\t'regis.pendidikan': type: Number, optional: true, autoform: options: selects.pendidikan, type: 'select-radio-inline'\n\t'regis.darah': type: Number, optional: true, autoform: options: selects.darah, type: 'select-radio-inline'\n\t'regis.pekerjaan': type: Number, optional: true, autoform: options: selects.pekerjaan, type: 'select-radio-inline'\n\t'regis.kabupaten': type: String, optional: true\n\t'regis.kecamatan': type: String, optional: true\n\t'regis.kelurahan': type: String, optional: true\n\t'regis.alamat': type: String\n\t'regis.kontak': type: String, optional: true\n\t'regis.ayah': type: String, optional: true\n\t'regis.ibu': type: String, optional: true\n\t'regis.pasangan': type: String, optional: true\n\t'regis.petugas':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> if Meteor.isClient then Meteor.userId()\n\t'regis.date':\n\t\ttype: Date\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> new Date\n\t'regis.billCard': type: Boolean, optional: true, autoform: type: 'hidden'\n\nschema.fisik =\n\ttekanan_darah: type: String, optional: true\n\tnadi: type: Number, optional: true\n\tsuhu: type: Number, decimal: true, optional: true\n\tpernapasan: type: Number, optional: true\n\tberat: type: Number, optional: true\n\ttinggi: type: Number, optional: true\n\tlila: type: Number, optional: true\n\nschema.tindakan =\n\tidtindakan: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.tindakan, type: 'universe-select'\n\tdokter: type: String, autoform: options: selects.dokter\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\nschema.labor =\n\tidlabor: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.labor\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.radio =\n\tidradio: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.radio\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.obat =\n\tidobat: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.obat\n\tpuyer: type: String, optional: true\n\taturan: type: Object\n\t'aturan.kali': type: Number\n\t'aturan.dosis': type: Number\n\t'aturan.bentuk': type: Number, autoform: options: selects.bentuk\n\tjumlah: type: Number\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\tsubtotal: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.rawat =\n\tno_mr: type: Number\n\trawat: type: Array\n\t'rawat.$': type: Object\n\t'rawat.$.tanggal': type: Date, autoform: type: 'hidden'\n\t'rawat.$.idbayar': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.jenis': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'rawat.$.klinik': type: Number, autoform: options: selects.klinik, type: 'select-radio-inline'\n\t'rawat.$.karcis': type: Number, optional: true, autoform: options: selects.karcis, type: 'select-radio-inline'\n\t'rawat.$.rujukan': type: Number, optional: true, autoform: options: selects.rujukan, type: 'select-radio-inline'\n\t'rawat.$.billRegis': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.nobill': type: Number, autoform: type: 'hidden'\n\t'rawat.$.status_bayar': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.anamesa_perawat': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.fisik': optional: true, type: [new SimpleSchema schema.fisik]\n\t'rawat.$.anamesa_dokter': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.diagnosa': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.planning': type: String, optional: true, autoform: afFieldInput: type: 'textarea', rows: 6\n\t'rawat.$.tindakan': type: [new SimpleSchema schema.tindakan], optional: true\n\t'rawat.$.labor': type: [new SimpleSchema schema.labor], optional: true\n\t'rawat.$.radio': type: [new SimpleSchema schema.radio], optional: true\n\t'rawat.$.obat': type: [new SimpleSchema schema.obat], optional: true\n\t'rawat.$.total': type: Object, optional: true, autoform: type: 'hidden'\n\t'rawat.$.total.tindakan': type: Number, optional: true\n\t'rawat.$.total.labor': type: Number, optional: true\n\t'rawat.$.total.radio': type: Number, optional: true\n\t'rawat.$.total.obat': type: Number, optional: true\n\t'rawat.$.total.semua': type: Number, optional: true\n\t'rawat.$.spm': type: Number, optional: true, autoform: type: 'hidden'\n\t'rawat.$.pindah': type: Number, optional: true, autoform: options: selects.klinik\n\t'rawat.$.keluar': type: Number, optional: true, autoform: options: selects.keluar\n\t'rawat.$.petugas': type: String, autoform: type: 'hidden'\n\nschema.jalan = _.assign schema.rawat, {}\nschema.inap = _.assign schema.rawat, {}\nschema.igd = _.assign schema.rawat, {}\n\nschema.gudang =\n\tidbarang:\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\tjenis: type: Number, autoform: options: selects.barang\n\tnama: type: String\n\tbatch: type: Array\n\t'batch.$': type: Object\n\t'batch.$.idbatch':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\t'batch.$.nobatch': type: String\n\t'batch.$.merek': type: String\n\t'batch.$.satuan': type: Number, autoform: options: selects.satuan\n\t'batch.$.masuk': type: Date, autoform: type: 'pickadate'\n\t'batch.$.kadaluarsa': type: Date, autoform: type: 'pickadate'\n\t'batch.$.digudang': type: Number\n\t'batch.$.diapotik': type: Number\n\t'batch.$.beli': type: Number, decimal: true\n\t'batch.$.jual': type: Number, decimal: true\n\t'batch.$.suplier': type: String\n\t'batch.$.anggaran': type: Number, autoform: options: selects.anggaran\n\t'batch.$.pengadaan': type: Number\n\nschema.farmasi = _.assign schema.gudang, {}\nschema.logistik = _.assign schema.gudang, {}\n\nschema.dokter =\n\tnama: type: String\n\ttipe: type: Number, autoform: options: selects.tipe_dokter\n\tpoli: type: Number, autoform: options: selects.klinik\n\nschema.tarif =\n\tjenis: type: String\n\tnama: type: String\n\tharga: type: Number\n\tgrup: type: String, optional: true\n\n_.map ['dokter', 'tarif'], (i) ->\n\tobj = active:\n\t\ttype: Boolean\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> true\n\t_.assign schema[i], obj\n\n_.map ['pasien', 'gudang', 'dokter', 'tarif'], (i) ->\n\tcoll[i] = new Meteor.Collection i\n\tarr = ['insert', 'update', 'remove']\n\tcoll[i].allow _.zipObject arr, _.map arr, (i) -> -> true\n\n_.map modules[0..9], (i) ->\n\tRouter.route '/'+i.name+'/:no_mr?',\n\t\tname: i.name\n\t\taction: -> this.render 'pasien'\n\t\twaitOn: ->\n\t\t\t_.map ['dokter', 'tarif', 'gudang'], (j) ->\n\t\t\t\tMeteor.subscribe 'coll', j, {}, {}\n\n_.map modules[10..11], (i) ->\n\tRouter.route '/'+i.name+'/:idbarang?',\n\t\tname: i.name\n\t\taction: -> this.render 'gudang'\n\n_.map ['panduan'], (i) ->\n\tRouter.route '/' + i,\n\t\taction: -> this.render i\n\nRouter.route '/manajemen',\n\taction: -> this.render 'manajemen'\n\twaitOn: -> [\n\t\tMeteor.subscribe 'users'\n\t\tMeteor.subscribe 'coll', 'dokter', {}, {}\n\t\tMeteor.subscribe 'coll', 'tarif', {}, {}\n\t]\n\nRouter.route '/login', ->\n\taction: -> this.render 'login'\n","Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading'\n});\n\nRouter.route('/', {\n  action: function() {\n    return this.render('home');\n  }\n});\n\nschema.regis = {\n  no_mr: {\n    type: Number,\n    max: 999999\n  },\n  regis: {\n    type: Object\n  },\n  'regis.alias': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.alias,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.nama_lengkap': {\n    type: String\n  },\n  'regis.tgl_lahir': {\n    type: Date,\n    autoform: {\n      type: 'pickadate',\n      pickadateOptions: {\n        selectYears: 150,\n        selectMonths: true\n      }\n    }\n  },\n  'regis.tmpt_lahir': {\n    type: String,\n    optional: true\n  },\n  'regis.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kelamin': {\n    type: Number,\n    autoform: {\n      options: selects.kelamin,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.agama': {\n    type: Number,\n    autoform: {\n      options: selects.agama,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.nikah': {\n    type: Number,\n    autoform: {\n      options: selects.nikah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pendidikan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pendidikan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.darah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.darah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pekerjaan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pekerjaan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kabupaten': {\n    type: String,\n    optional: true\n  },\n  'regis.kecamatan': {\n    type: String,\n    optional: true\n  },\n  'regis.kelurahan': {\n    type: String,\n    optional: true\n  },\n  'regis.alamat': {\n    type: String\n  },\n  'regis.kontak': {\n    type: String,\n    optional: true\n  },\n  'regis.ayah': {\n    type: String,\n    optional: true\n  },\n  'regis.ibu': {\n    type: String,\n    optional: true\n  },\n  'regis.pasangan': {\n    type: String,\n    optional: true\n  },\n  'regis.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      if (Meteor.isClient) {\n        return Meteor.userId();\n      }\n    }\n  },\n  'regis.date': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return new Date;\n    }\n  },\n  'regis.billCard': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.fisik = {\n  tekanan_darah: {\n    type: String,\n    optional: true\n  },\n  nadi: {\n    type: Number,\n    optional: true\n  },\n  suhu: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  pernapasan: {\n    type: Number,\n    optional: true\n  },\n  berat: {\n    type: Number,\n    optional: true\n  },\n  tinggi: {\n    type: Number,\n    optional: true\n  },\n  lila: {\n    type: Number,\n    optional: true\n  }\n};\n\nschema.tindakan = {\n  idtindakan: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.tindakan,\n      type: 'universe-select'\n    }\n  },\n  dokter: {\n    type: String,\n    autoform: {\n      options: selects.dokter\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.labor = {\n  idlabor: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.labor\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.radio = {\n  idradio: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.radio\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.obat = {\n  idobat: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.obat\n    }\n  },\n  puyer: {\n    type: String,\n    optional: true\n  },\n  aturan: {\n    type: Object\n  },\n  'aturan.kali': {\n    type: Number\n  },\n  'aturan.dosis': {\n    type: Number\n  },\n  'aturan.bentuk': {\n    type: Number,\n    autoform: {\n      options: selects.bentuk\n    }\n  },\n  jumlah: {\n    type: Number\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  subtotal: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.rawat = {\n  no_mr: {\n    type: Number\n  },\n  rawat: {\n    type: Array\n  },\n  'rawat.$': {\n    type: Object\n  },\n  'rawat.$.tanggal': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.idbayar': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.jenis': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.klinik': {\n    type: Number,\n    autoform: {\n      options: selects.klinik,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.karcis': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.karcis,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.rujukan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.rujukan,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.billRegis': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.nobill': {\n    type: Number,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.status_bayar': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.anamesa_perawat': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.fisik': {\n    optional: true,\n    type: [new SimpleSchema(schema.fisik)]\n  },\n  'rawat.$.anamesa_dokter': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.diagnosa': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.planning': {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: 'textarea',\n        rows: 6\n      }\n    }\n  },\n  'rawat.$.tindakan': {\n    type: [new SimpleSchema(schema.tindakan)],\n    optional: true\n  },\n  'rawat.$.labor': {\n    type: [new SimpleSchema(schema.labor)],\n    optional: true\n  },\n  'rawat.$.radio': {\n    type: [new SimpleSchema(schema.radio)],\n    optional: true\n  },\n  'rawat.$.obat': {\n    type: [new SimpleSchema(schema.obat)],\n    optional: true\n  },\n  'rawat.$.total': {\n    type: Object,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.total.tindakan': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.labor': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.radio': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.obat': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.semua': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.spm': {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.pindah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.klinik\n    }\n  },\n  'rawat.$.keluar': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.keluar\n    }\n  },\n  'rawat.$.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.jalan = _.assign(schema.rawat, {});\n\nschema.inap = _.assign(schema.rawat, {});\n\nschema.igd = _.assign(schema.rawat, {});\n\nschema.gudang = {\n  idbarang: {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  jenis: {\n    type: Number,\n    autoform: {\n      options: selects.barang\n    }\n  },\n  nama: {\n    type: String\n  },\n  batch: {\n    type: Array\n  },\n  'batch.$': {\n    type: Object\n  },\n  'batch.$.idbatch': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  'batch.$.nobatch': {\n    type: String\n  },\n  'batch.$.merek': {\n    type: String\n  },\n  'batch.$.satuan': {\n    type: Number,\n    autoform: {\n      options: selects.satuan\n    }\n  },\n  'batch.$.masuk': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.kadaluarsa': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.digudang': {\n    type: Number\n  },\n  'batch.$.diapotik': {\n    type: Number\n  },\n  'batch.$.beli': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.jual': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.suplier': {\n    type: String\n  },\n  'batch.$.anggaran': {\n    type: Number,\n    autoform: {\n      options: selects.anggaran\n    }\n  },\n  'batch.$.pengadaan': {\n    type: Number\n  }\n};\n\nschema.farmasi = _.assign(schema.gudang, {});\n\nschema.logistik = _.assign(schema.gudang, {});\n\nschema.dokter = {\n  nama: {\n    type: String\n  },\n  tipe: {\n    type: Number,\n    autoform: {\n      options: selects.tipe_dokter\n    }\n  },\n  poli: {\n    type: Number,\n    autoform: {\n      options: selects.klinik\n    }\n  }\n};\n\nschema.tarif = {\n  jenis: {\n    type: String\n  },\n  nama: {\n    type: String\n  },\n  harga: {\n    type: Number\n  },\n  grup: {\n    type: String,\n    optional: true\n  }\n};\n\n_.map(['dokter', 'tarif'], function(i) {\n  var obj;\n  obj = {\n    active: {\n      type: Boolean,\n      autoform: {\n        type: 'hidden'\n      },\n      autoValue: function() {\n        return true;\n      }\n    }\n  };\n  return _.assign(schema[i], obj);\n});\n\n_.map(['pasien', 'gudang', 'dokter', 'tarif'], function(i) {\n  var arr;\n  coll[i] = new Meteor.Collection(i);\n  arr = ['insert', 'update', 'remove'];\n  return coll[i].allow(_.zipObject(arr, _.map(arr, function(i) {\n    return function() {\n      return true;\n    };\n  })));\n});\n\n_.map(modules.slice(0, 10), function(i) {\n  return Router.route('/' + i.name + '/:no_mr?', {\n    name: i.name,\n    action: function() {\n      return this.render('pasien');\n    },\n    waitOn: function() {\n      return _.map(['dokter', 'tarif', 'gudang'], function(j) {\n        return Meteor.subscribe('coll', j, {}, {});\n      });\n    }\n  });\n});\n\n_.map(modules.slice(10, 12), function(i) {\n  return Router.route('/' + i.name + '/:idbarang?', {\n    name: i.name,\n    action: function() {\n      return this.render('gudang');\n    }\n  });\n});\n\n_.map(['panduan'], function(i) {\n  return Router.route('/' + i, {\n    action: function() {\n      return this.render(i);\n    }\n  });\n});\n\nRouter.route('/manajemen', {\n  action: function() {\n    return this.render('manajemen');\n  },\n  waitOn: function() {\n    return [Meteor.subscribe('users'), Meteor.subscribe('coll', 'dokter', {}, {}), Meteor.subscribe('coll', 'tarif', {}, {})];\n  }\n});\n\nRouter.route('/login', function() {\n  return {\n    action: function() {\n      return this.render('login');\n    }\n  };\n});\n","if Meteor.isClient\n\n\tRouter.onBeforeAction ->\n\t\tunless Meteor.userId() then this.render 'login' else this.next()\n\tRouter.onAfterAction ->\n\t\tsessNull()\n\t\tRouter.go '/' unless currentRoute() in\n\t\t\t_.uniq _.flatMap _.keys(roles()), (i) ->\n\t\t\t\t_.find(rights, (j) -> j.group is i).list\n\n\tglobalHelpers = [\n\t\t['coll', -> coll]\n\t\t['schema', -> new SimpleSchema schema[currentRoute()]]\n\t\t['zeros', (num) -> zeros num]\n\t\t['showForm', -> Session.get 'showForm']\n\t\t['hari', (date) -> date and moment(date).format('D MMM YYYY')]\n\t\t['rupiah', (val) -> 'Rp ' + numeral(val).format('0,0')]\n\t\t['currentPar', (param) -> currentPar param]\n\t\t['stringify', (obj) -> JSON.stringify obj]\n\t\t['startCase', (val) -> _.startCase val]\n\t\t['modules', -> modules]\n\t\t['reverse', (arr) -> _.reverse arr]\n\t\t['sortBy', (arr, sel, sort) -> _.sortBy arr, (i) -> -i.tanggal.getTime()]\n\t\t['isTrue', (a, b) -> a is b]\n\t\t['isFalse', (a, b) -> a isnt b]\n\t\t['look', (option, value, field) -> look(option, value)[field]]\n\t\t['look2', (option, value, field) -> look2(option, value)[field]]\n\t\t['routeIs', (name) -> currentRoute() is name]\n\t\t['userGroup', (name) -> userGroup name]\n\t\t['userRole', (name) -> userRole name]\n\t\t['pagins', (name) ->\n\t\t\tlimit = Session.get 'limit'\n\t\t\tlength = coll[name].find().fetch().length\n\t\t\tend = (length - (length % limit)) / limit\n\t\t\t[1..end]\n\t\t]\n\t]\n\t_.map globalHelpers, (i) -> Template.registerHelper i...\n\n\tTemplate.body.events\n\t\t'keypress #search': (event) ->\n\t\t\tif event.key is 'Enter'\n\t\t\t\tterm = event.target.value\n\t\t\t\tif term.length > 2\n\t\t\t\t\tSession.set 'search', term\n\n\tTemplate.layout.onRendered ->\n\t\tSession.set 'limit', 10\n\t\tSession.set 'page', 0\n\n\tTemplate.menu.helpers\n\t\tmenus: ->\t\t\t\n\t\t\t_.initial _.flatMap _.keys(roles()), (i) ->\n\t\t\t\tfind = _.find rights, (j) -> j.group is i\n\t\t\t\t_.map find.list, (j) -> _.find modules, (k) -> k.name is j\n\t\tnavTitle: ->\n\t\t\tfind = _.find modules, (i) -> i.name is currentRoute()\n\t\t\tfind?.full or _.startCase currentRoute()\n\t\ttoday: -> moment().format('LLL')\n\n\tTemplate.menu.events\n\t\t'click #logout': -> Meteor.logout()\n\n\tTemplate.pasien.helpers\n\t\theads: ->\n\t\t\tpasien: ['No MR', 'Nama', 'Orang Tua', 'Alamat', 'Jenis Kelamin', 'Tgl Lahir']\n\t\t\tbayar: ['No MR', 'Nama', 'Tanggal', 'Total Biaya', 'Cara Bayar', 'Klinik', 'Aksi']\n\t\t\tlabor: ['No MR', 'Pasien', 'Grup', 'Order', 'Aksi']\n\t\t\tradio: ['No MR', 'Pasien', 'Order', 'Aksi']\n\t\t\tobat: ['No MR', 'Pasien', 'Nama Obat', 'Kali', 'Dosis', 'Bentuk', 'Jumlah', 'Serah']\n\t\t\trawat: ['Tanggal', 'Klinik', 'Cara Bayar', 'Bayar Pendaftaran', 'Bayar Tindakan', 'Cek']\n\t\t\tfisik: ['Tekanan Darah', 'Nadi', 'Suhu', 'Pernapasan', 'Berat', 'Tinggi', 'LILA']\n\t\t\tpreviewDokter: ['Tindakan', 'Dokter', 'Harga']\n\t\t\tpreviewLabor: ['Grup', 'Order', 'Hasil']\n\t\t\tpreviewRadio: ['Order', 'Arsip']\n\t\t\tpreviewObat: ['Nama', 'Dosis', 'Bentuk', 'Kali', 'Jumlah']\n\t\troute: -> currentRoute()\n\t\tformType: ->\n\t\t\tif currentRoute() is 'regis'\n\t\t\t\tif currentPar 'no_mr' then 'update' else 'insert'\n\t\t\telse\n\t\t\t\t'update-pushArray'\n\t\tumur: (date) -> moment().diff(date, 'years') + ' tahun'\n\t\tshowButton: -> Router.current().params.no_mr or currentRoute() is 'regis'\n\t\tshowButtonText: ->\n\t\t\tswitch currentRoute()\n\t\t\t\twhen 'regis' then '+ Pasien'\n\t\t\t\twhen 'jalan' then '+ Rawat'\n\t\tformDoc: -> formDoc()\n\t\tpreview: -> Session.get 'preview'\n\t\tomitFields: ->\n\t\t\tarr = ['anamesa_perawat', 'fisik', 'anamesa_dokter', 'diagnosa', 'planning', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah']\n\t\t\tunless formDoc() and formDoc().billRegis\n\t\t\t\tarr\n\t\t\telse unless _.split(Meteor.user().username, '.')[0] is 'dr'\n\t\t\t\tarr[2..arr.length]\n\t\troleFilter: (arr) -> _.reverse _.filter arr, (i) ->\n\t\t\tfind = _.find selects.klinik, (j) ->\n\t\t\t\tj.label is _.startCase roles().jalan[0]\n\t\t\ti.klinik is find.value\n\t\tuserPoli: -> roles().jalan\n\t\tinsurance: (val) -> 'Rp ' + numeral(val+30000).format('0,0')\n\t\tselPol: -> _.map roles().jalan, (i) ->\n\t\t\t_.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\tpasiens: ->\n\t\t\tif currentPar 'no_mr'\n\t\t\t\tselector = no_mr: parseInt currentPar 'no_mr'\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tarr = ['bayar', 'jalan', 'labor', 'radio', 'obat']\n\t\t\t\toptions.fields.rawat = 1 if currentRoute() in arr\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = 'regis.nama_lengkap': $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyNoMR = no_mr: parseInt search()\n\t\t\t\tselector = $or: [byName, byNoMR]\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if roles().jalan\n\t\t\t\tnow = new Date(); past = new Date now.getDate()-2\n\t\t\t\tkliniks = _.map roles().jalan, (i) ->\n\t\t\t\t\tfind = _.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\t\t\t\tfind.value\n\t\t\t\tselector = rawat: $elemMatch:\n\t\t\t\t\tklinik: $in: kliniks\n\t\t\t\t\ttanggal: $gt: past\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready()\n\t\t\t\t\tfilter = _.filter coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\t\ta = -> i.rawat[i.rawat.length-1].klinik in kliniks\n\t\t\t\t\t\tb = -> not i.rawat[i.rawat.length-1].total.semua\n\t\t\t\t\t\tselPol = Session.get 'selPol'\n\t\t\t\t\t\tc = -> i.rawat[i.rawat.length-1].klinik is selPol\n\t\t\t\t\t\tif selPol then b() and c() else a() and b()\n\t\t\t\t\t_.sortBy filter, (i) -> i.rawat[i.rawat.length-1].tanggal\n\t\t\telse if currentRoute() is 'bayar'\n\t\t\t\tselector = rawat: $elemMatch: $or: ['status_bayar': $ne: true]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if currentRoute() in ['labor', 'radio', 'obat']\n\t\t\t\telem = 'status_bayar': true\n\t\t\t\telem[currentRoute()] = $exists: true, $elemMatch: hasil: $exists: false\n\t\t\t\tselSub = rawat: $elemMatch: elem\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selSub, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\n\tTemplate.pasien.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t\tif userGroup 'regis' then Session.set 'formDoc', null\n\t\t\tlater = ->\n\t\t\t\t$('.autoform-remove-item').trigger 'click'\n\t\t\t\tif currentRoute() is 'jalan'\n\t\t\t\t\t_.map ['cara_bayar', 'klinik', 'karcis', 'rujukan'], (i) ->\n\t\t\t\t\t\t$('div[data-schema-key=\"'+i+'\"]').prepend tag 'p', _.startCase i\n\t\t\t\t\t\tif formDoc()\n\t\t\t\t\t\t\t$('input[name=\"'+i+'\"][value=\"'+formDoc()[i]+'\"]').attr checked: true\n\t\t\t\t\t\t\t$('input[name=\"'+i+'\"]').attr disabled: 'disabled'\n\t\t\t\t\t_.map ['anamesa_perawat'], (i) ->\n\t\t\t\t\t\t$('textarea[name=\"'+i+'\"]').val formDoc()[i]\n\t\t\t\tlist = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan']\n\t\t\t\tif currentRoute() is 'regis' then _.map list, (i) ->\n\t\t\t\t\t$('div[data-schema-key=\"regis.'+i+'\"]').prepend tag 'p', _.startCase i\n\t\t\tMeteor.setTimeout later, 1000\n\t\t\tMeteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\tSession.set 'begin', moment()\n\t\t'dblclick #row': ->\n\t\t\tRouter.go '/' + currentRoute() + '/' + this.no_mr\n\t\t'click #close': -> sessNull(); Router.go currentRoute()\n\t\t'click #card': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak Kartu'\n\t\t\t\tmessage: 'Yakin untuk cetak kartu ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\t# Meteor.call 'billCard', currentPar('no_mr'), true\n\t\t\t\tmakePdf.card()\n\t\t'click #consent': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak General Consent'\n\t\t\t\tmessage: 'Yakin untuk cetak persetujuan pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> makePdf.consent() if ok\n\t\t'dblclick #bill': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'karcis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Pembayaran Pendaftaran'\n\t\t\t\tmessage: 'Apakah yakin pasien sudah membayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tif nodes[1]\n\t\t\t\t\tMeteor.call 'billRegis', nodes[0..1]..., true\n\t\t\t\t\tmakePdf.payRegCard nodes[0], nodes[2], '...'\n\t\t\t\telse\n\t\t\t\t\tMeteor.call 'billCard', nodes[0], false\n\t\t\t\t\tmakePdf.payRegCard 10000, 'Sepuluh Ribu Rupiah'\n\t\t'dblclick #bayar': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Pembayaran'\n\t\t\t\tmessage: 'Apakah yakin tagihan ini sudah dibayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'bayar', nodes...\n\t\t\t\tpasien = coll.pasien.findOne no_mr: parseInt nodes[0]\n\t\t\t\tdoc = _.find pasien.rawat, (i) -> i.idbayar is nodes[1]\n\t\t\t\tmakePdf.payRawat nodes[0], doc\n\t\t'dblclick #request': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'jenis', 'idjenis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tMaterializeModal.prompt\n\t\t\t\tmessage: 'Isikan data requestnya'\n\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\tparams = ['request', nodes..., res.value]\n\t\t\t\t\tMeteor.call params..., (err, res) -> if res\n\t\t\t\t\t\tmessage = ''\n\t\t\t\t\t\tfor key, val of res\n\t\t\t\t\t\t\tmessage += tag 'p', key + ': ' + val\n\t\t\t\t\t\tMaterializeModal.message\n\t\t\t\t\t\t\ttitle: 'Penyerahan Obat'\n\t\t\t\t\t\t\tmessage: message\n\t\t\t\t\t\trekap = Session.get('rekap') or []\n\t\t\t\t\t\tflat = _.flatten _.toPairs res\n\t\t\t\t\t\tSession.set 'rekap', [rekap..., [nodes..., flat...]]\n\t\t'dblclick #rekap': ->\n\t\t\theaders = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah']\n\t\t\tmakePdf.rekap [headers, Session.get('rekap')...]\n\t\t\tSession.set 'rekap', null\n\t\t'click .modal-trigger': (event) ->\n\t\t\tif this.idbayar\n\t\t\t\tSession.set 'formDoc', this\n\t\t\t\tSession.set 'preview', modForm this, this.idbayar\n\t\t\t$('#preview').modal 'open'\n\t\t'click #rmRawat': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Hapus'\n\t\t\t\tmessage: 'Apakah yakin hapus data rawat pasien ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRawat', currentPar('no_mr'), self.idbayar\n\t\t'change #selPol': (event) ->\n\t\t\tSession.set 'selPol', parseInt event.target.id\n\t\t'click #rmPasien': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Pasien'\n\t\t\t\tmessage: 'Apakah yakin untuk menghapus pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmPasien', currentPar 'no_mr'\n\t\t\t\tRouter.go '/' + currentRoute()\n\n\tTemplate.import.events\n\t\t'change :file': (event, template) ->\n\t\t\tPapa.parse event.target.files[0],\n\t\t\t\theader: true\n\t\t\t\tstep: (result) ->\n\t\t\t\t\tdata = result.data[0]\n\t\t\t\t\tif currentRoute() is 'regis'\n\t\t\t\t\t\tselector = no_mr: parseInt data.no_mr\n\t\t\t\t\t\tmodifier = regis:\n\t\t\t\t\t\t\tnama_lengkap: _.startCase data.nama_lengkap\n\t\t\t\t\t\t\talamat: _.startCase data.alamat\n\t\t\t\t\t\t\tagama: parseInt data.agama if data.agama\n\t\t\t\t\t\t\tayah: _.startCase data.ayah if data.ayah\n\t\t\t\t\t\t\tnikah: parseInt data.nikah if data.nikah\n\t\t\t\t\t\t\tpekerjaan: parseInt data.pekerjaan if data.pekerjaan\n\t\t\t\t\t\t\tpendidikan: parseInt data.pendidikan if data.pendidikan\n\t\t\t\t\t\t\ttgl_lahir: new Date date.tgl_lahir if Date.parse data.tgl_lahir\n\t\t\t\t\t\t\ttmpt_kelahiran: _.startCase data.tmpt_kelahiran if data.tmpt_kelahiran\n\t\t\t\t\t\tMeteor.call 'import', 'pasien', selector, modifier\n\t\t\t\t\telse if currentRoute() is 'manajemen'\n\t\t\t\t\t\tif data.tipe\n\t\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\ttipe: parseInt data.tipe\n\t\t\t\t\t\t\t\tpoli: parseInt data.poli\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tMeteor.call 'import', 'dokter', selector, modifier\n\t\t\t\t\t\telse if data.harga\n\t\t\t\t\t\t\tselector = nama: _.snakeCase data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\tharga: parseInt data.harga\n\t\t\t\t\t\t\t\tjenis: _.snakeCase data.jenis\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tdata.grup and modifier.grup = _.startCase data.grup\n\t\t\t\t\t\t\tMeteor.call 'import', 'tarif', selector, modifier\n\t\t\t\t\t\telse if data.password\n\t\t\t\t\t\t\tMeteor.call 'newUser', data\n\t\t\t\t\t\t\tMeteor.call 'addRole', data.username, [data.role], data.group\n\t\t\t\t\telse if currentRoute() is 'farmasi'\n\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\tidbarang: randomId()\n\t\t\t\t\t\t\tbatch: [\n\t\t\t\t\t\t\t\tidbatch: randomId()\n\t\t\t\t\t\t\t\tanggaran: data.anggaran\n\t\t\t\t\t\t\t\tbeli: parseInt data.beli\n\t\t\t\t\t\t\t\tdiapotik: parseInt data.diapotik\n\t\t\t\t\t\t\t\tdigudang: parseInt data.digudang\n\t\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\t\tjual: parseInt data.jual\n\t\t\t\t\t\t\t\tkadaluarsa: new Date data.kadaluarsa\n\t\t\t\t\t\t\t\tmasuk: new Date data.masuk\n\t\t\t\t\t\t\t\tmerek: data.merek or ''\n\t\t\t\t\t\t\t\tnobatch: data.nobatch\n\t\t\t\t\t\t\t\tpengadaan: parseInt data.pengadaan\n\t\t\t\t\t\t\t\tsatuan: parseInt data.satuan\n\t\t\t\t\t\t\t\tsuplier: data.suplier\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\tdata.nama and Meteor.call 'import', 'gudang', selector, modifier, 'batch'\n\n\tTemplate.export.onRendered ->\n\t\t$('select#export').material_select()\n\n\tTemplate.export.events\n\t\t'click #export': ->\n\t\t\tselect = $('select#export').val()\n\t\t\tMeteor.call 'export', select, (err, content) -> if content\n\t\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\t\tsaveAs blob, select+'.csv'\n\n\tTemplate.gudang.helpers\n\t\theads: ->\n\t\t\tbarang: ['Jenis Barang', 'Nama Barang', 'Di Gudang', 'Di Apotik']\n\t\t\tbatch: ['No Batch', 'Masuk', 'Kadaluarsa', 'Beli', 'Jual', 'Di Gudang', 'Di Apotik', 'Suplier']\n\t\tschemagudang: -> new SimpleSchema schema.gudang\n\t\tformType: -> if currentPar('idbarang') then 'update-pushArray' else 'insert'\n\t\twarning: (date) ->\n\t\t\tdiff = ((new Date).getFullYear() - date.getFullYear())*12 - ((new Date).getMonth() - date.getMonth())\n\t\t\tswitch\n\t\t\t\twhen diff < 2 then 'red'\n\t\t\t\twhen diff < 7 then 'orange'\n\t\t\t\twhen diff < 13 then 'yellow'\n\t\t\t\telse 'green'\n\t\tgudangs: ->\n\t\t\taggr = (i) -> _.map i, (j) ->\n\t\t\t\treduced = (name) -> _.reduce j.batch, ((sum, n) -> sum + n[name]), 0\n\t\t\t\tj.akumulasi = digudang: reduced('digudang'), diapotik: reduced('diapotik')\n\t\t\t\tj\n\t\t\tif currentPar 'idbarang'\n\t\t\t\tselector = idbarang: currentPar 'idbarang'\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tif sub.ready() then coll.gudang.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = nama: $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyBatch = idbatch: search()\n\t\t\t\tselector = $or: [byName, byBatch]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tsub.ready() and aggr coll.gudang.find().fetch()\n\t\t\telse\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\t\tsub.ready() and aggr coll.gudang.find().fetch()\n\n\tTemplate.gudang.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t'dblclick #row': -> Router.go '/' + currentRoute() + '/' + this.idbarang\n\t\t'dblclick #transfer': ->\n\t\t\tdata = this\n\t\t\tif roles().farmasi\n\t\t\t\tMaterializeModal.prompt\n\t\t\t\t\tmessage: 'Transfer Gudang > Apotek'\n\t\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\t\tMeteor.call 'transfer', currentPar('idbarang'), data.idbatch, parseInt res.value\n\t\t'click #rmBarang': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Jenis Obat'\n\t\t\t\tmessage: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmBarang', self.idbarang\n\n\tTemplate.manajemen.helpers\n\t\tusers: -> Meteor.users.find().fetch()\n\t\tonUser: -> Session.get 'onUser'\n\t\tselRoles: -> ['petugas', 'admin']\n\t\tklinik: -> selects.klinik\n\t\tschemadokter: -> new SimpleSchema schema.dokter\n\t\tschematarif: -> new SimpleSchema schema.tarif\n\t\tdokters: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.dokter.find(selector, options).fetch()\n\t\ttarifs: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.tarif.find(selector, options).fetch()\n\n\tTemplate.manajemen.events\n\t\t'submit #userForm': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tonUser = Session.get 'onUser'\n\t\t\tunless onUser\n\t\t\t\tdoc =\n\t\t\t\t\tusername: event.target.children.username.value\n\t\t\t\t\tpassword: event.target.children.password.value\n\t\t\t\trepeat = event.target.children.repeat.value\n\t\t\t\tif doc.password is repeat\n\t\t\t\t\tMeteor.call 'newUser', doc\n\t\t\t\t\t$('input').val ''\n\t\t\t\telse\n\t\t\t\t\tMaterialize.toast 'Password tidak mirip', 3000\n\t\t\telse\n\t\t\t\trole = $('input[name=\"role\"]:checked', event.target)[0].id\n\t\t\t\tgroup = $('input[name=\"group\"]:checked', event.target)[0].id\n\t\t\t\tpoli = $('input[name=\"poli\"]:checked', event.target)[0]\n\t\t\t\ttheRole = unless poli then role else _.snakeCase poli.id\n\t\t\t\tMeteor.call 'addRole', onUser._id, [theRole], group\n\t\t'dblclick #row': -> Session.set 'onUser', this\n\t\t'dblclick #reset': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Reset Peranan'\n\t\t\t\tmessage: 'Anda yakin untuk menghapus semua perannya?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRole', self._id\n\t\t'click #close': -> sessNull()\n\t\t'dblclick #baris': (event) ->\n\t\t\tjenis = event.currentTarget.className\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus ' + _.startCase jenis\n\t\t\t\tmessage: 'Yakin untuk menghapus '+jenis+' dari daftar?'\n\t\t\tself = this\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'inactive', jenis, self._id\n\n\tTemplate.login.onRendered ->\n\t\t$('.slider').slider()\n\n\tTemplate.login.events\n\t\t'submit form': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tusername = event.target.children.username.value\n\t\t\tpassword = event.target.children.password.value\n\t\t\tMeteor.loginWithPassword username, password, (err) ->\n\t\t\t\tif err\n\t\t\t\t\tMaterialize.toast 'Salah username / password', 3000\n\t\t\t\telse\n\t\t\t\t\tRouter.go '/' + _.keys(roles())[0]\n\n\tTemplate.pagination.events\n\t\t'click #next': -> Session.set 'page', 1 + page()\n\t\t'click #prev': -> Session.set 'page', -1 + page()\n\t\t'click #num': (event) ->\n\t\t\tSession.set 'page', parseInt event.target.innerText\n\n\tTemplate.report.helpers\n\t\tdatas: -> Session.get 'laporan'\n\n\tTemplate.report.events\n\t\t'click .datepicker': (event, template) ->\n\t\t\ttype = event.target.attributes.date.nodeValue\n\t\t\t$('#'+type).pickadate onSet: (data) ->\n\t\t\t\tSession.set type+'Date', data.select\n\t\t\t\tstart = Session.get 'startDate'\n\t\t\t\tend = Session.get 'endDate'\n\t\t\t\tif start and end\n\t\t\t\t\tMeteor.call 'report', template.data.jenis, start, end, (err, res) ->\n\t\t\t\t\t\tres and Session.set 'laporan', res\n\t\t'click #export': (event, template) ->\n\t\t\tcontent = exportcsv.exportToCSV Session.get('laporan').csv, true, ';'\n\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\tsaveAs blob, template.data.jenis+'.csv'\n","var globalHelpers,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  slice = [].slice;\n\nif (Meteor.isClient) {\n  Router.onBeforeAction(function() {\n    if (!Meteor.userId()) {\n      return this.render('login');\n    } else {\n      return this.next();\n    }\n  });\n  Router.onAfterAction(function() {\n    var ref;\n    sessNull();\n    if (ref = currentRoute(), indexOf.call(_.uniq(_.flatMap(_.keys(roles()), function(i) {\n      return _.find(rights, function(j) {\n        return j.group === i;\n      }).list;\n    })), ref) < 0) {\n      return Router.go('/');\n    }\n  });\n  globalHelpers = [\n    [\n      'coll', function() {\n        return coll;\n      }\n    ], [\n      'schema', function() {\n        return new SimpleSchema(schema[currentRoute()]);\n      }\n    ], [\n      'zeros', function(num) {\n        return zeros(num);\n      }\n    ], [\n      'showForm', function() {\n        return Session.get('showForm');\n      }\n    ], [\n      'hari', function(date) {\n        return date && moment(date).format('D MMM YYYY');\n      }\n    ], [\n      'rupiah', function(val) {\n        return 'Rp ' + numeral(val).format('0,0');\n      }\n    ], [\n      'currentPar', function(param) {\n        return currentPar(param);\n      }\n    ], [\n      'stringify', function(obj) {\n        return JSON.stringify(obj);\n      }\n    ], [\n      'startCase', function(val) {\n        return _.startCase(val);\n      }\n    ], [\n      'modules', function() {\n        return modules;\n      }\n    ], [\n      'reverse', function(arr) {\n        return _.reverse(arr);\n      }\n    ], [\n      'sortBy', function(arr, sel, sort) {\n        return _.sortBy(arr, function(i) {\n          return -i.tanggal.getTime();\n        });\n      }\n    ], [\n      'isTrue', function(a, b) {\n        return a === b;\n      }\n    ], [\n      'isFalse', function(a, b) {\n        return a !== b;\n      }\n    ], [\n      'look', function(option, value, field) {\n        return look(option, value)[field];\n      }\n    ], [\n      'look2', function(option, value, field) {\n        return look2(option, value)[field];\n      }\n    ], [\n      'routeIs', function(name) {\n        return currentRoute() === name;\n      }\n    ], [\n      'userGroup', function(name) {\n        return userGroup(name);\n      }\n    ], [\n      'userRole', function(name) {\n        return userRole(name);\n      }\n    ], [\n      'pagins', function(name) {\n        var end, l, length, limit, results;\n        limit = Session.get('limit');\n        length = coll[name].find().fetch().length;\n        end = (length - (length % limit)) / limit;\n        return (function() {\n          results = [];\n          for (var l = 1; 1 <= end ? l <= end : l >= end; 1 <= end ? l++ : l--){ results.push(l); }\n          return results;\n        }).apply(this);\n      }\n    ]\n  ];\n  _.map(globalHelpers, function(i) {\n    return Template.registerHelper.apply(Template, i);\n  });\n  Template.body.events({\n    'keypress #search': function(event) {\n      var term;\n      if (event.key === 'Enter') {\n        term = event.target.value;\n        if (term.length > 2) {\n          return Session.set('search', term);\n        }\n      }\n    }\n  });\n  Template.layout.onRendered(function() {\n    Session.set('limit', 10);\n    return Session.set('page', 0);\n  });\n  Template.menu.helpers({\n    menus: function() {\n      return _.initial(_.flatMap(_.keys(roles()), function(i) {\n        var find;\n        find = _.find(rights, function(j) {\n          return j.group === i;\n        });\n        return _.map(find.list, function(j) {\n          return _.find(modules, function(k) {\n            return k.name === j;\n          });\n        });\n      }));\n    },\n    navTitle: function() {\n      var find;\n      find = _.find(modules, function(i) {\n        return i.name === currentRoute();\n      });\n      return (find != null ? find.full : void 0) || _.startCase(currentRoute());\n    },\n    today: function() {\n      return moment().format('LLL');\n    }\n  });\n  Template.menu.events({\n    'click #logout': function() {\n      return Meteor.logout();\n    }\n  });\n  Template.pasien.helpers({\n    heads: function() {\n      return {\n        pasien: ['No MR', 'Nama', 'Orang Tua', 'Alamat', 'Jenis Kelamin', 'Tgl Lahir'],\n        bayar: ['No MR', 'Nama', 'Tanggal', 'Total Biaya', 'Cara Bayar', 'Klinik', 'Aksi'],\n        labor: ['No MR', 'Pasien', 'Grup', 'Order', 'Aksi'],\n        radio: ['No MR', 'Pasien', 'Order', 'Aksi'],\n        obat: ['No MR', 'Pasien', 'Nama Obat', 'Kali', 'Dosis', 'Bentuk', 'Jumlah', 'Serah'],\n        rawat: ['Tanggal', 'Klinik', 'Cara Bayar', 'Bayar Pendaftaran', 'Bayar Tindakan', 'Cek'],\n        fisik: ['Tekanan Darah', 'Nadi', 'Suhu', 'Pernapasan', 'Berat', 'Tinggi', 'LILA'],\n        previewDokter: ['Tindakan', 'Dokter', 'Harga'],\n        previewLabor: ['Grup', 'Order', 'Hasil'],\n        previewRadio: ['Order', 'Arsip'],\n        previewObat: ['Nama', 'Dosis', 'Bentuk', 'Kali', 'Jumlah']\n      };\n    },\n    route: function() {\n      return currentRoute();\n    },\n    formType: function() {\n      if (currentRoute() === 'regis') {\n        if (currentPar('no_mr')) {\n          return 'update';\n        } else {\n          return 'insert';\n        }\n      } else {\n        return 'update-pushArray';\n      }\n    },\n    umur: function(date) {\n      return moment().diff(date, 'years') + ' tahun';\n    },\n    showButton: function() {\n      return Router.current().params.no_mr || currentRoute() === 'regis';\n    },\n    showButtonText: function() {\n      switch (currentRoute()) {\n        case 'regis':\n          return '+ Pasien';\n        case 'jalan':\n          return '+ Rawat';\n      }\n    },\n    formDoc: function() {\n      return formDoc();\n    },\n    preview: function() {\n      return Session.get('preview');\n    },\n    omitFields: function() {\n      var arr;\n      arr = ['anamesa_perawat', 'fisik', 'anamesa_dokter', 'diagnosa', 'planning', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah'];\n      if (!(formDoc() && formDoc().billRegis)) {\n        return arr;\n      } else if (_.split(Meteor.user().username, '.')[0] !== 'dr') {\n        return arr.slice(2, +arr.length + 1 || 9e9);\n      }\n    },\n    roleFilter: function(arr) {\n      return _.reverse(_.filter(arr, function(i) {\n        var find;\n        find = _.find(selects.klinik, function(j) {\n          return j.label === _.startCase(roles().jalan[0]);\n        });\n        return i.klinik === find.value;\n      }));\n    },\n    userPoli: function() {\n      return roles().jalan;\n    },\n    insurance: function(val) {\n      return 'Rp ' + numeral(val + 30000).format('0,0');\n    },\n    selPol: function() {\n      return _.map(roles().jalan, function(i) {\n        return _.find(selects.klinik, function(j) {\n          return i === _.snakeCase(j.label);\n        });\n      });\n    },\n    pasiens: function() {\n      var arr, byName, byNoMR, elem, filter, kliniks, now, options, past, ref, ref1, selSub, selector, sub;\n      if (currentPar('no_mr')) {\n        selector = {\n          no_mr: parseInt(currentPar('no_mr'))\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        arr = ['bayar', 'jalan', 'labor', 'radio', 'obat'];\n        if (ref = currentRoute(), indexOf.call(arr, ref) >= 0) {\n          options.fields.rawat = 1;\n        }\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          'regis.nama_lengkap': {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byNoMR = {\n          no_mr: parseInt(search())\n        };\n        selector = {\n          $or: [byName, byNoMR]\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if (roles().jalan) {\n        now = new Date();\n        past = new Date(now.getDate() - 2);\n        kliniks = _.map(roles().jalan, function(i) {\n          var find;\n          find = _.find(selects.klinik, function(j) {\n            return i === _.snakeCase(j.label);\n          });\n          return find.value;\n        });\n        selector = {\n          rawat: {\n            $elemMatch: {\n              klinik: {\n                $in: kliniks\n              },\n              tanggal: {\n                $gt: past\n              }\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          filter = _.filter(coll.pasien.find().fetch(), function(i) {\n            var a, b, c, selPol;\n            a = function() {\n              var ref1;\n              return ref1 = i.rawat[i.rawat.length - 1].klinik, indexOf.call(kliniks, ref1) >= 0;\n            };\n            b = function() {\n              return !i.rawat[i.rawat.length - 1].total.semua;\n            };\n            selPol = Session.get('selPol');\n            c = function() {\n              return i.rawat[i.rawat.length - 1].klinik === selPol;\n            };\n            if (selPol) {\n              return b() && c();\n            } else {\n              return a() && b();\n            }\n          });\n          return _.sortBy(filter, function(i) {\n            return i.rawat[i.rawat.length - 1].tanggal;\n          });\n        }\n      } else if (currentRoute() === 'bayar') {\n        selector = {\n          rawat: {\n            $elemMatch: {\n              $or: [\n                {\n                  'status_bayar': {\n                    $ne: true\n                  }\n                }\n              ]\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if ((ref1 = currentRoute()) === 'labor' || ref1 === 'radio' || ref1 === 'obat') {\n        elem = {\n          'status_bayar': true\n        };\n        elem[currentRoute()] = {\n          $exists: true,\n          $elemMatch: {\n            hasil: {\n              $exists: false\n            }\n          }\n        };\n        selSub = {\n          rawat: {\n            $elemMatch: elem\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selSub, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      }\n    }\n  });\n  Template.pasien.events({\n    'click #showForm': function() {\n      var later;\n      Session.set('showForm', !Session.get('showForm'));\n      if (userGroup('regis')) {\n        Session.set('formDoc', null);\n      }\n      later = function() {\n        var list;\n        $('.autoform-remove-item').trigger('click');\n        if (currentRoute() === 'jalan') {\n          _.map(['cara_bayar', 'klinik', 'karcis', 'rujukan'], function(i) {\n            $('div[data-schema-key=\"' + i + '\"]').prepend(tag('p', _.startCase(i)));\n            if (formDoc()) {\n              $('input[name=\"' + i + '\"][value=\"' + formDoc()[i] + '\"]').attr({\n                checked: true\n              });\n              return $('input[name=\"' + i + '\"]').attr({\n                disabled: 'disabled'\n              });\n            }\n          });\n          _.map(['anamesa_perawat'], function(i) {\n            return $('textarea[name=\"' + i + '\"]').val(formDoc()[i]);\n          });\n        }\n        list = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan'];\n        if (currentRoute() === 'regis') {\n          return _.map(list, function(i) {\n            return $('div[data-schema-key=\"regis.' + i + '\"]').prepend(tag('p', _.startCase(i)));\n          });\n        }\n      };\n      Meteor.setTimeout(later, 1000);\n      Meteor.subscribe('coll', 'gudang', {}, {});\n      return Session.set('begin', moment());\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.no_mr);\n    },\n    'click #close': function() {\n      sessNull();\n      return Router.go(currentRoute());\n    },\n    'click #card': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak Kartu',\n        message: 'Yakin untuk cetak kartu ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.card();\n        }\n      });\n    },\n    'click #consent': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak General Consent',\n        message: 'Yakin untuk cetak persetujuan pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.consent();\n        }\n      });\n    },\n    'dblclick #bill': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar', 'karcis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Pembayaran Pendaftaran',\n        message: 'Apakah yakin pasien sudah membayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          if (nodes[1]) {\n            Meteor.call.apply(Meteor, ['billRegis'].concat(slice.call(nodes.slice(0, 2)), [true]));\n            return makePdf.payRegCard(nodes[0], nodes[2], '...');\n          } else {\n            Meteor.call('billCard', nodes[0], false);\n            return makePdf.payRegCard(10000, 'Sepuluh Ribu Rupiah');\n          }\n        }\n      });\n    },\n    'dblclick #bayar': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Konfirmasi Pembayaran',\n        message: 'Apakah yakin tagihan ini sudah dibayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        var doc, pasien;\n        if (ok) {\n          Meteor.call.apply(Meteor, ['bayar'].concat(slice.call(nodes)));\n          pasien = coll.pasien.findOne({\n            no_mr: parseInt(nodes[0])\n          });\n          doc = _.find(pasien.rawat, function(i) {\n            return i.idbayar === nodes[1];\n          });\n          return makePdf.payRawat(nodes[0], doc);\n        }\n      });\n    },\n    'dblclick #request': function(event) {\n      var nodes;\n      nodes = _.map(['pasien', 'idbayar', 'jenis', 'idjenis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      return MaterializeModal.prompt({\n        message: 'Isikan data requestnya',\n        callback: function(err, res) {\n          var params;\n          if (res.submit) {\n            params = ['request'].concat(slice.call(nodes), [res.value]);\n            return Meteor.call.apply(Meteor, slice.call(params).concat([function(err, res) {\n              var flat, key, message, rekap, val;\n              if (res) {\n                message = '';\n                for (key in res) {\n                  val = res[key];\n                  message += tag('p', key + ': ' + val);\n                }\n                MaterializeModal.message({\n                  title: 'Penyerahan Obat',\n                  message: message\n                });\n                rekap = Session.get('rekap') || [];\n                flat = _.flatten(_.toPairs(res));\n                return Session.set('rekap', slice.call(rekap).concat([slice.call(nodes).concat(slice.call(flat))]));\n              }\n            }]));\n          }\n        }\n      });\n    },\n    'dblclick #rekap': function() {\n      var headers;\n      headers = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah'];\n      makePdf.rekap([headers].concat(slice.call(Session.get('rekap'))));\n      return Session.set('rekap', null);\n    },\n    'click .modal-trigger': function(event) {\n      if (this.idbayar) {\n        Session.set('formDoc', this);\n        Session.set('preview', modForm(this, this.idbayar));\n      }\n      return $('#preview').modal('open');\n    },\n    'click #rmRawat': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Konfirmasi Hapus',\n        message: 'Apakah yakin hapus data rawat pasien ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRawat', currentPar('no_mr'), self.idbayar);\n        }\n      });\n    },\n    'change #selPol': function(event) {\n      return Session.set('selPol', parseInt(event.target.id));\n    },\n    'click #rmPasien': function() {\n      var dialog;\n      dialog = {\n        title: 'Hapus Pasien',\n        message: 'Apakah yakin untuk menghapus pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          Meteor.call('rmPasien', currentPar('no_mr'));\n          return Router.go('/' + currentRoute());\n        }\n      });\n    }\n  });\n  Template[\"import\"].events({\n    'change :file': function(event, template) {\n      return Papa.parse(event.target.files[0], {\n        header: true,\n        step: function(result) {\n          var data, modifier, selector;\n          data = result.data[0];\n          if (currentRoute() === 'regis') {\n            selector = {\n              no_mr: parseInt(data.no_mr)\n            };\n            modifier = {\n              regis: {\n                nama_lengkap: _.startCase(data.nama_lengkap),\n                alamat: _.startCase(data.alamat),\n                agama: data.agama ? parseInt(data.agama) : void 0,\n                ayah: data.ayah ? _.startCase(data.ayah) : void 0,\n                nikah: data.nikah ? parseInt(data.nikah) : void 0,\n                pekerjaan: data.pekerjaan ? parseInt(data.pekerjaan) : void 0,\n                pendidikan: data.pendidikan ? parseInt(data.pendidikan) : void 0,\n                tgl_lahir: Date.parse(data.tgl_lahir) ? new Date(date.tgl_lahir) : void 0,\n                tmpt_kelahiran: data.tmpt_kelahiran ? _.startCase(data.tmpt_kelahiran) : void 0\n              }\n            };\n            return Meteor.call('import', 'pasien', selector, modifier);\n          } else if (currentRoute() === 'manajemen') {\n            if (data.tipe) {\n              selector = {\n                nama: data.nama\n              };\n              modifier = {\n                tipe: parseInt(data.tipe),\n                poli: parseInt(data.poli),\n                active: true\n              };\n              return Meteor.call('import', 'dokter', selector, modifier);\n            } else if (data.harga) {\n              selector = {\n                nama: _.snakeCase(data.nama)\n              };\n              modifier = {\n                harga: parseInt(data.harga),\n                jenis: _.snakeCase(data.jenis),\n                active: true\n              };\n              data.grup && (modifier.grup = _.startCase(data.grup));\n              return Meteor.call('import', 'tarif', selector, modifier);\n            } else if (data.password) {\n              Meteor.call('newUser', data);\n              return Meteor.call('addRole', data.username, [data.role], data.group);\n            }\n          } else if (currentRoute() === 'farmasi') {\n            selector = {\n              nama: data.nama\n            };\n            modifier = {\n              jenis: parseInt(data.jenis),\n              idbarang: randomId(),\n              batch: [\n                {\n                  idbatch: randomId(),\n                  anggaran: data.anggaran,\n                  beli: parseInt(data.beli),\n                  diapotik: parseInt(data.diapotik),\n                  digudang: parseInt(data.digudang),\n                  jenis: parseInt(data.jenis),\n                  jual: parseInt(data.jual),\n                  kadaluarsa: new Date(data.kadaluarsa),\n                  masuk: new Date(data.masuk),\n                  merek: data.merek || '',\n                  nobatch: data.nobatch,\n                  pengadaan: parseInt(data.pengadaan),\n                  satuan: parseInt(data.satuan),\n                  suplier: data.suplier\n                }\n              ]\n            };\n            return data.nama && Meteor.call('import', 'gudang', selector, modifier, 'batch');\n          }\n        }\n      });\n    }\n  });\n  Template[\"export\"].onRendered(function() {\n    return $('select#export').material_select();\n  });\n  Template[\"export\"].events({\n    'click #export': function() {\n      var select;\n      select = $('select#export').val();\n      return Meteor.call('export', select, function(err, content) {\n        var blob;\n        if (content) {\n          blob = new Blob([content], {\n            type: 'text/plain;charset=utf-8'\n          });\n          return saveAs(blob, select + '.csv');\n        }\n      });\n    }\n  });\n  Template.gudang.helpers({\n    heads: function() {\n      return {\n        barang: ['Jenis Barang', 'Nama Barang', 'Di Gudang', 'Di Apotik'],\n        batch: ['No Batch', 'Masuk', 'Kadaluarsa', 'Beli', 'Jual', 'Di Gudang', 'Di Apotik', 'Suplier']\n      };\n    },\n    schemagudang: function() {\n      return new SimpleSchema(schema.gudang);\n    },\n    formType: function() {\n      if (currentPar('idbarang')) {\n        return 'update-pushArray';\n      } else {\n        return 'insert';\n      }\n    },\n    warning: function(date) {\n      var diff;\n      diff = ((new Date).getFullYear() - date.getFullYear()) * 12 - ((new Date).getMonth() - date.getMonth());\n      switch (false) {\n        case !(diff < 2):\n          return 'red';\n        case !(diff < 7):\n          return 'orange';\n        case !(diff < 13):\n          return 'yellow';\n        default:\n          return 'green';\n      }\n    },\n    gudangs: function() {\n      var aggr, byBatch, byName, selector, sub;\n      aggr = function(i) {\n        return _.map(i, function(j) {\n          var reduced;\n          reduced = function(name) {\n            return _.reduce(j.batch, (function(sum, n) {\n              return sum + n[name];\n            }), 0);\n          };\n          j.akumulasi = {\n            digudang: reduced('digudang'),\n            diapotik: reduced('diapotik')\n          };\n          return j;\n        });\n      };\n      if (currentPar('idbarang')) {\n        selector = {\n          idbarang: currentPar('idbarang')\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        if (sub.ready()) {\n          return coll.gudang.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          nama: {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byBatch = {\n          idbatch: search()\n        };\n        selector = {\n          $or: [byName, byBatch]\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        return sub.ready() && aggr(coll.gudang.find().fetch());\n      } else {\n        sub = Meteor.subscribe('coll', 'gudang', {}, {});\n        return sub.ready() && aggr(coll.gudang.find().fetch());\n      }\n    }\n  });\n  Template.gudang.events({\n    'click #showForm': function() {\n      return Session.set('showForm', !Session.get('showForm'));\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.idbarang);\n    },\n    'dblclick #transfer': function() {\n      var data;\n      data = this;\n      if (roles().farmasi) {\n        return MaterializeModal.prompt({\n          message: 'Transfer Gudang > Apotek',\n          callback: function(err, res) {\n            if (res.submit) {\n              return Meteor.call('transfer', currentPar('idbarang'), data.idbatch, parseInt(res.value));\n            }\n          }\n        });\n      }\n    },\n    'click #rmBarang': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Hapus Jenis Obat',\n        message: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmBarang', self.idbarang);\n        }\n      });\n    }\n  });\n  Template.manajemen.helpers({\n    users: function() {\n      return Meteor.users.find().fetch();\n    },\n    onUser: function() {\n      return Session.get('onUser');\n    },\n    selRoles: function() {\n      return ['petugas', 'admin'];\n    },\n    klinik: function() {\n      return selects.klinik;\n    },\n    schemadokter: function() {\n      return new SimpleSchema(schema.dokter);\n    },\n    schematarif: function() {\n      return new SimpleSchema(schema.tarif);\n    },\n    dokters: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.dokter.find(selector, options).fetch();\n    },\n    tarifs: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.tarif.find(selector, options).fetch();\n    }\n  });\n  Template.manajemen.events({\n    'submit #userForm': function(event) {\n      var doc, group, onUser, poli, repeat, role, theRole;\n      event.preventDefault();\n      onUser = Session.get('onUser');\n      if (!onUser) {\n        doc = {\n          username: event.target.children.username.value,\n          password: event.target.children.password.value\n        };\n        repeat = event.target.children.repeat.value;\n        if (doc.password === repeat) {\n          Meteor.call('newUser', doc);\n          return $('input').val('');\n        } else {\n          return Materialize.toast('Password tidak mirip', 3000);\n        }\n      } else {\n        role = $('input[name=\"role\"]:checked', event.target)[0].id;\n        group = $('input[name=\"group\"]:checked', event.target)[0].id;\n        poli = $('input[name=\"poli\"]:checked', event.target)[0];\n        theRole = !poli ? role : _.snakeCase(poli.id);\n        return Meteor.call('addRole', onUser._id, [theRole], group);\n      }\n    },\n    'dblclick #row': function() {\n      return Session.set('onUser', this);\n    },\n    'dblclick #reset': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Reset Peranan',\n        message: 'Anda yakin untuk menghapus semua perannya?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRole', self._id);\n        }\n      });\n    },\n    'click #close': function() {\n      return sessNull();\n    },\n    'dblclick #baris': function(event) {\n      var dialog, jenis, self;\n      jenis = event.currentTarget.className;\n      dialog = {\n        title: 'Hapus ' + _.startCase(jenis),\n        message: 'Yakin untuk menghapus ' + jenis + ' dari daftar?'\n      };\n      self = this;\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('inactive', jenis, self._id);\n        }\n      });\n    }\n  });\n  Template.login.onRendered(function() {\n    return $('.slider').slider();\n  });\n  Template.login.events({\n    'submit form': function(event) {\n      var password, username;\n      event.preventDefault();\n      username = event.target.children.username.value;\n      password = event.target.children.password.value;\n      return Meteor.loginWithPassword(username, password, function(err) {\n        if (err) {\n          return Materialize.toast('Salah username / password', 3000);\n        } else {\n          return Router.go('/' + _.keys(roles())[0]);\n        }\n      });\n    }\n  });\n  Template.pagination.events({\n    'click #next': function() {\n      return Session.set('page', 1 + page());\n    },\n    'click #prev': function() {\n      return Session.set('page', -1 + page());\n    },\n    'click #num': function(event) {\n      return Session.set('page', parseInt(event.target.innerText));\n    }\n  });\n  Template.report.helpers({\n    datas: function() {\n      return Session.get('laporan');\n    }\n  });\n  Template.report.events({\n    'click .datepicker': function(event, template) {\n      var type;\n      type = event.target.attributes.date.nodeValue;\n      return $('#' + type).pickadate({\n        onSet: function(data) {\n          var end, start;\n          Session.set(type + 'Date', data.select);\n          start = Session.get('startDate');\n          end = Session.get('endDate');\n          if (start && end) {\n            return Meteor.call('report', template.data.jenis, start, end, function(err, res) {\n              return res && Session.set('laporan', res);\n            });\n          }\n        }\n      });\n    },\n    'click #export': function(event, template) {\n      var blob, content;\n      content = exportcsv.exportToCSV(Session.get('laporan').csv, true, ';');\n      blob = new Blob([content], {\n        type: 'text/plain;charset=utf-8'\n      });\n      return saveAs(blob, template.data.jenis + '.csv');\n    }\n  });\n}\n","if Meteor.isServer\n\n\tMeteor.startup ->\n\t\tcoll.pasien._ensureIndex 'regis.nama_lengkap': 1\n\n\tMeteor.publish 'coll', (name, selector, options) ->\n\t\tcoll[name].find selector, options\n\n\tMeteor.publish 'users', ->\n\t\tMeteor.users.find {}\n\n\tMeteor.methods\n\t\timport: (name, selector, modifier, arrName) ->\n\t\t\tfind = coll[name].findOne selector\n\t\t\tunless find\n\t\t\t\tcoll[name].upsert selector, $set: modifier\n\t\t\telse if arrName\n\t\t\t\tsel = _id: find._id\n\t\t\t\tobj = {}; obj[arrName] = modifier[arrName][0]\n\t\t\t\tcoll[name].update sel, $push: obj\n\n\t\texport: (jenis) ->\n\t\t\tif jenis is 'regis'\n\t\t\t\tarr = _.map coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\telse if jenis is 'jalan'\n\t\t\t\tfind = (type, value) ->\n\t\t\t\t\tdoc = _.find selects[type], (i) -> i.value is value\n\t\t\t\t\tdoc.label\n\t\t\t\tarr = _.flatMap coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tif i.rawat then _.map i.rawat, (j) ->\n\t\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\t\t\t\tidbayar: j.idbayar\n\t\t\t\t\t\tcara_bayar: find 'cara_bayar', j.cara_bayar\n\t\t\t\t\t\tklinik: find 'klinik', j.klinik\n\t\t\telse if jenis is 'farmasi'\n\t\t\t\tarr = _.flatMap coll.gudang.find().fetch(), (i) ->\n\t\t\t\t\t_.map i.batch, (j) ->\n\t\t\t\t\t\thead = ['jenis', 'nama']\n\t\t\t\t\t\thead = _.zipObject head, _.map head, (k) -> i[k]\n\t\t\t\t\t\tbody = ['nobatch', 'merek', 'satuan', 'masuk', 'kadaluarsa', 'digudang', 'diapotik', 'beli', 'jual', 'suplier', 'anggaran', 'pengadaan']\n\t\t\t\t\t\tbody = _.zipObject body, _.map body, (k) -> j[k]\n\t\t\t\t\t\t_.assign head, body\n\t\t\texportcsv.exportToCSV arr, true, ';'\n\n\t\tbillCard: (no_mr, state) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'regis.billCard': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbillRegis: (no_mr, idbayar, state) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'rawat.$.billRegis': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbayar: (no_mr, idbayar) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = 'rawat.$.status_bayar': true\n\t\t\tcoll.pasien.update selector, $set: modifier\n\n\t\trequest: (no_mr, idbayar, jenis, idjenis, hasil) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tfindPasien = coll.pasien.findOne selector\n\t\t\tfor i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i[jenis] then for j in i[jenis]\n\t\t\t\t\tif j['id'+jenis] is idjenis then j.hasil = hasil\n\t\t\tmodifier = rawat: findPasien.rawat\n\t\t\tcoll.pasien.update selector, $set: modifier\n\t\t\tgive = {}\n\t\t\tif jenis is 'obat' then for i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i.obat then for j in i.obat\n\t\t\t\t\tif j.idobat is idjenis\n\t\t\t\t\t\tfindStock = coll.gudang.findOne _id: j.nama\n\t\t\t\t\t\tfor k in [1..j.jumlah]\n\t\t\t\t\t\t\tfiltered = _.filter findStock.batch, (l) -> l.diapotik > 0\n\t\t\t\t\t\t\tsortedIn = _.sortBy filtered, (l) -> new Date(l.masuk).getTime()\n\t\t\t\t\t\t\tsortedEd = _.sortBy sortedIn, (l) -> new Date(l.kadaluarsa).getTime()\n\t\t\t\t\t\t\tsortedEd[0].diapotik -= 1\n\t\t\t\t\t\t\tkey = findStock.nama +';'+ sortedEd[0].nobatch\n\t\t\t\t\t\t\tgive[key] or= 0; give[key] += 1\n\t\t\t\t\t\tselector = _id: findStock._id\n\t\t\t\t\t\tmodifier = $set: batch: findStock.batch\n\t\t\t\t\t\tcoll.gudang.update selector, modifier\n\t\t\tgive if jenis is 'obat'\n\n\t\ttransfer: (idbarang, idbatch, amount) ->\n\t\t\tselector = idbarang: idbarang, 'batch.idbatch': idbatch\n\t\t\tmodifier = $inc: 'batch.$.digudang': -amount, 'batch.$.diapotik': amount\n\t\t\tcoll.gudang.update selector, modifier\n\n\t\trmPasien: (no_mr) ->\n\t\t\tcoll.pasien.remove no_mr: parseInt no_mr\n\n\t\trmRawat: (no_mr, idbayar) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $pull: rawat: idbayar: idbayar\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\taddRole: (id, roles, group, poli) ->\n\t\t\trole = poli or roles\n\t\t\tRoles.addUsersToRoles id, role, group\n\n\t\trmRole: (id) ->\n\t\t\tselector = _id: id\n\t\t\tmodifier = $set: roles: {}\n\t\t\tMeteor.users.update selector, modifier\n\n\t\tnewUser: (doc) ->\n\t\t\tfind = Accounts.findUserByUsername doc.username\n\t\t\tif find\n\t\t\t\tAccounts.setUsername find._id, doc.username\n\t\t\t\tAccounts.setPassword find._id, doc.password\n\t\t\telse\n\t\t\t\tAccounts.createUser doc\n\n\t\trmBarang: (idbarang) ->\n\t\t\tcoll.gudang.remove idbarang: idbarang\n\n\t\tinactive: (name, id) ->\n\t\t\tsel = _id: id; mod = $set: active: false\n\t\t\tcoll[name].update sel, mod\n\n\t\tpindah: (no_mr) ->\n\t\t\tfind = coll.pasien.findOne 'no_mr': parseInt no_mr\n\t\t\t[..., last] = find.rawat\n\t\t\tif last.pindah\n\t\t\t\tselector = _id: find._id\n\t\t\t\tmodifier = $push: rawat:\n\t\t\t\t\tidbayar: randomId()\n\t\t\t\t\ttanggal: new Date()\n\t\t\t\t\tcara_bayar: last.cara_bayar\n\t\t\t\t\tklinik: last.pindah\n\t\t\t\t\tbillRegis: true\n\t\t\t\t\ttotal: semua: 0\n\t\t\t\tcoll.pasien.update selector, modifier\n\n\t\treport: (jenis, start, end) ->\n\t\t\tfilter = (arr) -> _.filter arr, (i) ->\n\t\t\t\tnew Date(start) < new Date(i.tanggal) < new Date(end)\n\t\t\tdocs = _.flatMap coll.pasien.find().fetch(), (i) -> _.map filter(i.rawat), (j) ->\n\t\t\t\tobj =\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: _.startCase i.regis.nama_lengkap\n\t\t\t\t\ttanggal: j.tanggal\n\t\t\t\t\tno_bill: j.nobill\n\t\t\t\t\tcara_bayar: look('cara_bayar', j.cara_bayar).label\n\t\t\t\t\trujukan: if j.rujukan then look('rujukan', j.rujukan).label else ''\n\t\t\t\t\tklinik: look('klinik', j.klinik).label\n\t\t\t\t\tdiagnosa: j.diagnosa or '-'\n\t\t\t\t\ttindakan: _.flatMap ['tindakan', 'labor', 'radio'], (k) ->\n\t\t\t\t\t\tsaring = _.filter j[k], (l) -> l\n\t\t\t\t\t\t_.map saring, (l) -> '/' + _.startCase look2('tarif', l.nama).nama\n\t\t\t\t\tharga: 'Rp ' + j.total.semua\n\t\t\t\t\tpetugas: Meteor.users.findOne(_id: j.petugas).username\n\t\t\t\t\tkeluar: if j.keluar then look('keluar', j.keluar).label else '-'\n\t\t\t\t\tbaru_lama: if i.rawat.length > 0 then 'Lama' else 'Baru'\n\t\t\t\tif jenis is 'pendaftaran'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']\n\t\t\t\telse if jenis is 'pembayaran'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'diagnosa', 'tindakan', 'harga', 'petugas']\n\t\t\t\telse if jenis is 'rawat_jalan'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']\n\t\t\theaders: _.map _.keys(docs[0]), (i) -> _.startCase i\n\t\t\trows: _.map docs, (i) -> _.values i\n\t\t\tcsv: docs\n\n\t\tpatientExist: (no_mr) ->\n\t\t\ttrue if coll.pasien.findOne no_mr: parseInt no_mr\n","if (Meteor.isServer) {\n  Meteor.startup(function() {\n    return coll.pasien._ensureIndex({\n      'regis.nama_lengkap': 1\n    });\n  });\n  Meteor.publish('coll', function(name, selector, options) {\n    return coll[name].find(selector, options);\n  });\n  Meteor.publish('users', function() {\n    return Meteor.users.find({});\n  });\n  Meteor.methods({\n    \"import\": function(name, selector, modifier, arrName) {\n      var find, obj, sel;\n      find = coll[name].findOne(selector);\n      if (!find) {\n        return coll[name].upsert(selector, {\n          $set: modifier\n        });\n      } else if (arrName) {\n        sel = {\n          _id: find._id\n        };\n        obj = {};\n        obj[arrName] = modifier[arrName][0];\n        return coll[name].update(sel, {\n          $push: obj\n        });\n      }\n    },\n    \"export\": function(jenis) {\n      var arr, find;\n      if (jenis === 'regis') {\n        arr = _.map(coll.pasien.find().fetch(), function(i) {\n          return {\n            no_mr: i.no_mr,\n            nama_lengkap: i.regis.nama_lengkap\n          };\n        });\n      } else if (jenis === 'jalan') {\n        find = function(type, value) {\n          var doc;\n          doc = _.find(selects[type], function(i) {\n            return i.value === value;\n          });\n          return doc.label;\n        };\n        arr = _.flatMap(coll.pasien.find().fetch(), function(i) {\n          if (i.rawat) {\n            return _.map(i.rawat, function(j) {\n              return {\n                no_mr: i.no_mr,\n                nama_lengkap: i.regis.nama_lengkap,\n                idbayar: j.idbayar,\n                cara_bayar: find('cara_bayar', j.cara_bayar),\n                klinik: find('klinik', j.klinik)\n              };\n            });\n          }\n        });\n      } else if (jenis === 'farmasi') {\n        arr = _.flatMap(coll.gudang.find().fetch(), function(i) {\n          return _.map(i.batch, function(j) {\n            var body, head;\n            head = ['jenis', 'nama'];\n            head = _.zipObject(head, _.map(head, function(k) {\n              return i[k];\n            }));\n            body = ['nobatch', 'merek', 'satuan', 'masuk', 'kadaluarsa', 'digudang', 'diapotik', 'beli', 'jual', 'suplier', 'anggaran', 'pengadaan'];\n            body = _.zipObject(body, _.map(body, function(k) {\n              return j[k];\n            }));\n            return _.assign(head, body);\n          });\n        });\n      }\n      return exportcsv.exportToCSV(arr, true, ';');\n    },\n    billCard: function(no_mr, state) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'regis.billCard': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    billRegis: function(no_mr, idbayar, state) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'rawat.$.billRegis': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    bayar: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        'rawat.$.status_bayar': true\n      };\n      return coll.pasien.update(selector, {\n        $set: modifier\n      });\n    },\n    request: function(no_mr, idbayar, jenis, idjenis, hasil) {\n      var filtered, findPasien, findStock, give, i, j, k, key, len, len1, len2, len3, m, modifier, n, o, p, q, ref, ref1, ref2, ref3, ref4, selector, sortedEd, sortedIn;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      findPasien = coll.pasien.findOne(selector);\n      ref = findPasien.rawat;\n      for (m = 0, len = ref.length; m < len; m++) {\n        i = ref[m];\n        if (i.idbayar === idbayar) {\n          if (i[jenis]) {\n            ref1 = i[jenis];\n            for (n = 0, len1 = ref1.length; n < len1; n++) {\n              j = ref1[n];\n              if (j['id' + jenis] === idjenis) {\n                j.hasil = hasil;\n              }\n            }\n          }\n        }\n      }\n      modifier = {\n        rawat: findPasien.rawat\n      };\n      coll.pasien.update(selector, {\n        $set: modifier\n      });\n      give = {};\n      if (jenis === 'obat') {\n        ref2 = findPasien.rawat;\n        for (o = 0, len2 = ref2.length; o < len2; o++) {\n          i = ref2[o];\n          if (i.idbayar === idbayar) {\n            if (i.obat) {\n              ref3 = i.obat;\n              for (p = 0, len3 = ref3.length; p < len3; p++) {\n                j = ref3[p];\n                if (j.idobat === idjenis) {\n                  findStock = coll.gudang.findOne({\n                    _id: j.nama\n                  });\n                  for (k = q = 1, ref4 = j.jumlah; 1 <= ref4 ? q <= ref4 : q >= ref4; k = 1 <= ref4 ? ++q : --q) {\n                    filtered = _.filter(findStock.batch, function(l) {\n                      return l.diapotik > 0;\n                    });\n                    sortedIn = _.sortBy(filtered, function(l) {\n                      return new Date(l.masuk).getTime();\n                    });\n                    sortedEd = _.sortBy(sortedIn, function(l) {\n                      return new Date(l.kadaluarsa).getTime();\n                    });\n                    sortedEd[0].diapotik -= 1;\n                    key = findStock.nama(+';' + sortedEd[0].nobatch);\n                    give[key] || (give[key] = 0);\n                    give[key] += 1;\n                  }\n                  selector = {\n                    _id: findStock._id\n                  };\n                  modifier = {\n                    $set: {\n                      batch: findStock.batch\n                    }\n                  };\n                  coll.gudang.update(selector, modifier);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (jenis === 'obat') {\n        return give;\n      }\n    },\n    transfer: function(idbarang, idbatch, amount) {\n      var modifier, selector;\n      selector = {\n        idbarang: idbarang,\n        'batch.idbatch': idbatch\n      };\n      modifier = {\n        $inc: {\n          'batch.$.digudang': -amount,\n          'batch.$.diapotik': amount\n        }\n      };\n      return coll.gudang.update(selector, modifier);\n    },\n    rmPasien: function(no_mr) {\n      return coll.pasien.remove({\n        no_mr: parseInt(no_mr)\n      });\n    },\n    rmRawat: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $pull: {\n          rawat: {\n            idbayar: idbayar\n          }\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    addRole: function(id, roles, group, poli) {\n      var role;\n      role = poli || roles;\n      return Roles.addUsersToRoles(id, role, group);\n    },\n    rmRole: function(id) {\n      var modifier, selector;\n      selector = {\n        _id: id\n      };\n      modifier = {\n        $set: {\n          roles: {}\n        }\n      };\n      return Meteor.users.update(selector, modifier);\n    },\n    newUser: function(doc) {\n      var find;\n      find = Accounts.findUserByUsername(doc.username);\n      if (find) {\n        Accounts.setUsername(find._id, doc.username);\n        return Accounts.setPassword(find._id, doc.password);\n      } else {\n        return Accounts.createUser(doc);\n      }\n    },\n    rmBarang: function(idbarang) {\n      return coll.gudang.remove({\n        idbarang: idbarang\n      });\n    },\n    inactive: function(name, id) {\n      var mod, sel;\n      sel = {\n        _id: id\n      };\n      mod = {\n        $set: {\n          active: false\n        }\n      };\n      return coll[name].update(sel, mod);\n    },\n    pindah: function(no_mr) {\n      var find, last, modifier, ref, selector;\n      find = coll.pasien.findOne({\n        'no_mr': parseInt(no_mr)\n      });\n      ref = find.rawat, last = ref[ref.length - 1];\n      if (last.pindah) {\n        selector = {\n          _id: find._id\n        };\n        modifier = {\n          $push: {\n            rawat: {\n              idbayar: randomId(),\n              tanggal: new Date(),\n              cara_bayar: last.cara_bayar,\n              klinik: last.pindah,\n              billRegis: true,\n              total: {\n                semua: 0\n              }\n            }\n          }\n        };\n        return coll.pasien.update(selector, modifier);\n      }\n    },\n    report: function(jenis, start, end) {\n      var docs, filter;\n      filter = function(arr) {\n        return _.filter(arr, function(i) {\n          var ref;\n          return (new Date(start) < (ref = new Date(i.tanggal)) && ref < new Date(end));\n        });\n      };\n      docs = _.flatMap(coll.pasien.find().fetch(), function(i) {\n        return _.map(filter(i.rawat), function(j) {\n          var obj;\n          obj = {\n            no_mr: i.no_mr,\n            nama_lengkap: _.startCase(i.regis.nama_lengkap),\n            tanggal: j.tanggal,\n            no_bill: j.nobill,\n            cara_bayar: look('cara_bayar', j.cara_bayar).label,\n            rujukan: j.rujukan ? look('rujukan', j.rujukan).label : '',\n            klinik: look('klinik', j.klinik).label,\n            diagnosa: j.diagnosa || '-',\n            tindakan: _.flatMap(['tindakan', 'labor', 'radio'], function(k) {\n              var saring;\n              saring = _.filter(j[k], function(l) {\n                return l;\n              });\n              return _.map(saring, function(l) {\n                return '/' + _.startCase(look2('tarif', l.nama).nama);\n              });\n            }),\n            harga: 'Rp ' + j.total.semua,\n            petugas: Meteor.users.findOne({\n              _id: j.petugas\n            }).username,\n            keluar: j.keluar ? look('keluar', j.keluar).label : '-',\n            baru_lama: i.rawat.length > 0 ? 'Lama' : 'Baru'\n          };\n          if (jenis === 'pendaftaran') {\n            return _.pick(obj, ['tanggal', 'no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']);\n          } else if (jenis === 'pembayaran') {\n            return _.pick(obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'diagnosa', 'tindakan', 'harga', 'petugas']);\n          } else if (jenis === 'rawat_jalan') {\n            return _.pick(obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']);\n          }\n        });\n      });\n      return {\n        headers: _.map(_.keys(docs[0]), function(i) {\n          return _.startCase(i);\n        }),\n        rows: _.map(docs, function(i) {\n          return _.values(i);\n        }),\n        csv: docs\n      };\n    },\n    patientExist: function(no_mr) {\n      if (coll.pasien.findOne({\n        no_mr: parseInt(no_mr)\n      })) {\n        return true;\n      }\n    }\n  });\n}\n"]}
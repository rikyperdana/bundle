{"version":3,"sources":["meteor://ðŸ’»app/folder/parent/funcs.coffee","meteor://ðŸ’»app/folder/parent/funcs.coffee.js","meteor://ðŸ’»app/folder/hooks.coffee","meteor://ðŸ’»app/folder/hooks.coffee.js","meteor://ðŸ’»app/folder/menus.coffee","meteor://ðŸ’»app/folder/menus.coffee.js","meteor://ðŸ’»app/folder/modules.coffee","meteor://ðŸ’»app/folder/pdf.coffee","meteor://ðŸ’»app/folder/pdf.coffee.js","meteor://ðŸ’»app/folder/selects.coffee","meteor://ðŸ’»app/folder/selects.coffee.js","meteor://ðŸ’»app/both.coffee","meteor://ðŸ’»app/both.coffee.js","meteor://ðŸ’»app/client.coffee","meteor://ðŸ’»app/client.coffee.js","meteor://ðŸ’»app/server.coffee","meteor://ðŸ’»app/server.coffee.js"],"names":["_","lodash","coll","schema","look","list","val","find","selects","i","value","look2","id","fetch","_id","randomId","Math","random","toString","slice","zeros","num","size","repeat","Meteor","isClient","SimpleSchema","debug","AutoForm","setDefaultTemplate","currentRoute","Router","current","route","getName","currentPar","param","params","search","Session","get","formDoc","limit","page","roles","user","closeForm","modForm","doc","idbayar","begin","l","len","ref","stop","total","tanggal","Date","jenis","tindakan","labor","radio","obat","map","j","results","length","tarif","k","nama","harga","push","idobat","semua","cara_bayar","billRegis","status_bayar","moment","spm","diff","petugas","userId","nobill","parseInt","now","substr","set","addHooks","before","call","result","after","insert","err","res","formToDoc","idbarang","batch","idbatch","rights","group","modules","name","full","icon","color","makePdf","card","pdf","pasien","findOne","pdfMake","createPdf","content","regis","nama_lengkap","no_mr","pageSize","pageMargins","pageOrientation","download","consent","text","alignment","tmpt_lahir","tgl_lahir","format","darah","label","kelamin","agama","pendidikan","pekerjaan","ayah","ibu","pasangan","alamat","kontak","payRawat","len1","m","ref1","rows","table","startCase","widths","body","numeral","payRegCard","amount","words","italics","rekap","strings","rawat","nikah","klinik","bentuk","tipe_dokter","rujukan","keluar","barang","satuan","anggaran","keys","x","selector","sub","subscribe","jalan","ready","dokter","snakeCase","poli","filter","arr","gudang","configure","layoutTemplate","loadingTemplate","action","render","type","Number","Object","String","autoform","pickadateOptions","selectYears","selectMonths","optional","options","autoValue","Boolean","idtindakan","idlabor","hasil","idradio","puyer","aturan","jumlah","subtotal","Array","assign","inap","igd","decimal","farmasi","logistik","tipe","grup","obj","active","Collection","allow","zipObject","waitOn","globalHelpers","indexOf","item","onBeforeAction","next","onAfterAction","uniq","flatMap","go","date","JSON","stringify","reverse","sel","sort","sortBy","getTime","a","b","option","field","end","apply","Template","registerHelper","events","event","term","key","target","layout","onRendered","menu","helpers","menus","navTitle","today","logout","document","location","reload","formType","umur","showButton","showButtonText","preview","omitFields","split","username","roleFilter","userPoli","insurance","selPol","pasiens","byName","byNoMR","elem","kliniks","past","selSub","fields","$options","$regex","$or","getDate","$elemMatch","$in","$gt","c","$ne","$exists","later","$","trigger","prepend","prop","setTimeout","dialog","title","message","Confirmation","ok","nodes","attributes","nodeValue","concat","MaterializeModal","prompt","callback","submit","flat","flatten","toPairs","headers","modal","self","template","Papa","parse","files","header","step","data","modifier","tmpt_kelahiran","password","role","beli","diapotik","digudang","jual","kadaluarsa","masuk","merek","nobatch","pengadaan","suplier","schemagudang","gudangs","byBatch","manajemen","material_select","users","onUser","selRoles","schemadokter","schematarif","dokters","skip","tarifs","theRole","preventDefault","children","Materialize","toast","console","log","select","blob","Blob","saveAs","currentTarget","className","login","slider","loginWithPassword","pagination","innerText","report","datas","pickadate","onSet","start","exportcsv","exportToCSV","csv","isServer","startup","_ensureIndex","publish","methods","arrName","upsert","$set","update","$push","billCard","state","bayar","request","idjenis","filtered","findPasien","findStock","give","len2","len3","n","o","p","q","ref2","ref3","ref4","sortedEd","sortedIn","transfer","$inc","rmPasien","remove","rmRawat","$pull","addRole","Roles","addUsersToRoles","rmRole","newUser","Accounts","findUserByUsername","setUsername","setPassword","createUser","rmBarang","inactive","mod","pindah","last","docs","no_bill","diagnosa","saring","baru_lama","pick","values"],"mappings":"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","file":"/app.js","sourcesContent":["@_ = lodash\n@coll = {}; @schema = {}\n@look = (list, val) -> _.find selects[list], (i) -> i.value is val\n@look2 = (list, id) -> _.find coll[list].find().fetch(), (i) -> i._id is id\n@randomId = -> Math.random().toString(36).slice(2)\n@zeros = (num) ->\n\tsize = _.size _.toString num\n\tif size < 7 then '0'.repeat(6-size) + _.toString num\n\nif Meteor.isClient\n\n\tSimpleSchema.debug = true\n\tAutoForm.setDefaultTemplate 'materialize'\n\t@currentRoute = -> Router.current().route.getName()\n\t@currentPar = (param) -> Router.current().params[param]\n\t@search = -> Session.get 'search'\n\t@formDoc = -> Session.get 'formDoc'\n\t@limit = -> Session.get 'limit'\n\t@page = -> Session.get 'page'\n\t@roles = -> Meteor.user().roles\n","this._ = lodash;\n\nthis.coll = {};\n\nthis.schema = {};\n\nthis.look = function(list, val) {\n  return _.find(selects[list], function(i) {\n    return i.value === val;\n  });\n};\n\nthis.look2 = function(list, id) {\n  return _.find(coll[list].find().fetch(), function(i) {\n    return i._id === id;\n  });\n};\n\nthis.randomId = function() {\n  return Math.random().toString(36).slice(2);\n};\n\nthis.zeros = function(num) {\n  var size;\n  size = _.size(_.toString(num));\n  if (size < 7) {\n    return '0'.repeat(6 - size) + _.toString(num);\n  }\n};\n\nif (Meteor.isClient) {\n  SimpleSchema.debug = true;\n  AutoForm.setDefaultTemplate('materialize');\n  this.currentRoute = function() {\n    return Router.current().route.getName();\n  };\n  this.currentPar = function(param) {\n    return Router.current().params[param];\n  };\n  this.search = function() {\n    return Session.get('search');\n  };\n  this.formDoc = function() {\n    return Session.get('formDoc');\n  };\n  this.limit = function() {\n    return Session.get('limit');\n  };\n  this.page = function() {\n    return Session.get('page');\n  };\n  this.roles = function() {\n    return Meteor.user().roles;\n  };\n}\n","if Meteor.isClient\n\n\t@modForm = (doc, idbayar) -> if currentRoute() is 'jalan'\n\t\tdoc.tanggal = new Date()\n\t\tdoc.idbayar = if idbayar then idbayar else randomId()\n\t\tdoc.jenis = currentRoute()\n\t\ttotal = tindakan: 0, labor: 0, radio: 0, obat: 0\n\t\t_.map ['tindakan', 'labor', 'radio'], (i) ->\n\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\tj['id'+i] = randomId()\n\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\tj.harga = find.harga\n\t\t\t\ttotal[i] += j.harga\n\t\ti.idobat = randomId() for i in doc.obat if doc.obat\n\t\tdoc.total =\n\t\t\ttindakan: total.tindakan\n\t\t\tlabor: total.labor\n\t\t\tradio: total.radio\n\t\tdoc.total.semua = doc.total.tindakan + doc.total.labor + doc.total.radio\n\t\tdoc.billRegis = true if doc.total.semua > 0 or doc.cara_bayar isnt 1\n\t\tdoc.status_bayar = true if doc.total.semua > 0 and doc.cara_bayar isnt 1\n\t\tif doc.obat and 0 is doc.total.semua\n\t\t\tdoc.billRegis = true\n\t\t\tdoc.status_bayar = true\n\t\tbegin = Session.get 'begin'; stop = moment()\n\t\tdoc.spm = stop.diff begin, 'minutes'\n\t\tdoc.petugas = Meteor.userId()\n\t\tdoc.nobill = parseInt _.toString(Date.now()).substr 7, 13\n\t\tdoc\n\n\tcloseForm = ->\n\t\t_.map ['showForm', 'formDoc'], (i) ->\n\t\t\tSession.set i, null\n\n\tAutoForm.addHooks 'formPasien',\n\t\tbefore:\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tformDoc = Session.get 'formDoc'\n\t\t\t\tif formDoc then Meteor.call 'rmRawat', currentPar('no_mr'), formDoc.idbayar\n\t\t\t\tthis.result modForm doc\n\t\tafter:\n\t\t\tinsert: -> closeForm()\n\t\t\t'update-pushArray': (err, res) ->\n\t\t\t\tcloseForm()\n\t\t\t\tif res then Meteor.call 'pindah', currentPar 'no_mr'\n\t\tformToDoc: (doc) ->\n\t\t\tSession.set 'preview', modForm doc\n\t\t\tdoc\n\n\tAutoForm.addHooks 'formGudang',\n\t\tbefore:\n\t\t\tinsert: (doc) ->\n\t\t\t\tdoc.idbarang = randomId()\n\t\t\t\tdoc.batch[0].idbatch = randomId()\n\t\t\t\tthis.result doc\n\t\t\t'update-pushArray': (doc) ->\n\t\t\t\tdoc.idbatch = randomId()\n\t\t\t\tthis.result doc\n","var closeForm;\n\nif (Meteor.isClient) {\n  this.modForm = function(doc, idbayar) {\n    var begin, i, l, len, ref, stop, total;\n    if (currentRoute() === 'jalan') {\n      doc.tanggal = new Date();\n      doc.idbayar = idbayar ? idbayar : randomId();\n      doc.jenis = currentRoute();\n      total = {\n        tindakan: 0,\n        labor: 0,\n        radio: 0,\n        obat: 0\n      };\n      _.map(['tindakan', 'labor', 'radio'], function(i) {\n        var find, j, l, len, ref, results;\n        if (doc[i]) {\n          ref = doc[i];\n          results = [];\n          for (l = 0, len = ref.length; l < len; l++) {\n            j = ref[l];\n            j['id' + i] = randomId();\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            j.harga = find.harga;\n            results.push(total[i] += j.harga);\n          }\n          return results;\n        }\n      });\n      if (doc.obat) {\n        ref = doc.obat;\n        for (l = 0, len = ref.length; l < len; l++) {\n          i = ref[l];\n          i.idobat = randomId();\n        }\n      }\n      doc.total = {\n        tindakan: total.tindakan,\n        labor: total.labor,\n        radio: total.radio\n      };\n      doc.total.semua = doc.total.tindakan + doc.total.labor + doc.total.radio;\n      if (doc.total.semua > 0 || doc.cara_bayar !== 1) {\n        doc.billRegis = true;\n      }\n      if (doc.total.semua > 0 && doc.cara_bayar !== 1) {\n        doc.status_bayar = true;\n      }\n      if (doc.obat && 0 === doc.total.semua) {\n        doc.billRegis = true;\n        doc.status_bayar = true;\n      }\n      begin = Session.get('begin');\n      stop = moment();\n      doc.spm = stop.diff(begin, 'minutes');\n      doc.petugas = Meteor.userId();\n      doc.nobill = parseInt(_.toString(Date.now()).substr(7, 13));\n      return doc;\n    }\n  };\n  closeForm = function() {\n    return _.map(['showForm', 'formDoc'], function(i) {\n      return Session.set(i, null);\n    });\n  };\n  AutoForm.addHooks('formPasien', {\n    before: {\n      'update-pushArray': function(doc) {\n        var formDoc;\n        formDoc = Session.get('formDoc');\n        if (formDoc) {\n          Meteor.call('rmRawat', currentPar('no_mr'), formDoc.idbayar);\n        }\n        return this.result(modForm(doc));\n      }\n    },\n    after: {\n      insert: function() {\n        return closeForm();\n      },\n      'update-pushArray': function(err, res) {\n        closeForm();\n        if (res) {\n          return Meteor.call('pindah', currentPar('no_mr'));\n        }\n      }\n    },\n    formToDoc: function(doc) {\n      Session.set('preview', modForm(doc));\n      return doc;\n    }\n  });\n  AutoForm.addHooks('formGudang', {\n    before: {\n      insert: function(doc) {\n        doc.idbarang = randomId();\n        doc.batch[0].idbatch = randomId();\n        return this.result(doc);\n      },\n      'update-pushArray': function(doc) {\n        doc.idbatch = randomId();\n        return this.result(doc);\n      }\n    }\n  });\n}\n","if Meteor.isClient\n\n\t@rights = [\n\t\tgroup: 'regis'\n\t\tlist: ['regis', 'jalan']\n\t,\n\t\tgroup: 'bayar'\n\t\tlist: ['bayar']\n\t,\n\t\tgroup: 'jalan'\n\t\tlist: ['jalan', 'farmasi']\n\t,\n\t\tgroup: 'inap'\n\t\tlist: ['inap', 'farmasi']\n\t,\n\t\tgroup: 'labor'\n\t\tlist: ['labor']\n\t,\n\t\tgroup: 'radio'\n\t\tlist: ['radio']\n\t,\n\t\tgroup: 'obat'\n\t\tlist: ['obat', 'farmasi']\n\t,\n\t\tgroup: 'rekam'\n\t\tlist: ['rekam', 'regis']\n\t,\n\t\tgroup: 'admisi'\n\t\tlist: ['admisi']\n\t,\n\t\tgroup: 'manajemen'\n\t\tlist: ['manajemen']\n\t,\n\t\tgroup: 'farmasi'\n\t\tlist: ['farmasi']\n\t]\n","if (Meteor.isClient) {\n  this.rights = [\n    {\n      group: 'regis',\n      list: ['regis', 'jalan']\n    }, {\n      group: 'bayar',\n      list: ['bayar']\n    }, {\n      group: 'jalan',\n      list: ['jalan', 'farmasi']\n    }, {\n      group: 'inap',\n      list: ['inap', 'farmasi']\n    }, {\n      group: 'labor',\n      list: ['labor']\n    }, {\n      group: 'radio',\n      list: ['radio']\n    }, {\n      group: 'obat',\n      list: ['obat', 'farmasi']\n    }, {\n      group: 'rekam',\n      list: ['rekam', 'regis']\n    }, {\n      group: 'admisi',\n      list: ['admisi']\n    }, {\n      group: 'manajemen',\n      list: ['manajemen']\n    }, {\n      group: 'farmasi',\n      list: ['farmasi']\n    }\n  ];\n}\n","@modules = [\n\tname: 'regis'\n\tfull: 'Pendaftaran'\n\ticon: 'people'\n\tcolor: 'orange'\n,\n\tname: 'bayar'\n\tfull: 'Pembayaran'\n\ticon: 'monetization_on'\n\tcolor: 'green'\n,\n\tname: 'jalan'\n\tfull: 'Rawat Jalan'\n\ticon: 'directions'\n\tcolor: 'blue'\n,\n\tname: 'igd'\n\tfull: 'IGD'\n\ticon: 'airport_shuttle'\n\tcolor: 'red'\n,\n\tname: 'inap'\n\tfull: 'Rawat Inap'\n\ticon: 'hotel'\n\tcolor: 'cyan'\n,\n\tname: 'labor'\n\tfull: 'Laboratorium'\n\ticon: 'wb_incandescent'\n\tcolor: 'amber'\n,\n\tname: 'radio'\n\tfull: 'Radiologi'\n\ticon: 'airline_seat_flat'\n\tcolor: 'indigo'\n,\n\tname: 'obat'\n\tfull: 'Apotek'\n\ticon: 'enhanced_encryption'\n\tcolor: 'light-green'\n,\n\tname: 'admisi'\n\tfull: 'Admisi'\n\ticon: 'assignment'\n\tcolor: 'purple'\n,\n\tname: 'rekam'\n\tfull: 'Rekam Medik'\n\ticon: 'content_copy'\n\tcolor: 'brown'\n,\n\tname: 'farmasi'\n\tfull: 'Gudang Farmasi'\n\ticon: 'local_pharmacy'\n\tcolor: 'orange'\n,\n\tname: 'logistik'\n\tfull: 'Gudang Logistik'\n\ticon: 'rv_hookup'\n\tcolor: 'blue-grey'\n,\n\tname: 'manajemen'\n\tfull: 'Manajemen'\n\ticon: 'people'\n\tcolor: 'orange'\n]\n","if Meteor.isClient\n\n\t@makePdf =\n\t\tcard: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t'Nama: ' + doc.regis.nama_lengkap\n\t\t\t\t\t'No. MR: ' + doc.no_mr\n\t\t\t\t]\n\t\t\t\tpageSize: 'B8'\n\t\t\t\tpageMargins: [110, 50, 0, 0]\n\t\t\t\tpageOrientation: 'landscape'\n\t\t\tpdf.download doc.no_mr + '_card.pdf'\n\t\tconsent: ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024', alignment: 'center'}\n\t\t\t\t\t'\\nDATA UMUM PASIEN'\n\t\t\t\t\t'\\nNAMA LENGKAP : ' + doc.regis.nama_lengkap\n\t\t\t\t\t'TEMPAT & TANGGAL LAHIR : ' + doc.regis.tmpt_lahir + ', tanggal ' + moment(doc.regis.tgl_lahir).format('D/MMMM/YYYY')\n\t\t\t\t\t'GOLONGAN DARAH : ' + look('darah', doc.regis.darah).label\n\t\t\t\t\t'JENIS KELAMIN : ' + look('kelamin', doc.regis.kelamin).label\n\t\t\t\t\t'AGAMA : ' + look('agama', doc.regis.agama).label\n\t\t\t\t\t'PENDIDIKAN : ' + look('pendidikan', doc.regis.pendidikan).label\n\t\t\t\t\t'PEKERJAAN : ' + look('pekerjaan', doc.regis.pekerjaan).label\n\t\t\t\t\t'NAMA AYAH : ' + doc.regis.ayah\n\t\t\t\t\t'NAMA IBU : ' + doc.regis.ibu\n\t\t\t\t\t'NAMA SUAMI/ISTRI : ' + doc.regis.pasangan\n\t\t\t\t\t'ALAMAT : ' + doc.regis.alamat\n\t\t\t\t\t'NO. TELP / HP : ' + doc.regis.kontak\n\t\t\t\t\t'\\nPERSETUJUAN UMUM (GENERAL CONSENT)'\n\t\t\t\t\t'\\nSaya akan mentaati peraturan yang berlaku di RSUD Petala Bumi'\n\t\t\t\t\t'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas'\n\t\t\t\t\t'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.'\n\t\t\t\t\t'Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat'\n\t\t\t\t\t'Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan'\n\t\t\t\t\t'\\nPetunjuk :'\n\t\t\t\t\t'S: Setuju'\n\t\t\t\t\t'TS: Tidak Setuju'\n\t\t\t\t\t{text: 'Pekanbaru,                        .\\n\\n\\n__________________', alignment: 'right'}\n\t\t\t\t]\n\t\t\tpdf.download doc.no_mr + '_consent.pdf'\n\t\tpayRawat: (doc) ->\n\t\t\tpasien = coll.pasien.findOne()\n\t\t\trows = [['Uraian', 'Harga']]\n\t\t\tfor i in ['tindakan', 'labor', 'radio']\n\t\t\t\tif doc[i] then for j in doc[i]\n\t\t\t\t\tfind = _.find coll.tarif.find().fetch(), (k) -> k._id is j.nama\n\t\t\t\t\trows.push [_.startCase(find.nama), _.toString(j.harga)]\n\t\t\ttable = table: widths: [400, 100], body: rows\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\t{text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'}\n\t\t\t\t\t'\\nRINCIAN BIAYA RAWAT JALAN'\n\t\t\t\t\t'IDENTITAS PASIEN'\n\t\t\t\t\t'NO. MR' + pasien.no_mr\n\t\t\t\t\t'NAMA PASIEN' + pasien.regis.nama_lengkap\n\t\t\t\t\t'JENIS KELAMIN' + look('kelamin', pasien.regis.kelamin).label\n\t\t\t\t\t'TANGGAL LAHIR' + moment(pasien.regis.tgl_lahir).format('D MM YYYY')\n\t\t\t\t\t'UMUR' + _.toString moment().diff(pasien.regis.tgl_lahir, 'years')\n\t\t\t\t\t'KLINIK'\n\t\t\t\t\t'\\n\\nRINCIAN PEMBAYARAN'\n\t\t\t\t\ttable\n\t\t\t\t\t'TOTAL BIAYA' + 'Rp ' + _.toString numeral(doc.total.semua).format('0,0')\n\t\t\t\t\t'\\nPEKANBARU, ' + moment().format('DD MM YYYY')\n\t\t\t\t\t'PETUGAS'\n\t\t\t\t]\n\t\t\tpdf.download pasien.no_mr + '_payRawat.pdf'\n\t\tpayRegCard: (amount, words) ->\n\t\t\tdoc = coll.pasien.findOne()\n\t\t\tpdf = pdfMake.createPdf\n\t\t\t\tcontent: [\n\t\t\t\t\ttext: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU', alignment: 'center'\n\t\t\t\t,\n\t\t\t\t\t'\\nKARCIS'\n\t\t\t\t\t'TANGGAL : ' + moment().format('DD MM YYYY')\n\t\t\t\t\t'NO. MR : ' + _.toString doc.no_mr\n\t\t\t\t\t'NAMA PASIEN : ' + doc.regis.nama_lengkap\n\t\t\t\t\t'\\nTARIF : Rp ' + _.toString amount\n\t\t\t\t,\n\t\t\t\t\ttext: '(' + words + ')', italics: true\n\t\t\t\t]\n\t\t\tpdf.download doc.no_mr + '_payRegCard.pdf'\n\t\trekap: (rows) ->\n\t\t\tstrings = _.map rows, (i) -> _.map i, (j) -> _.toString j\n\t\t\tpdf = pdfMake.createPdf content: [table: body: strings]\n\t\t\tpdf.download 'rekap.pdf'\n\t\t\t\n","if (Meteor.isClient) {\n  this.makePdf = {\n    card: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: ['Nama: ' + doc.regis.nama_lengkap, 'No. MR: ' + doc.no_mr],\n        pageSize: 'B8',\n        pageMargins: [110, 50, 0, 0],\n        pageOrientation: 'landscape'\n      });\n      return pdf.download(doc.no_mr + '_card.pdf');\n    },\n    consent: function() {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. Dr. Soetomo No. 65, Telp. (0761) 23024',\n            alignment: 'center'\n          }, '\\nDATA UMUM PASIEN', '\\nNAMA LENGKAP : ' + doc.regis.nama_lengkap, 'TEMPAT & TANGGAL LAHIR : ' + doc.regis.tmpt_lahir + ', tanggal ' + moment(doc.regis.tgl_lahir).format('D/MMMM/YYYY'), 'GOLONGAN DARAH : ' + look('darah', doc.regis.darah).label, 'JENIS KELAMIN : ' + look('kelamin', doc.regis.kelamin).label, 'AGAMA : ' + look('agama', doc.regis.agama).label, 'PENDIDIKAN : ' + look('pendidikan', doc.regis.pendidikan).label, 'PEKERJAAN : ' + look('pekerjaan', doc.regis.pekerjaan).label, 'NAMA AYAH : ' + doc.regis.ayah, 'NAMA IBU : ' + doc.regis.ibu, 'NAMA SUAMI/ISTRI : ' + doc.regis.pasangan, 'ALAMAT : ' + doc.regis.alamat, 'NO. TELP / HP : ' + doc.regis.kontak, '\\nPERSETUJUAN UMUM (GENERAL CONSENT)', '\\nSaya akan mentaati peraturan yang berlaku di RSUD Petala Bumi', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan untuk melakukan pemeriksaan / pengobatan / tindakan yang diperlakukan upaya kesembuhan saya / pasien tersebut diatas', 'Saya memberi kuasa kepada dokter dan semua tenaga kesehatan yang ikut merawat saya untuk memberikan keterangan medis saya kepada yang bertanggung jawab atas biaya perawatan saya.', 'Saya memberi kuasa kepada RSUD Petala Bumi untuk menginformasikan identitas sosial saya kepada keluarga / rekan / masyarakat', 'Saya mengatakan bahwa informasi hasil pemeriksaan / rekam medis saya dapat digunakan untuk pendidikan / penelitian demi kemajuan ilmu kesehatan', '\\nPetunjuk :', 'S: Setuju', 'TS: Tidak Setuju', {\n            text: 'Pekanbaru,                        .\\n\\n\\n__________________',\n            alignment: 'right'\n          }\n        ]\n      });\n      return pdf.download(doc.no_mr + '_consent.pdf');\n    },\n    payRawat: function(doc) {\n      var find, i, j, l, len, len1, m, pasien, pdf, ref, ref1, rows, table;\n      pasien = coll.pasien.findOne();\n      rows = [['Uraian', 'Harga']];\n      ref = ['tindakan', 'labor', 'radio'];\n      for (l = 0, len = ref.length; l < len; l++) {\n        i = ref[l];\n        if (doc[i]) {\n          ref1 = doc[i];\n          for (m = 0, len1 = ref1.length; m < len1; m++) {\n            j = ref1[m];\n            find = _.find(coll.tarif.find().fetch(), function(k) {\n              return k._id === j.nama;\n            });\n            rows.push([_.startCase(find.nama), _.toString(j.harga)]);\n          }\n        }\n      }\n      table = {\n        table: {\n          widths: [400, 100],\n          body: rows\n        }\n      };\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, '\\nRINCIAN BIAYA RAWAT JALAN', 'IDENTITAS PASIEN', 'NO. MR' + pasien.no_mr, 'NAMA PASIEN' + pasien.regis.nama_lengkap, 'JENIS KELAMIN' + look('kelamin', pasien.regis.kelamin).label, 'TANGGAL LAHIR' + moment(pasien.regis.tgl_lahir).format('D MM YYYY'), 'UMUR' + _.toString(moment().diff(pasien.regis.tgl_lahir, 'years')), 'KLINIK', '\\n\\nRINCIAN PEMBAYARAN', table, 'TOTAL BIAYA' + 'Rp ' + _.toString(numeral(doc.total.semua).format('0,0')), '\\nPEKANBARU, ' + moment().format('DD MM YYYY'), 'PETUGAS'\n        ]\n      });\n      return pdf.download(pasien.no_mr + '_payRawat.pdf');\n    },\n    payRegCard: function(amount, words) {\n      var doc, pdf;\n      doc = coll.pasien.findOne();\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            text: 'PEMERINTAH PROVINSI RIAU\\nRUMAH SAKIT UMUM DAERAH PETALA BUMI\\nJL. DR. SOETOMO NO. 65, TELP. (0761) 23024, PEKANBARU',\n            alignment: 'center'\n          }, '\\nKARCIS', 'TANGGAL : ' + moment().format('DD MM YYYY'), 'NO. MR : ' + _.toString(doc.no_mr), 'NAMA PASIEN : ' + doc.regis.nama_lengkap, '\\nTARIF : Rp ' + _.toString(amount), {\n            text: '(' + words + ')',\n            italics: true\n          }\n        ]\n      });\n      return pdf.download(doc.no_mr + '_payRegCard.pdf');\n    },\n    rekap: function(rows) {\n      var pdf, strings;\n      strings = _.map(rows, function(i) {\n        return _.map(i, function(j) {\n          return _.toString(j);\n        });\n      });\n      pdf = pdfMake.createPdf({\n        content: [\n          {\n            table: {\n              body: strings\n            }\n          }\n        ]\n      });\n      return pdf.download('rekap.pdf');\n    }\n  };\n}\n","@selects =\n\trawat: ['Rawat Jalan', 'Rawat Inap', 'IGD']\n\tpekerjaan: ['Pegawa Negeri', 'Karyawan Swasta', 'Wirausaha', 'Petani', 'Tidak Bekerja']\n\tkelamin: ['Laki-laki', 'Perempuan']\n\tagama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu']\n\tpendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah']\n\tdarah: ['A', 'B', 'C', 'AB', 'O']\n\tcara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free']\n\tnikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda']\n\tklinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio']\n\tbentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh']\n\ttipe_dokter: ['Umum', 'Spesialis']\n\trujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya']\n\tkeluar: ['Pulang', 'Rujuk']\n\tbarang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP']\n\tsatuan: ['Botol', 'Vial', 'Ampul', 'Pcs']\n\tanggaran: ['BLUD']\n\n_.map (_.keys selects), (i) -> selects[i] = _.map selects[i], (j, x) -> label: j, value: x+1\n\nselects.tindakan = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\tselector = jenis: Meteor.user().roles.jalan[0]\n\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: _.startCase i.nama\n\nselects.dokter = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'dokter', {}, {}\n\tfind = _.find selects.klinik, (i) ->\n\t\tMeteor.user().roles.jalan[0] is _.snakeCase i.label\n\tselector = poli: find.value\n\tif sub.ready() then _.map coll.dokter.find(selector).fetch(), (i) ->\n\t\tvalue: i._id, label: i.nama\n\nselects.obat = -> if Meteor.isClient\n\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\tfilter = (arr) -> _.filter arr, (i) -> i.jenis is 1\n\tif sub.ready() then _.map filter(coll.gudang.find().fetch()), (i) ->\n\t\tvalue: i._id, label: i.nama\n\n_.map ['labor', 'radio'], (i) ->\n\tselects[i] = -> if Meteor.isClient\n\t\tsub = Meteor.subscribe 'coll', 'tarif', {}, {}\n\t\tselector = jenis: i\n\t\tif sub.ready() then _.map coll.tarif.find(selector).fetch(), (j) ->\n\t\t\tvalue: j._id, label: _.startCase j.nama\n","this.selects = {\n  rawat: ['Rawat Jalan', 'Rawat Inap', 'IGD'],\n  pekerjaan: ['Pegawa Negeri', 'Karyawan Swasta', 'Wirausaha', 'Petani', 'Tidak Bekerja'],\n  kelamin: ['Laki-laki', 'Perempuan'],\n  agama: ['Islam', 'Katolik', 'Protestan', 'Buddha', 'Hindu', 'Kong Hu Chu'],\n  pendidikan: ['SD', 'SMP', 'SMA', 'Diploma', 'S1', 'S2', 'S3', 'Tidak Sekolah'],\n  darah: ['A', 'B', 'C', 'AB', 'O'],\n  cara_bayar: ['Umum', 'BPJS', 'Jamkesda Pekanbaru', 'Jamkesda Kampar', 'Lapas/Dinsos', 'Free'],\n  nikah: ['Nikah', 'Belum Nikah', 'Janda', 'Duda'],\n  klinik: ['Penyakit Dalam', 'Gigi', 'Kebidanan', 'THT', 'Anak', 'Saraf', 'Mata', 'Bedah', 'Paru', 'Tb. Dots', 'Kulit', 'Fisioterapi', 'Gizi', 'Metadon', 'Psikologi', 'Tindakan', 'APS Labor', 'APS Radio'],\n  bentuk: ['butir', 'kapsul', 'tablet', 'sendok makan', 'sendok teh'],\n  tipe_dokter: ['Umum', 'Spesialis'],\n  rujukan: ['Datang Sendiri', 'RS Lain', 'Puskesmas', 'Faskes Lainnya'],\n  keluar: ['Pulang', 'Rujuk'],\n  barang: ['Generik', 'Non-Generik', 'Obat Narkotika', 'BHP'],\n  satuan: ['Botol', 'Vial', 'Ampul', 'Pcs'],\n  anggaran: ['BLUD']\n};\n\n_.map(_.keys(selects), function(i) {\n  return selects[i] = _.map(selects[i], function(j, x) {\n    return {\n      label: j,\n      value: x + 1\n    };\n  });\n});\n\nselects.tindakan = function() {\n  var selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'tarif', {}, {});\n    selector = {\n      jenis: Meteor.user().roles.jalan[0]\n    };\n    if (sub.ready()) {\n      return _.map(coll.tarif.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: _.startCase(i.nama)\n        };\n      });\n    }\n  }\n};\n\nselects.dokter = function() {\n  var find, selector, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'dokter', {}, {});\n    find = _.find(selects.klinik, function(i) {\n      return Meteor.user().roles.jalan[0] === _.snakeCase(i.label);\n    });\n    selector = {\n      poli: find.value\n    };\n    if (sub.ready()) {\n      return _.map(coll.dokter.find(selector).fetch(), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\nselects.obat = function() {\n  var filter, sub;\n  if (Meteor.isClient) {\n    sub = Meteor.subscribe('coll', 'gudang', {}, {});\n    filter = function(arr) {\n      return _.filter(arr, function(i) {\n        return i.jenis === 1;\n      });\n    };\n    if (sub.ready()) {\n      return _.map(filter(coll.gudang.find().fetch()), function(i) {\n        return {\n          value: i._id,\n          label: i.nama\n        };\n      });\n    }\n  }\n};\n\n_.map(['labor', 'radio'], function(i) {\n  return selects[i] = function() {\n    var selector, sub;\n    if (Meteor.isClient) {\n      sub = Meteor.subscribe('coll', 'tarif', {}, {});\n      selector = {\n        jenis: i\n      };\n      if (sub.ready()) {\n        return _.map(coll.tarif.find(selector).fetch(), function(j) {\n          return {\n            value: j._id,\n            label: _.startCase(j.nama)\n          };\n        });\n      }\n    }\n  };\n});\n","Router.configure\n\tlayoutTemplate: 'layout'\n\tloadingTemplate: 'loading'\n\nRouter.route '/',\n\taction: -> this.render 'home'\n\nschema.regis =\n\tno_mr: type: Number\n\tregis: type: Object\n\t'regis.nama_lengkap': type: String\n\t'regis.tgl_lahir': type: Date, autoform: type: 'pickadate', pickadateOptions: selectYears: 150, selectMonths: true\n\t'regis.tmpt_lahir': type: String, optional: true\n\t'regis.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'regis.kelamin': type: Number, autoform: options: selects.kelamin, type: 'select-radio-inline'\n\t'regis.agama': type: Number, autoform: options: selects.agama, type: 'select-radio-inline'\n\t'regis.nikah': type: Number, autoform: options: selects.nikah, type: 'select-radio-inline'\n\t'regis.pendidikan': type: Number, optional: true, autoform: options: selects.pendidikan, type: 'select-radio-inline'\n\t'regis.darah': type: Number, optional: true, autoform: options: selects.darah, type: 'select-radio-inline'\n\t'regis.pekerjaan': type: Number, optional: true, autoform: options: selects.pekerjaan, type: 'select-radio-inline'\n\t'regis.kabupaten': type: String, optional: true\n\t'regis.kecamatan': type: String, optional: true\n\t'regis.kelurahan': type: String, optional: true\n\t'regis.alamat': type: String\n\t'regis.kontak': type: String, optional: true\n\t'regis.ayah': type: String, optional: true\n\t'regis.ibu': type: String, optional: true\n\t'regis.pasangan': type: String, optional: true\n\t'regis.petugas':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> if Meteor.isClient then Meteor.userId()\n\t'regis.date':\n\t\ttype: Date\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> new Date\n\t'regis.billCard': type: Boolean, optional: true, autoform: type: 'hidden'\n\nschema.tindakan =\n\tidtindakan: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.tindakan\n\tdokter: type: String, autoform: options: selects.dokter\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\nschema.labor =\n\tidlabor: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.labor\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.radio =\n\tidradio: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.radio\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.obat =\n\tidobat: type: String, optional: true, autoform: type: 'hidden'\n\tnama: type: String, autoform: options: selects.obat\n\tpuyer: type: String, optional: true\n\taturan: type: Object\n\t'aturan.kali': type: Number\n\t'aturan.dosis': type: Number\n\t'aturan.bentuk': type: Number, autoform: options: selects.bentuk\n\tjumlah: type: Number\n\tharga: type: Number, optional: true, autoform: type: 'hidden'\n\tsubtotal: type: Number, optional: true, autoform: type: 'hidden'\n\thasil: type: String, optional: true, autoform: type: 'hidden'\n\nschema.rawat =\n\tno_mr: type: Number\n\trawat: type: Array\n\t'rawat.$': type: Object\n\t'rawat.$.tanggal': type: Date, autoform: type: 'hidden'\n\t'rawat.$.idbayar': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.jenis': type: String, optional: true, autoform: type: 'hidden'\n\t'rawat.$.cara_bayar': type: Number, autoform: options: selects.cara_bayar, type: 'select-radio-inline'\n\t'rawat.$.klinik': type: Number, autoform: options: selects.klinik, type: 'select-radio-inline'\n\t'rawat.$.billRegis': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.nobill': type: Number, autoform: type: 'hidden'\n\t'rawat.$.status_bayar': type: Boolean, optional: true, autoform: type: 'hidden'\n\t'rawat.$.rujukan': type: Number, optional: true, autoform: options: selects.rujukan, type: 'select-radio-inline'\n\t'rawat.$.anamesa': type: String, optional: true\n\t'rawat.$.diagnosa': type: String, optional: true\n\t'rawat.$.tindakan': type: [new SimpleSchema schema.tindakan], optional: true\n\t'rawat.$.labor': type: [new SimpleSchema schema.labor], optional: true\n\t'rawat.$.radio': type: [new SimpleSchema schema.radio], optional: true\n\t'rawat.$.obat': type: [new SimpleSchema schema.obat], optional: true\n\t'rawat.$.total': type: Object, optional: true, autoform: type: 'hidden'\n\t'rawat.$.total.tindakan': type: Number, optional: true\n\t'rawat.$.total.labor': type: Number, optional: true\n\t'rawat.$.total.radio': type: Number, optional: true\n\t'rawat.$.total.obat': type: Number, optional: true\n\t'rawat.$.total.semua': type: Number, optional: true\n\t'rawat.$.spm': type: Number, optional: true, autoform: type: 'hidden'\n\t'rawat.$.pindah': type: Number, optional: true, autoform: options: selects.klinik\n\t'rawat.$.keluar': type: Number, optional: true, autoform: options: selects.keluar\n\t'rawat.$.petugas': type: String, autoform: type: 'hidden'\n\nschema.jalan = _.assign schema.rawat, {}\nschema.inap = _.assign schema.rawat, {}\nschema.igd = _.assign schema.rawat, {}\n\nschema.gudang =\n\tidbarang:\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\tjenis: type: Number, autoform: options: selects.barang\n\tnama: type: String\n\tbatch: type: Array\n\t'batch.$': type: Object\n\t'batch.$.idbatch':\n\t\ttype: String\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> randomId()\n\t'batch.$.nobatch': type: String\n\t'batch.$.merek': type: String\n\t'batch.$.satuan': type: Number, autoform: options: selects.satuan\n\t'batch.$.masuk': type: Date, autoform: type: 'pickadate'\n\t'batch.$.kadaluarsa': type: Date, autoform: type: 'pickadate'\n\t'batch.$.digudang': type: Number\n\t'batch.$.diapotik': type: Number\n\t'batch.$.beli': type: Number, decimal: true\n\t'batch.$.jual': type: Number, decimal: true\n\t'batch.$.suplier': type: String\n\t'batch.$.anggaran': type: Number, autoform: options: selects.anggaran\n\t'batch.$.pengadaan': type: Number\n\nschema.farmasi = _.assign schema.gudang, {}\nschema.logistik = _.assign schema.gudang, {}\n\nschema.dokter =\n\tnama: type: String\n\ttipe: type: Number, autoform: options: selects.tipe_dokter\n\tpoli: type: Number, autoform: options: selects.klinik\n\nschema.tarif =\n\tjenis: type: String\n\tnama: type: String\n\tharga: type: Number\n\tgrup: type: String, optional: true\n\n_.map ['dokter', 'tarif'], (i) ->\n\tobj = active:\n\t\ttype: Boolean\n\t\tautoform: type: 'hidden'\n\t\tautoValue: -> true\n\t_.assign schema[i], obj\n\n_.map ['pasien', 'gudang', 'dokter', 'tarif'], (i) ->\n\tcoll[i] = new Meteor.Collection i\n\tarr = ['insert', 'update', 'remove']\n\tcoll[i].allow _.zipObject arr, _.map arr, (i) -> -> true\n\n_.map modules[0..9], (i) ->\n\tRouter.route '/'+i.name+'/:no_mr?',\n\t\tname: i.name\n\t\taction: -> this.render 'pasien'\n\t\twaitOn: ->\n\t\t\t_.map ['dokter', 'tarif', 'gudang'], (j) ->\n\t\t\t\tMeteor.subscribe 'coll', j, {}, {}\n\n_.map modules[10..11], (i) ->\n\tRouter.route '/'+i.name+'/:idbarang?',\n\t\tname: i.name\n\t\taction: -> this.render 'gudang'\n\n_.map ['panduan'], (i) ->\n\tRouter.route '/' + i,\n\t\taction: -> this.render i\n\nRouter.route '/manajemen',\n\taction: -> this.render 'manajemen'\n\twaitOn: -> [\n\t\tMeteor.subscribe 'users'\n\t\tMeteor.subscribe 'coll', 'dokter', {}, {}\n\t\tMeteor.subscribe 'coll', 'tarif', {}, {}\n\t]\n\nRouter.route '/login', ->\n\taction: -> this.render 'login'\n","Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading'\n});\n\nRouter.route('/', {\n  action: function() {\n    return this.render('home');\n  }\n});\n\nschema.regis = {\n  no_mr: {\n    type: Number\n  },\n  regis: {\n    type: Object\n  },\n  'regis.nama_lengkap': {\n    type: String\n  },\n  'regis.tgl_lahir': {\n    type: Date,\n    autoform: {\n      type: 'pickadate',\n      pickadateOptions: {\n        selectYears: 150,\n        selectMonths: true\n      }\n    }\n  },\n  'regis.tmpt_lahir': {\n    type: String,\n    optional: true\n  },\n  'regis.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kelamin': {\n    type: Number,\n    autoform: {\n      options: selects.kelamin,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.agama': {\n    type: Number,\n    autoform: {\n      options: selects.agama,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.nikah': {\n    type: Number,\n    autoform: {\n      options: selects.nikah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pendidikan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pendidikan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.darah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.darah,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.pekerjaan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.pekerjaan,\n      type: 'select-radio-inline'\n    }\n  },\n  'regis.kabupaten': {\n    type: String,\n    optional: true\n  },\n  'regis.kecamatan': {\n    type: String,\n    optional: true\n  },\n  'regis.kelurahan': {\n    type: String,\n    optional: true\n  },\n  'regis.alamat': {\n    type: String\n  },\n  'regis.kontak': {\n    type: String,\n    optional: true\n  },\n  'regis.ayah': {\n    type: String,\n    optional: true\n  },\n  'regis.ibu': {\n    type: String,\n    optional: true\n  },\n  'regis.pasangan': {\n    type: String,\n    optional: true\n  },\n  'regis.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      if (Meteor.isClient) {\n        return Meteor.userId();\n      }\n    }\n  },\n  'regis.date': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return new Date;\n    }\n  },\n  'regis.billCard': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.tindakan = {\n  idtindakan: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.tindakan\n    }\n  },\n  dokter: {\n    type: String,\n    autoform: {\n      options: selects.dokter\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.labor = {\n  idlabor: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.labor\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.radio = {\n  idradio: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.radio\n    }\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.obat = {\n  idobat: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  nama: {\n    type: String,\n    autoform: {\n      options: selects.obat\n    }\n  },\n  puyer: {\n    type: String,\n    optional: true\n  },\n  aturan: {\n    type: Object\n  },\n  'aturan.kali': {\n    type: Number\n  },\n  'aturan.dosis': {\n    type: Number\n  },\n  'aturan.bentuk': {\n    type: Number,\n    autoform: {\n      options: selects.bentuk\n    }\n  },\n  jumlah: {\n    type: Number\n  },\n  harga: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  subtotal: {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  hasil: {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.rawat = {\n  no_mr: {\n    type: Number\n  },\n  rawat: {\n    type: Array\n  },\n  'rawat.$': {\n    type: Object\n  },\n  'rawat.$.tanggal': {\n    type: Date,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.idbayar': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.jenis': {\n    type: String,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.cara_bayar': {\n    type: Number,\n    autoform: {\n      options: selects.cara_bayar,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.klinik': {\n    type: Number,\n    autoform: {\n      options: selects.klinik,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.billRegis': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.nobill': {\n    type: Number,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.status_bayar': {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.rujukan': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.rujukan,\n      type: 'select-radio-inline'\n    }\n  },\n  'rawat.$.anamesa': {\n    type: String,\n    optional: true\n  },\n  'rawat.$.diagnosa': {\n    type: String,\n    optional: true\n  },\n  'rawat.$.tindakan': {\n    type: [new SimpleSchema(schema.tindakan)],\n    optional: true\n  },\n  'rawat.$.labor': {\n    type: [new SimpleSchema(schema.labor)],\n    optional: true\n  },\n  'rawat.$.radio': {\n    type: [new SimpleSchema(schema.radio)],\n    optional: true\n  },\n  'rawat.$.obat': {\n    type: [new SimpleSchema(schema.obat)],\n    optional: true\n  },\n  'rawat.$.total': {\n    type: Object,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.total.tindakan': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.labor': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.radio': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.obat': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.total.semua': {\n    type: Number,\n    optional: true\n  },\n  'rawat.$.spm': {\n    type: Number,\n    optional: true,\n    autoform: {\n      type: 'hidden'\n    }\n  },\n  'rawat.$.pindah': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.klinik\n    }\n  },\n  'rawat.$.keluar': {\n    type: Number,\n    optional: true,\n    autoform: {\n      options: selects.keluar\n    }\n  },\n  'rawat.$.petugas': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    }\n  }\n};\n\nschema.jalan = _.assign(schema.rawat, {});\n\nschema.inap = _.assign(schema.rawat, {});\n\nschema.igd = _.assign(schema.rawat, {});\n\nschema.gudang = {\n  idbarang: {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  jenis: {\n    type: Number,\n    autoform: {\n      options: selects.barang\n    }\n  },\n  nama: {\n    type: String\n  },\n  batch: {\n    type: Array\n  },\n  'batch.$': {\n    type: Object\n  },\n  'batch.$.idbatch': {\n    type: String,\n    autoform: {\n      type: 'hidden'\n    },\n    autoValue: function() {\n      return randomId();\n    }\n  },\n  'batch.$.nobatch': {\n    type: String\n  },\n  'batch.$.merek': {\n    type: String\n  },\n  'batch.$.satuan': {\n    type: Number,\n    autoform: {\n      options: selects.satuan\n    }\n  },\n  'batch.$.masuk': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.kadaluarsa': {\n    type: Date,\n    autoform: {\n      type: 'pickadate'\n    }\n  },\n  'batch.$.digudang': {\n    type: Number\n  },\n  'batch.$.diapotik': {\n    type: Number\n  },\n  'batch.$.beli': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.jual': {\n    type: Number,\n    decimal: true\n  },\n  'batch.$.suplier': {\n    type: String\n  },\n  'batch.$.anggaran': {\n    type: Number,\n    autoform: {\n      options: selects.anggaran\n    }\n  },\n  'batch.$.pengadaan': {\n    type: Number\n  }\n};\n\nschema.farmasi = _.assign(schema.gudang, {});\n\nschema.logistik = _.assign(schema.gudang, {});\n\nschema.dokter = {\n  nama: {\n    type: String\n  },\n  tipe: {\n    type: Number,\n    autoform: {\n      options: selects.tipe_dokter\n    }\n  },\n  poli: {\n    type: Number,\n    autoform: {\n      options: selects.klinik\n    }\n  }\n};\n\nschema.tarif = {\n  jenis: {\n    type: String\n  },\n  nama: {\n    type: String\n  },\n  harga: {\n    type: Number\n  },\n  grup: {\n    type: String,\n    optional: true\n  }\n};\n\n_.map(['dokter', 'tarif'], function(i) {\n  var obj;\n  obj = {\n    active: {\n      type: Boolean,\n      autoform: {\n        type: 'hidden'\n      },\n      autoValue: function() {\n        return true;\n      }\n    }\n  };\n  return _.assign(schema[i], obj);\n});\n\n_.map(['pasien', 'gudang', 'dokter', 'tarif'], function(i) {\n  var arr;\n  coll[i] = new Meteor.Collection(i);\n  arr = ['insert', 'update', 'remove'];\n  return coll[i].allow(_.zipObject(arr, _.map(arr, function(i) {\n    return function() {\n      return true;\n    };\n  })));\n});\n\n_.map(modules.slice(0, 10), function(i) {\n  return Router.route('/' + i.name + '/:no_mr?', {\n    name: i.name,\n    action: function() {\n      return this.render('pasien');\n    },\n    waitOn: function() {\n      return _.map(['dokter', 'tarif', 'gudang'], function(j) {\n        return Meteor.subscribe('coll', j, {}, {});\n      });\n    }\n  });\n});\n\n_.map(modules.slice(10, 12), function(i) {\n  return Router.route('/' + i.name + '/:idbarang?', {\n    name: i.name,\n    action: function() {\n      return this.render('gudang');\n    }\n  });\n});\n\n_.map(['panduan'], function(i) {\n  return Router.route('/' + i, {\n    action: function() {\n      return this.render(i);\n    }\n  });\n});\n\nRouter.route('/manajemen', {\n  action: function() {\n    return this.render('manajemen');\n  },\n  waitOn: function() {\n    return [Meteor.subscribe('users'), Meteor.subscribe('coll', 'dokter', {}, {}), Meteor.subscribe('coll', 'tarif', {}, {})];\n  }\n});\n\nRouter.route('/login', function() {\n  return {\n    action: function() {\n      return this.render('login');\n    }\n  };\n});\n","if Meteor.isClient\n\n\tRouter.onBeforeAction ->\n\t\tunless Meteor.userId() then this.render 'login' else this.next()\n\tRouter.onAfterAction ->\n\t\tRouter.go '/' unless currentRoute() in\n\t\t\t_.uniq _.flatMap _.keys(roles()), (i) ->\n\t\t\t\t_.find(rights, (j) -> j.group is i).list\n\n\tglobalHelpers = [\n\t\t['coll', -> coll]\n\t\t['schema', -> new SimpleSchema schema[currentRoute()]]\n\t\t['zeros', (num) -> zeros num]\n\t\t['showForm', -> Session.get 'showForm']\n\t\t['hari', (date) -> moment(date).format('D MMM YYYY')]\n\t\t['rupiah', (val) -> 'Rp ' + numeral(val).format('0,0')]\n\t\t['currentPar', (param) -> currentPar param]\n\t\t['stringify', (obj) -> JSON.stringify obj]\n\t\t['startCase', (val) -> _.startCase val]\n\t\t['modules', -> modules]\n\t\t['reverse', (arr) -> _.reverse arr]\n\t\t['sortBy', (arr, sel, sort) -> _.sortBy arr, (i) -> -i.tanggal.getTime()]\n\t\t['isTrue', (a, b) -> a is b]\n\t\t['isFalse', (a, b) -> a isnt b]\n\t\t['look', (option, value, field) -> look(option, value)[field]]\n\t\t['look2', (option, value, field) -> look2(option, value)[field]]\n\t\t['routeIs', (name) -> currentRoute() is name]\n\t\t['userGroup', (name) -> roles()[name]]\n\t\t['userRole', (name) -> roles()[currentRoute()][0] is name]\n\t\t['pagins', (name) ->\n\t\t\tlimit = Session.get 'limit'\n\t\t\tlength = coll[name].find().fetch().length\n\t\t\tend = (length - (length % limit)) / limit\n\t\t\t[1..end]\n\t\t]\n\t]\n\t_.map globalHelpers, (i) -> Template.registerHelper i...\n\n\tTemplate.body.events\n\t\t'keypress #search': (event) ->\n\t\t\tif event.key is 'Enter'\n\t\t\t\tterm = event.target.value\n\t\t\t\tif term.length > 2\n\t\t\t\t\tSession.set 'search', term\n\n\tTemplate.layout.onRendered ->\n\t\tSession.set 'limit', 10\n\t\tSession.set 'page', 0\n\n\tTemplate.menu.helpers\n\t\tmenus: ->\t\t\t\n\t\t\t_.flatMap _.keys(roles()), (i) ->\n\t\t\t\tfind = _.find rights, (j) -> j.group is i\n\t\t\t\t_.map find.list, (j) -> _.find modules, (k) -> k.name is j\n\t\tnavTitle: ->\n\t\t\tfind = _.find modules, (i) -> i.name is currentRoute()\n\t\t\tfind?.full or _.startCase currentRoute()\n\t\ttoday: -> moment().format('LLL')\n\n\tTemplate.menu.events\n\t\t'click #logout': -> Meteor.logout()\n\t\t'click #refresh': -> document.location.reload()\n\n\tTemplate.pasien.helpers\n\t\troute: -> currentRoute()\n\t\tformType: ->\n\t\t\tif currentRoute() is 'regis'\n\t\t\t\tif currentPar 'no_mr' then 'update' else 'insert'\n\t\t\telse\n\t\t\t\t'update-pushArray'\n\t\tumur: (date) -> moment().diff(date, 'years') + ' tahun'\n\t\tshowButton: -> Router.current().params.no_mr or currentRoute() is 'regis'\n\t\tshowButtonText: ->\n\t\t\tswitch currentRoute()\n\t\t\t\twhen 'regis' then '+ Pasien'\n\t\t\t\twhen 'jalan' then '+ Rawat'\n\t\tformDoc: -> formDoc()\n\t\tpreview: -> Session.get 'preview'\n\t\tomitFields: ->\n\t\t\tarr = ['anamesa', 'diagnosa', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah']\n\t\t\tunless formDoc() and formDoc().billRegis\n\t\t\t\tarr\n\t\t\telse unless _.split(Meteor.user().username, '.')[0] is 'dr'\n\t\t\t\tarr[2..arr.length]\n\t\troleFilter: (arr) -> _.reverse _.filter arr, (i) ->\n\t\t\tfind = _.find selects.klinik, (j) ->\n\t\t\t\tj.label is _.startCase roles().jalan[0]\n\t\t\ti.klinik is find.value\n\t\tuserPoli: -> roles().jalan\n\t\tinsurance: (val) -> 'Rp ' + numeral(val+30000).format('0,0')\n\t\tselPol: -> _.map roles().jalan, (i) ->\n\t\t\t_.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\tpasiens: ->\n\t\t\tif currentPar 'no_mr'\n\t\t\t\tselector = no_mr: parseInt currentPar 'no_mr'\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tarr = ['bayar', 'jalan', 'labor', 'radio', 'obat']\n\t\t\t\toptions.fields.rawat = 1 if currentRoute() in arr\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = 'regis.nama_lengkap': $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyNoMR = no_mr: parseInt search()\n\t\t\t\tselector = $or: [byName, byNoMR]\n\t\t\t\toptions = fields: no_mr: 1, regis: 1\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, options\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if roles().jalan\n\t\t\t\tnow = new Date(); past = new Date now.getDate()-2\n\t\t\t\tkliniks = _.map roles().jalan, (i) ->\n\t\t\t\t\tfind = _.find selects.klinik, (j) -> i is _.snakeCase j.label\n\t\t\t\t\tfind.value\n\t\t\t\tselector = rawat: $elemMatch:\n\t\t\t\t\tklinik: $in: kliniks\n\t\t\t\t\ttanggal: $gt: past\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready()\n\t\t\t\t\tfilter = _.filter coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\t\ta = -> i.rawat[i.rawat.length-1].klinik in kliniks\n\t\t\t\t\t\tb = -> not i.rawat[i.rawat.length-1].total.semua\n\t\t\t\t\t\tselPol = Session.get 'selPol'\n\t\t\t\t\t\tc = -> i.rawat[i.rawat.length-1].klinik is selPol\n\t\t\t\t\t\tif selPol then b() and c() else a() and b()\n\t\t\t\t\t_.sortBy filter, (i) -> i.rawat[i.rawat.length-1].tanggal\n\t\t\telse if currentRoute() is 'bayar'\n\t\t\t\tselector = rawat: $elemMatch: $or: ['total.semua': 0, 'status_bayar': $ne: true]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selector, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\t\t\telse if currentRoute() in ['labor', 'radio', 'obat']\n\t\t\t\telem = 'status_bayar': true\n\t\t\t\telem[currentRoute()] = $exists: true, $elemMatch: hasil: $exists: false\n\t\t\t\tselSub = rawat: $elemMatch: elem\n\t\t\t\tsub = Meteor.subscribe 'coll', 'pasien', selSub, {}\n\t\t\t\tif sub.ready() then coll.pasien.find().fetch()\n\n\tTemplate.pasien.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t\tlater = ->\n\t\t\t\t$('.autoform-remove-item').trigger 'click'\n\t\t\t\tif currentRoute() is 'jalan'\n\t\t\t\t\t_.map ['cara_bayar', 'klinik', 'rujukan'], (i) ->\n\t\t\t\t\t\t$('div[data-schema-key=\"'+i+'\"]').prepend('<p>'+_.startCase(i)+'</p>')\n\t\t\t\t\t\tif formDoc() then $('input[name=\"'+i+'\"][value=\"'+formDoc()[i]+'\"]').prop 'checked', true\n\t\t\t\t\t_.map ['anamesa', 'diagnosa'], (i) ->\n\t\t\t\t\t\t$('input[name=\"'+i+'\"]').val formDoc()[i]\n\t\t\t\tlist = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan']\n\t\t\t\tif currentRoute() is 'regis' then _.map list, (i) ->\n\t\t\t\t\t$('div[data-schema-key=\"regis.'+i+'\"]').prepend('<p>'+_.startCase(i)+'</p>')\n\t\t\tsetTimeout later, 1000\n\t\t\tMeteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\tSession.set 'begin', moment()\n\t\t'dblclick #row': ->\n\t\t\tRouter.go '/' + currentRoute() + '/' + this.no_mr\n\t\t'click #close': ->\n\t\t\t_.map ['showForm', 'formDoc', 'preview', 'search'], (i) ->\n\t\t\t\tSession.set i, null\n\t\t\tRouter.go currentRoute()\n\t\t'click #card': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak Kartu'\n\t\t\t\tmessage: 'Yakin untuk cetak kartu ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'billCard', currentPar('no_mr'), true\n\t\t\t\tmakePdf.card()\n\t\t'click #consent': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Cetak General Consent'\n\t\t\t\tmessage: 'Yakin untuk cetak persetujuan pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> makePdf.consent() if ok\n\t\t'dblclick #bill': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Pembayaran Pendaftaran'\n\t\t\t\tmessage: 'Apakah yakin pasien sudah membayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tif nodes[1]\n\t\t\t\t\tMeteor.call 'billRegis', nodes..., true\n\t\t\t\t\tmakePdf.payRegCard 30000, 'Tiga Puluh Ribu Rupiah'\n\t\t\t\telse\n\t\t\t\t\tMeteor.call 'billCard', nodes[0], false\n\t\t\t\t\tmakePdf.payRegCard 10000, 'Sepuluh Ribu Rupiah'\n\t\t'dblclick #bayar': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Pembayaran'\n\t\t\t\tmessage: 'Apakah yakin tagihan ini sudah dibayar?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'bayar', nodes...\n\t\t\t\tpasien = coll.pasien.findOne no_mr: parseInt nodes[0]\n\t\t\t\tdoc = _.find pasien.rawat, (i) -> i.idbayar is nodes[1]\n\t\t\t\tmakePdf.payRawat doc\n\t\t'dblclick #request': (event) ->\n\t\t\tnodes = _.map ['pasien', 'idbayar', 'jenis', 'idjenis'], (i) ->\n\t\t\t\tevent.target.attributes[i].nodeValue\n\t\t\tMaterializeModal.prompt\n\t\t\t\tmessage: 'Isikan data requestnya'\n\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\tparams = ['request', nodes..., res.value]\n\t\t\t\t\tMeteor.call params..., (err, res) -> if res\n\t\t\t\t\t\tmessage = ''\n\t\t\t\t\t\tfor key, val of res\n\t\t\t\t\t\t\tmessage += '</p>'+key+': '+val+'</p>'\n\t\t\t\t\t\tMaterializeModal.message\n\t\t\t\t\t\t\ttitle: 'Penyerahan Obat'\n\t\t\t\t\t\t\tmessage: message\n\t\t\t\t\t\trekap = Session.get('rekap') or []\n\t\t\t\t\t\tflat = _.flatten _.toPairs res\n\t\t\t\t\t\tSession.set 'rekap', [rekap..., [nodes..., flat...]]\n\t\t'dblclick #rekap': ->\n\t\t\theaders = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah']\n\t\t\tmakePdf.rekap [headers, Session.get('rekap')...]\n\t\t\tSession.set 'rekap', null\n\t\t'click .modal-trigger': (event) ->\n\t\t\tif this.idbayar\n\t\t\t\tSession.set 'formDoc', this\n\t\t\t\tSession.set 'preview', modForm this, this.idbayar\n\t\t\t$('#preview').modal 'open'\n\t\t'click #rmRawat': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Konfirmasi Hapus'\n\t\t\t\tmessage: 'Apakah yakin hapus data rawat pasien ini?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRawat', currentPar('no_mr'), self.idbayar\n\t\t'change #selPol': (event) ->\n\t\t\tSession.set 'selPol', parseInt event.target.id\n\t\t'click #rmPasien': ->\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Pasien'\n\t\t\t\tmessage: 'Apakah yakin untuk menghapus pasien?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmPasien', currentPar 'no_mr'\n\t\t\t\tRouter.go '/' + currentRoute()\n\n\tTemplate.import.events\n\t\t'change :file': (event, template) ->\n\t\t\tPapa.parse event.target.files[0],\n\t\t\t\theader: true\n\t\t\t\tstep: (result) ->\n\t\t\t\t\tdata = result.data[0]\n\t\t\t\t\tif currentRoute() is 'regis'\n\t\t\t\t\t\tselector = no_mr: parseInt data.no_mr\n\t\t\t\t\t\tmodifier = regis:\n\t\t\t\t\t\t\tnama_lengkap: _.startCase data.nama_lengkap\n\t\t\t\t\t\t\talamat: _.startCase data.alamat\n\t\t\t\t\t\t\tagama: parseInt data.agama\n\t\t\t\t\t\t\tayah: _.startCase data.ayah\n\t\t\t\t\t\t\tnikah: parseInt data.nikah\n\t\t\t\t\t\t\tpekerjaan: parseInt data.pekerjaan\n\t\t\t\t\t\t\tpendidikan: parseInt data.pendidikan\n\t\t\t\t\t\t\ttgl_lahir: new Date data.tgl_lahir\n\t\t\t\t\t\t\ttmpt_kelahiran: _.startCase data.tmpt_kelahiran\n\t\t\t\t\t\tMeteor.call 'import', 'pasien', selector, modifier\n\t\t\t\t\telse if currentRoute() is 'manajemen'\n\t\t\t\t\t\tif data.tipe\n\t\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\ttipe: parseInt data.tipe\n\t\t\t\t\t\t\t\tpoli: parseInt data.poli\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tMeteor.call 'import', 'dokter', selector, modifier\n\t\t\t\t\t\telse if data.harga\n\t\t\t\t\t\t\tselector = nama: _.snakeCase data.nama\n\t\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\t\tharga: parseInt data.harga\n\t\t\t\t\t\t\t\tjenis: _.snakeCase data.jenis\n\t\t\t\t\t\t\t\tactive: true\n\t\t\t\t\t\t\tdata.grup and modifier.grup = _.startCase data.grup\n\t\t\t\t\t\t\tMeteor.call 'import', 'tarif', selector, modifier\n\t\t\t\t\t\telse if data.password\n\t\t\t\t\t\t\tMeteor.call 'newUser', data\n\t\t\t\t\t\t\tMeteor.call 'addRole', data.username, [data.role], data.group\n\t\t\t\t\telse if currentRoute() is 'farmasi'\n\t\t\t\t\t\tselector = nama: data.nama\n\t\t\t\t\t\tmodifier =\n\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\tidbarang: randomId()\n\t\t\t\t\t\t\tbatch: [\n\t\t\t\t\t\t\t\tidbatch: randomId()\n\t\t\t\t\t\t\t\tanggaran: data.anggaran\n\t\t\t\t\t\t\t\tbeli: parseInt data.beli\n\t\t\t\t\t\t\t\tdiapotik: parseInt data.diapotik\n\t\t\t\t\t\t\t\tdigudang: parseInt data.digudang\n\t\t\t\t\t\t\t\tjenis: parseInt data.jenis\n\t\t\t\t\t\t\t\tjual: parseInt data.jual\n\t\t\t\t\t\t\t\tkadaluarsa: new Date data.kadaluarsa\n\t\t\t\t\t\t\t\tmasuk: new Date data.masuk\n\t\t\t\t\t\t\t\tmerek: data.merek or ''\n\t\t\t\t\t\t\t\tnobatch: data.nobatch\n\t\t\t\t\t\t\t\tpengadaan: parseInt data.pengadaan\n\t\t\t\t\t\t\t\tsatuan: parseInt data.satuan\n\t\t\t\t\t\t\t\tsuplier: data.suplier\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\tdata.nama and Meteor.call 'import', 'gudang', selector, modifier, 'batch'\n\n\tTemplate.gudang.helpers\n\t\tschemagudang: -> new SimpleSchema schema.gudang\n\t\tformType: -> if currentPar('idbarang') then 'update-pushArray' else 'insert'\n\t\tgudangs: ->\n\t\t\tif currentPar 'idbarang'\n\t\t\t\tselector = idbarang: currentPar 'idbarang'\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tif sub.ready() then coll.gudang.findOne()\n\t\t\telse if search()\n\t\t\t\tbyName = nama: $options: '-i', $regex: '.*'+search()+'.*'\n\t\t\t\tbyBatch = idbatch: search()\n\t\t\t\tselector = $or: [byName, byBatch]\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', selector, {}\n\t\t\t\tsub.ready() and coll.gudang.find().fetch()\n\t\t\telse\n\t\t\t\tsub = Meteor.subscribe 'coll', 'gudang', {}, {}\n\t\t\t\tsub.ready() and coll.gudang.find().fetch()\n\n\tTemplate.gudang.events\n\t\t'click #showForm': ->\n\t\t\tSession.set 'showForm', not Session.get 'showForm'\n\t\t'dblclick #row': -> Router.go '/' + currentRoute() + '/' + this.idbarang\n\t\t'dblclick #transfer': ->\n\t\t\tdata = this\n\t\t\tif roles().farmasi\n\t\t\t\tMaterializeModal.prompt\n\t\t\t\t\tmessage: 'Transfer Gudang > Apotek'\n\t\t\t\t\tcallback: (err, res) -> if res.submit\n\t\t\t\t\t\tMeteor.call 'transfer', currentPar('idbarang'), data.idbatch, parseInt res.value\n\t\t'click #rmBarang': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus Jenis Obat'\n\t\t\t\tmessage: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmBarang', self.idbarang\n\n\tTemplate.manajemen.onRendered ->\n\t\t$('select#export').material_select()\n\n\tTemplate.manajemen.helpers\n\t\tusers: -> Meteor.users.find().fetch()\n\t\tonUser: -> Session.get 'onUser'\n\t\tselRoles: -> ['petugas', 'admin']\n\t\tklinik: -> selects.klinik\n\t\tschemadokter: -> new SimpleSchema schema.dokter\n\t\tschematarif: -> new SimpleSchema schema.tarif\n\t\tdokters: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.dokter.find(selector, options).fetch()\n\t\ttarifs: ->\n\t\t\tselector = active: true\n\t\t\toptions = limit: limit(), skip: page() * limit()\n\t\t\tcoll.tarif.find(selector, options).fetch()\n\n\tTemplate.manajemen.events\n\t\t'submit #userForm': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tonUser = Session.get 'onUser'\n\t\t\tunless onUser\n\t\t\t\tdoc =\n\t\t\t\t\tusername: event.target.children.username.value\n\t\t\t\t\tpassword: event.target.children.password.value\n\t\t\t\trepeat = event.target.children.repeat.value\n\t\t\t\tif doc.password is repeat\n\t\t\t\t\tMeteor.call 'newUser', doc\n\t\t\t\t\t$('input').val ''\n\t\t\t\telse\n\t\t\t\t\tMaterialize.toast 'Password tidak mirip', 3000\n\t\t\telse\n\t\t\t\trole = $('input[name=\"role\"]:checked', event.target)[0].id\n\t\t\t\tgroup = $('input[name=\"group\"]:checked', event.target)[0].id\n\t\t\t\tpoli = $('input[name=\"poli\"]:checked', event.target)[0]\n\t\t\t\ttheRole = unless poli then role else _.snakeCase poli.id\n\t\t\t\tMeteor.call 'addRole', onUser._id, [theRole], group\n\t\t'dblclick #row': -> Session.set 'onUser', this\n\t\t'dblclick #reset': ->\n\t\t\tself = this\n\t\t\tdialog =\n\t\t\t\ttitle: 'Reset Peranan'\n\t\t\t\tmessage: 'Anda yakin untuk menghapus semua perannya?'\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'rmRole', self._id\n\t\t'click #close': -> console.log 'tutup'\n\t\t'click #export': ->\n\t\t\tselect = $('select#export').val()\n\t\t\tMeteor.call 'export', select, (err, content) -> if content\n\t\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\t\tsaveAs blob, select+'.csv'\n\t\t'dblclick #baris': (event) ->\n\t\t\tjenis = event.currentTarget.className\n\t\t\tdialog =\n\t\t\t\ttitle: 'Hapus ' + _.startCase jenis\n\t\t\t\tmessage: 'Yakin untuk menghapus '+jenis+' dari daftar?'\n\t\t\tself = this\n\t\t\tnew Confirmation dialog, (ok) -> if ok\n\t\t\t\tMeteor.call 'inactive', jenis, self._id\n\n\tTemplate.login.onRendered ->\n\t\t$('.slider').slider()\n\n\tTemplate.login.events\n\t\t'submit form': (event) ->\n\t\t\tevent.preventDefault()\n\t\t\tusername = event.target.children.username.value\n\t\t\tpassword = event.target.children.password.value\n\t\t\tMeteor.loginWithPassword username, password, (err) ->\n\t\t\t\tif err\n\t\t\t\t\tMaterialize.toast 'Salah username / password', 3000\n\t\t\t\telse\n\t\t\t\t\tRouter.go '/' + _.keys(roles())[0]\n\n\tTemplate.pagination.events\n\t\t'click #next': -> Session.set 'page', 1 + page()\n\t\t'click #prev': -> Session.set 'page', -1 + page()\n\t\t'click #num': (event) ->\n\t\t\tSession.set 'page', parseInt event.target.innerText\n\n\tTemplate.report.helpers\n\t\tdatas: -> Session.get 'laporan'\n\n\tTemplate.report.events\n\t\t'click .datepicker': (event, template) ->\n\t\t\ttype = event.target.attributes.date.nodeValue\n\t\t\t$('#'+type).pickadate onSet: (data) ->\n\t\t\t\tSession.set type+'Date', data.select\n\t\t\t\tstart = Session.get 'startDate'\n\t\t\t\tend = Session.get 'endDate'\n\t\t\t\tif start and end\n\t\t\t\t\tMeteor.call 'report', template.data.jenis, start, end, (err, res) ->\n\t\t\t\t\t\tres and Session.set 'laporan', res\n\t\t'click #export': (event, template) ->\n\t\t\tcontent = exportcsv.exportToCSV Session.get('laporan').csv, true, ';'\n\t\t\tblob = new Blob [content], type: 'text/plain;charset=utf-8'\n\t\t\tsaveAs blob, template.data.jenis+'.csv'\n","var globalHelpers,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  slice = [].slice;\n\nif (Meteor.isClient) {\n  Router.onBeforeAction(function() {\n    if (!Meteor.userId()) {\n      return this.render('login');\n    } else {\n      return this.next();\n    }\n  });\n  Router.onAfterAction(function() {\n    var ref;\n    if (ref = currentRoute(), indexOf.call(_.uniq(_.flatMap(_.keys(roles()), function(i) {\n      return _.find(rights, function(j) {\n        return j.group === i;\n      }).list;\n    })), ref) < 0) {\n      return Router.go('/');\n    }\n  });\n  globalHelpers = [\n    [\n      'coll', function() {\n        return coll;\n      }\n    ], [\n      'schema', function() {\n        return new SimpleSchema(schema[currentRoute()]);\n      }\n    ], [\n      'zeros', function(num) {\n        return zeros(num);\n      }\n    ], [\n      'showForm', function() {\n        return Session.get('showForm');\n      }\n    ], [\n      'hari', function(date) {\n        return moment(date).format('D MMM YYYY');\n      }\n    ], [\n      'rupiah', function(val) {\n        return 'Rp ' + numeral(val).format('0,0');\n      }\n    ], [\n      'currentPar', function(param) {\n        return currentPar(param);\n      }\n    ], [\n      'stringify', function(obj) {\n        return JSON.stringify(obj);\n      }\n    ], [\n      'startCase', function(val) {\n        return _.startCase(val);\n      }\n    ], [\n      'modules', function() {\n        return modules;\n      }\n    ], [\n      'reverse', function(arr) {\n        return _.reverse(arr);\n      }\n    ], [\n      'sortBy', function(arr, sel, sort) {\n        return _.sortBy(arr, function(i) {\n          return -i.tanggal.getTime();\n        });\n      }\n    ], [\n      'isTrue', function(a, b) {\n        return a === b;\n      }\n    ], [\n      'isFalse', function(a, b) {\n        return a !== b;\n      }\n    ], [\n      'look', function(option, value, field) {\n        return look(option, value)[field];\n      }\n    ], [\n      'look2', function(option, value, field) {\n        return look2(option, value)[field];\n      }\n    ], [\n      'routeIs', function(name) {\n        return currentRoute() === name;\n      }\n    ], [\n      'userGroup', function(name) {\n        return roles()[name];\n      }\n    ], [\n      'userRole', function(name) {\n        return roles()[currentRoute()][0] === name;\n      }\n    ], [\n      'pagins', function(name) {\n        var end, l, length, limit, results;\n        limit = Session.get('limit');\n        length = coll[name].find().fetch().length;\n        end = (length - (length % limit)) / limit;\n        return (function() {\n          results = [];\n          for (var l = 1; 1 <= end ? l <= end : l >= end; 1 <= end ? l++ : l--){ results.push(l); }\n          return results;\n        }).apply(this);\n      }\n    ]\n  ];\n  _.map(globalHelpers, function(i) {\n    return Template.registerHelper.apply(Template, i);\n  });\n  Template.body.events({\n    'keypress #search': function(event) {\n      var term;\n      if (event.key === 'Enter') {\n        term = event.target.value;\n        if (term.length > 2) {\n          return Session.set('search', term);\n        }\n      }\n    }\n  });\n  Template.layout.onRendered(function() {\n    Session.set('limit', 10);\n    return Session.set('page', 0);\n  });\n  Template.menu.helpers({\n    menus: function() {\n      return _.flatMap(_.keys(roles()), function(i) {\n        var find;\n        find = _.find(rights, function(j) {\n          return j.group === i;\n        });\n        return _.map(find.list, function(j) {\n          return _.find(modules, function(k) {\n            return k.name === j;\n          });\n        });\n      });\n    },\n    navTitle: function() {\n      var find;\n      find = _.find(modules, function(i) {\n        return i.name === currentRoute();\n      });\n      return (find != null ? find.full : void 0) || _.startCase(currentRoute());\n    },\n    today: function() {\n      return moment().format('LLL');\n    }\n  });\n  Template.menu.events({\n    'click #logout': function() {\n      return Meteor.logout();\n    },\n    'click #refresh': function() {\n      return document.location.reload();\n    }\n  });\n  Template.pasien.helpers({\n    route: function() {\n      return currentRoute();\n    },\n    formType: function() {\n      if (currentRoute() === 'regis') {\n        if (currentPar('no_mr')) {\n          return 'update';\n        } else {\n          return 'insert';\n        }\n      } else {\n        return 'update-pushArray';\n      }\n    },\n    umur: function(date) {\n      return moment().diff(date, 'years') + ' tahun';\n    },\n    showButton: function() {\n      return Router.current().params.no_mr || currentRoute() === 'regis';\n    },\n    showButtonText: function() {\n      switch (currentRoute()) {\n        case 'regis':\n          return '+ Pasien';\n        case 'jalan':\n          return '+ Rawat';\n      }\n    },\n    formDoc: function() {\n      return formDoc();\n    },\n    preview: function() {\n      return Session.get('preview');\n    },\n    omitFields: function() {\n      var arr;\n      arr = ['anamesa', 'diagnosa', 'tindakan', 'labor', 'radio', 'obat', 'spm', 'keluar', 'pindah'];\n      if (!(formDoc() && formDoc().billRegis)) {\n        return arr;\n      } else if (_.split(Meteor.user().username, '.')[0] !== 'dr') {\n        return arr.slice(2, +arr.length + 1 || 9e9);\n      }\n    },\n    roleFilter: function(arr) {\n      return _.reverse(_.filter(arr, function(i) {\n        var find;\n        find = _.find(selects.klinik, function(j) {\n          return j.label === _.startCase(roles().jalan[0]);\n        });\n        return i.klinik === find.value;\n      }));\n    },\n    userPoli: function() {\n      return roles().jalan;\n    },\n    insurance: function(val) {\n      return 'Rp ' + numeral(val + 30000).format('0,0');\n    },\n    selPol: function() {\n      return _.map(roles().jalan, function(i) {\n        return _.find(selects.klinik, function(j) {\n          return i === _.snakeCase(j.label);\n        });\n      });\n    },\n    pasiens: function() {\n      var arr, byName, byNoMR, elem, filter, kliniks, now, options, past, ref, ref1, selSub, selector, sub;\n      if (currentPar('no_mr')) {\n        selector = {\n          no_mr: parseInt(currentPar('no_mr'))\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        arr = ['bayar', 'jalan', 'labor', 'radio', 'obat'];\n        if (ref = currentRoute(), indexOf.call(arr, ref) >= 0) {\n          options.fields.rawat = 1;\n        }\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          'regis.nama_lengkap': {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byNoMR = {\n          no_mr: parseInt(search())\n        };\n        selector = {\n          $or: [byName, byNoMR]\n        };\n        options = {\n          fields: {\n            no_mr: 1,\n            regis: 1\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, options);\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if (roles().jalan) {\n        now = new Date();\n        past = new Date(now.getDate() - 2);\n        kliniks = _.map(roles().jalan, function(i) {\n          var find;\n          find = _.find(selects.klinik, function(j) {\n            return i === _.snakeCase(j.label);\n          });\n          return find.value;\n        });\n        selector = {\n          rawat: {\n            $elemMatch: {\n              klinik: {\n                $in: kliniks\n              },\n              tanggal: {\n                $gt: past\n              }\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          filter = _.filter(coll.pasien.find().fetch(), function(i) {\n            var a, b, c, selPol;\n            a = function() {\n              var ref1;\n              return ref1 = i.rawat[i.rawat.length - 1].klinik, indexOf.call(kliniks, ref1) >= 0;\n            };\n            b = function() {\n              return !i.rawat[i.rawat.length - 1].total.semua;\n            };\n            selPol = Session.get('selPol');\n            c = function() {\n              return i.rawat[i.rawat.length - 1].klinik === selPol;\n            };\n            if (selPol) {\n              return b() && c();\n            } else {\n              return a() && b();\n            }\n          });\n          return _.sortBy(filter, function(i) {\n            return i.rawat[i.rawat.length - 1].tanggal;\n          });\n        }\n      } else if (currentRoute() === 'bayar') {\n        selector = {\n          rawat: {\n            $elemMatch: {\n              $or: [\n                {\n                  'total.semua': 0,\n                  'status_bayar': {\n                    $ne: true\n                  }\n                }\n              ]\n            }\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selector, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      } else if ((ref1 = currentRoute()) === 'labor' || ref1 === 'radio' || ref1 === 'obat') {\n        elem = {\n          'status_bayar': true\n        };\n        elem[currentRoute()] = {\n          $exists: true,\n          $elemMatch: {\n            hasil: {\n              $exists: false\n            }\n          }\n        };\n        selSub = {\n          rawat: {\n            $elemMatch: elem\n          }\n        };\n        sub = Meteor.subscribe('coll', 'pasien', selSub, {});\n        if (sub.ready()) {\n          return coll.pasien.find().fetch();\n        }\n      }\n    }\n  });\n  Template.pasien.events({\n    'click #showForm': function() {\n      var later;\n      Session.set('showForm', !Session.get('showForm'));\n      later = function() {\n        var list;\n        $('.autoform-remove-item').trigger('click');\n        if (currentRoute() === 'jalan') {\n          _.map(['cara_bayar', 'klinik', 'rujukan'], function(i) {\n            $('div[data-schema-key=\"' + i + '\"]').prepend('<p>' + _.startCase(i) + '</p>');\n            if (formDoc()) {\n              return $('input[name=\"' + i + '\"][value=\"' + formDoc()[i] + '\"]').prop('checked', true);\n            }\n          });\n          _.map(['anamesa', 'diagnosa'], function(i) {\n            return $('input[name=\"' + i + '\"]').val(formDoc()[i]);\n          });\n        }\n        list = ['cara_bayar', 'kelamin', 'agama', 'nikah', 'pendidikan', 'darah', 'pekerjaan'];\n        if (currentRoute() === 'regis') {\n          return _.map(list, function(i) {\n            return $('div[data-schema-key=\"regis.' + i + '\"]').prepend('<p>' + _.startCase(i) + '</p>');\n          });\n        }\n      };\n      setTimeout(later, 1000);\n      Meteor.subscribe('coll', 'gudang', {}, {});\n      return Session.set('begin', moment());\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.no_mr);\n    },\n    'click #close': function() {\n      _.map(['showForm', 'formDoc', 'preview', 'search'], function(i) {\n        return Session.set(i, null);\n      });\n      return Router.go(currentRoute());\n    },\n    'click #card': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak Kartu',\n        message: 'Yakin untuk cetak kartu ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          Meteor.call('billCard', currentPar('no_mr'), true);\n          return makePdf.card();\n        }\n      });\n    },\n    'click #consent': function() {\n      var dialog;\n      dialog = {\n        title: 'Cetak General Consent',\n        message: 'Yakin untuk cetak persetujuan pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return makePdf.consent();\n        }\n      });\n    },\n    'dblclick #bill': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Pembayaran Pendaftaran',\n        message: 'Apakah yakin pasien sudah membayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          if (nodes[1]) {\n            Meteor.call.apply(Meteor, ['billRegis'].concat(slice.call(nodes), [true]));\n            return makePdf.payRegCard(30000, 'Tiga Puluh Ribu Rupiah');\n          } else {\n            Meteor.call('billCard', nodes[0], false);\n            return makePdf.payRegCard(10000, 'Sepuluh Ribu Rupiah');\n          }\n        }\n      });\n    },\n    'dblclick #bayar': function(event) {\n      var dialog, nodes;\n      nodes = _.map(['pasien', 'idbayar'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      dialog = {\n        title: 'Konfirmasi Pembayaran',\n        message: 'Apakah yakin tagihan ini sudah dibayar?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        var doc, pasien;\n        if (ok) {\n          Meteor.call.apply(Meteor, ['bayar'].concat(slice.call(nodes)));\n          pasien = coll.pasien.findOne({\n            no_mr: parseInt(nodes[0])\n          });\n          doc = _.find(pasien.rawat, function(i) {\n            return i.idbayar === nodes[1];\n          });\n          return makePdf.payRawat(doc);\n        }\n      });\n    },\n    'dblclick #request': function(event) {\n      var nodes;\n      nodes = _.map(['pasien', 'idbayar', 'jenis', 'idjenis'], function(i) {\n        return event.target.attributes[i].nodeValue;\n      });\n      return MaterializeModal.prompt({\n        message: 'Isikan data requestnya',\n        callback: function(err, res) {\n          var params;\n          if (res.submit) {\n            params = ['request'].concat(slice.call(nodes), [res.value]);\n            return Meteor.call.apply(Meteor, slice.call(params).concat([function(err, res) {\n              var flat, key, message, rekap, val;\n              if (res) {\n                message = '';\n                for (key in res) {\n                  val = res[key];\n                  message += '</p>' + key + ': ' + val + '</p>';\n                }\n                MaterializeModal.message({\n                  title: 'Penyerahan Obat',\n                  message: message\n                });\n                rekap = Session.get('rekap') || [];\n                flat = _.flatten(_.toPairs(res));\n                return Session.set('rekap', slice.call(rekap).concat([slice.call(nodes).concat(slice.call(flat))]));\n              }\n            }]));\n          }\n        }\n      });\n    },\n    'dblclick #rekap': function() {\n      var headers;\n      headers = ['Pasien', 'ID Bayar', 'Jenis', 'ID Request', 'No Batch', 'Jumlah'];\n      makePdf.rekap([headers].concat(slice.call(Session.get('rekap'))));\n      return Session.set('rekap', null);\n    },\n    'click .modal-trigger': function(event) {\n      if (this.idbayar) {\n        Session.set('formDoc', this);\n        Session.set('preview', modForm(this, this.idbayar));\n      }\n      return $('#preview').modal('open');\n    },\n    'click #rmRawat': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Konfirmasi Hapus',\n        message: 'Apakah yakin hapus data rawat pasien ini?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRawat', currentPar('no_mr'), self.idbayar);\n        }\n      });\n    },\n    'change #selPol': function(event) {\n      return Session.set('selPol', parseInt(event.target.id));\n    },\n    'click #rmPasien': function() {\n      var dialog;\n      dialog = {\n        title: 'Hapus Pasien',\n        message: 'Apakah yakin untuk menghapus pasien?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          Meteor.call('rmPasien', currentPar('no_mr'));\n          return Router.go('/' + currentRoute());\n        }\n      });\n    }\n  });\n  Template[\"import\"].events({\n    'change :file': function(event, template) {\n      return Papa.parse(event.target.files[0], {\n        header: true,\n        step: function(result) {\n          var data, modifier, selector;\n          data = result.data[0];\n          if (currentRoute() === 'regis') {\n            selector = {\n              no_mr: parseInt(data.no_mr)\n            };\n            modifier = {\n              regis: {\n                nama_lengkap: _.startCase(data.nama_lengkap),\n                alamat: _.startCase(data.alamat),\n                agama: parseInt(data.agama),\n                ayah: _.startCase(data.ayah),\n                nikah: parseInt(data.nikah),\n                pekerjaan: parseInt(data.pekerjaan),\n                pendidikan: parseInt(data.pendidikan),\n                tgl_lahir: new Date(data.tgl_lahir),\n                tmpt_kelahiran: _.startCase(data.tmpt_kelahiran)\n              }\n            };\n            return Meteor.call('import', 'pasien', selector, modifier);\n          } else if (currentRoute() === 'manajemen') {\n            if (data.tipe) {\n              selector = {\n                nama: data.nama\n              };\n              modifier = {\n                tipe: parseInt(data.tipe),\n                poli: parseInt(data.poli),\n                active: true\n              };\n              return Meteor.call('import', 'dokter', selector, modifier);\n            } else if (data.harga) {\n              selector = {\n                nama: _.snakeCase(data.nama)\n              };\n              modifier = {\n                harga: parseInt(data.harga),\n                jenis: _.snakeCase(data.jenis),\n                active: true\n              };\n              data.grup && (modifier.grup = _.startCase(data.grup));\n              return Meteor.call('import', 'tarif', selector, modifier);\n            } else if (data.password) {\n              Meteor.call('newUser', data);\n              return Meteor.call('addRole', data.username, [data.role], data.group);\n            }\n          } else if (currentRoute() === 'farmasi') {\n            selector = {\n              nama: data.nama\n            };\n            modifier = {\n              jenis: parseInt(data.jenis),\n              idbarang: randomId(),\n              batch: [\n                {\n                  idbatch: randomId(),\n                  anggaran: data.anggaran,\n                  beli: parseInt(data.beli),\n                  diapotik: parseInt(data.diapotik),\n                  digudang: parseInt(data.digudang),\n                  jenis: parseInt(data.jenis),\n                  jual: parseInt(data.jual),\n                  kadaluarsa: new Date(data.kadaluarsa),\n                  masuk: new Date(data.masuk),\n                  merek: data.merek || '',\n                  nobatch: data.nobatch,\n                  pengadaan: parseInt(data.pengadaan),\n                  satuan: parseInt(data.satuan),\n                  suplier: data.suplier\n                }\n              ]\n            };\n            return data.nama && Meteor.call('import', 'gudang', selector, modifier, 'batch');\n          }\n        }\n      });\n    }\n  });\n  Template.gudang.helpers({\n    schemagudang: function() {\n      return new SimpleSchema(schema.gudang);\n    },\n    formType: function() {\n      if (currentPar('idbarang')) {\n        return 'update-pushArray';\n      } else {\n        return 'insert';\n      }\n    },\n    gudangs: function() {\n      var byBatch, byName, selector, sub;\n      if (currentPar('idbarang')) {\n        selector = {\n          idbarang: currentPar('idbarang')\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        if (sub.ready()) {\n          return coll.gudang.findOne();\n        }\n      } else if (search()) {\n        byName = {\n          nama: {\n            $options: '-i',\n            $regex: '.*' + search() + '.*'\n          }\n        };\n        byBatch = {\n          idbatch: search()\n        };\n        selector = {\n          $or: [byName, byBatch]\n        };\n        sub = Meteor.subscribe('coll', 'gudang', selector, {});\n        return sub.ready() && coll.gudang.find().fetch();\n      } else {\n        sub = Meteor.subscribe('coll', 'gudang', {}, {});\n        return sub.ready() && coll.gudang.find().fetch();\n      }\n    }\n  });\n  Template.gudang.events({\n    'click #showForm': function() {\n      return Session.set('showForm', !Session.get('showForm'));\n    },\n    'dblclick #row': function() {\n      return Router.go('/' + currentRoute() + '/' + this.idbarang);\n    },\n    'dblclick #transfer': function() {\n      var data;\n      data = this;\n      if (roles().farmasi) {\n        return MaterializeModal.prompt({\n          message: 'Transfer Gudang > Apotek',\n          callback: function(err, res) {\n            if (res.submit) {\n              return Meteor.call('transfer', currentPar('idbarang'), data.idbatch, parseInt(res.value));\n            }\n          }\n        });\n      }\n    },\n    'click #rmBarang': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Hapus Jenis Obat',\n        message: 'Apakah yakin untuk hapus jenis obat ini dari sistem?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmBarang', self.idbarang);\n        }\n      });\n    }\n  });\n  Template.manajemen.onRendered(function() {\n    return $('select#export').material_select();\n  });\n  Template.manajemen.helpers({\n    users: function() {\n      return Meteor.users.find().fetch();\n    },\n    onUser: function() {\n      return Session.get('onUser');\n    },\n    selRoles: function() {\n      return ['petugas', 'admin'];\n    },\n    klinik: function() {\n      return selects.klinik;\n    },\n    schemadokter: function() {\n      return new SimpleSchema(schema.dokter);\n    },\n    schematarif: function() {\n      return new SimpleSchema(schema.tarif);\n    },\n    dokters: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.dokter.find(selector, options).fetch();\n    },\n    tarifs: function() {\n      var options, selector;\n      selector = {\n        active: true\n      };\n      options = {\n        limit: limit(),\n        skip: page() * limit()\n      };\n      return coll.tarif.find(selector, options).fetch();\n    }\n  });\n  Template.manajemen.events({\n    'submit #userForm': function(event) {\n      var doc, group, onUser, poli, repeat, role, theRole;\n      event.preventDefault();\n      onUser = Session.get('onUser');\n      if (!onUser) {\n        doc = {\n          username: event.target.children.username.value,\n          password: event.target.children.password.value\n        };\n        repeat = event.target.children.repeat.value;\n        if (doc.password === repeat) {\n          Meteor.call('newUser', doc);\n          return $('input').val('');\n        } else {\n          return Materialize.toast('Password tidak mirip', 3000);\n        }\n      } else {\n        role = $('input[name=\"role\"]:checked', event.target)[0].id;\n        group = $('input[name=\"group\"]:checked', event.target)[0].id;\n        poli = $('input[name=\"poli\"]:checked', event.target)[0];\n        theRole = !poli ? role : _.snakeCase(poli.id);\n        return Meteor.call('addRole', onUser._id, [theRole], group);\n      }\n    },\n    'dblclick #row': function() {\n      return Session.set('onUser', this);\n    },\n    'dblclick #reset': function() {\n      var dialog, self;\n      self = this;\n      dialog = {\n        title: 'Reset Peranan',\n        message: 'Anda yakin untuk menghapus semua perannya?'\n      };\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('rmRole', self._id);\n        }\n      });\n    },\n    'click #close': function() {\n      return console.log('tutup');\n    },\n    'click #export': function() {\n      var select;\n      select = $('select#export').val();\n      return Meteor.call('export', select, function(err, content) {\n        var blob;\n        if (content) {\n          blob = new Blob([content], {\n            type: 'text/plain;charset=utf-8'\n          });\n          return saveAs(blob, select + '.csv');\n        }\n      });\n    },\n    'dblclick #baris': function(event) {\n      var dialog, jenis, self;\n      jenis = event.currentTarget.className;\n      dialog = {\n        title: 'Hapus ' + _.startCase(jenis),\n        message: 'Yakin untuk menghapus ' + jenis + ' dari daftar?'\n      };\n      self = this;\n      return new Confirmation(dialog, function(ok) {\n        if (ok) {\n          return Meteor.call('inactive', jenis, self._id);\n        }\n      });\n    }\n  });\n  Template.login.onRendered(function() {\n    return $('.slider').slider();\n  });\n  Template.login.events({\n    'submit form': function(event) {\n      var password, username;\n      event.preventDefault();\n      username = event.target.children.username.value;\n      password = event.target.children.password.value;\n      return Meteor.loginWithPassword(username, password, function(err) {\n        if (err) {\n          return Materialize.toast('Salah username / password', 3000);\n        } else {\n          return Router.go('/' + _.keys(roles())[0]);\n        }\n      });\n    }\n  });\n  Template.pagination.events({\n    'click #next': function() {\n      return Session.set('page', 1 + page());\n    },\n    'click #prev': function() {\n      return Session.set('page', -1 + page());\n    },\n    'click #num': function(event) {\n      return Session.set('page', parseInt(event.target.innerText));\n    }\n  });\n  Template.report.helpers({\n    datas: function() {\n      return Session.get('laporan');\n    }\n  });\n  Template.report.events({\n    'click .datepicker': function(event, template) {\n      var type;\n      type = event.target.attributes.date.nodeValue;\n      return $('#' + type).pickadate({\n        onSet: function(data) {\n          var end, start;\n          Session.set(type + 'Date', data.select);\n          start = Session.get('startDate');\n          end = Session.get('endDate');\n          if (start && end) {\n            return Meteor.call('report', template.data.jenis, start, end, function(err, res) {\n              return res && Session.set('laporan', res);\n            });\n          }\n        }\n      });\n    },\n    'click #export': function(event, template) {\n      var blob, content;\n      content = exportcsv.exportToCSV(Session.get('laporan').csv, true, ';');\n      blob = new Blob([content], {\n        type: 'text/plain;charset=utf-8'\n      });\n      return saveAs(blob, template.data.jenis + '.csv');\n    }\n  });\n}\n","if Meteor.isServer\n\n\tMeteor.startup ->\n\t\tcoll.pasien._ensureIndex 'regis.nama_lengkap': 1\n\n\tMeteor.publish 'coll', (name, selector, options) ->\n\t\tcoll[name].find selector, options\n\n\tMeteor.publish 'users', ->\n\t\tMeteor.users.find {}\n\n\tMeteor.methods\n\t\timport: (name, selector, modifier, arrName) ->\n\t\t\tfind = coll[name].findOne selector\n\t\t\tunless find\n\t\t\t\tcoll[name].upsert selector, $set: modifier\n\t\t\telse if arrName\n\t\t\t\tsel = _id: find._id\n\t\t\t\tobj = {}; obj[arrName] = modifier[arrName][0]\n\t\t\t\tcoll[name].update sel, $push: obj\n\n\t\texport: (jenis) ->\n\t\t\tif jenis is 'regis'\n\t\t\t\tarr = _.map coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\telse if jenis is 'jalan'\n\t\t\t\tfind = (type, value) ->\n\t\t\t\t\tdoc = _.find selects[type], (i) -> i.value is value\n\t\t\t\t\tdoc.label\n\t\t\t\tarr = _.flatMap coll.pasien.find().fetch(), (i) ->\n\t\t\t\t\tif i.rawat then _.map i.rawat, (j) ->\n\t\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\t\tnama_lengkap: i.regis.nama_lengkap\n\t\t\t\t\t\tidbayar: j.idbayar\n\t\t\t\t\t\tcara_bayar: find 'cara_bayar', j.cara_bayar\n\t\t\t\t\t\tklinik: find 'klinik', j.klinik\n\t\t\texportcsv.exportToCSV arr, true, ';'\n\n\t\tbillCard: (no_mr, state) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'regis.billCard': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbillRegis: (no_mr, idbayar, state) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = $set: 'rawat.$.billRegis': state\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\tbayar: (no_mr, idbayar) ->\n\t\t\tselector = 'rawat.idbayar': idbayar, no_mr: parseInt no_mr\n\t\t\tmodifier = 'rawat.$.status_bayar': true\n\t\t\tcoll.pasien.update selector, $set: modifier\n\n\t\trequest: (no_mr, idbayar, jenis, idjenis, hasil) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tfindPasien = coll.pasien.findOne selector\n\t\t\tfor i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i[jenis] then for j in i[jenis]\n\t\t\t\t\tif j['id'+jenis] is idjenis then j.hasil = hasil\n\t\t\tmodifier = rawat: findPasien.rawat\n\t\t\tcoll.pasien.update selector, $set: modifier\n\t\t\tgive = {}\n\t\t\tif jenis is 'obat' then for i in findPasien.rawat\n\t\t\t\tif i.idbayar is idbayar then if i.obat then for j in i.obat\n\t\t\t\t\tif j.idobat is idjenis\n\t\t\t\t\t\tfindStock = coll.gudang.findOne _id: j.nama\n\t\t\t\t\t\tfor k in [1..j.jumlah]\n\t\t\t\t\t\t\tfiltered = _.filter findStock.batch, (l) -> l.diapotik > 0\n\t\t\t\t\t\t\tsortedIn = _.sortBy filtered, (l) -> new Date(l.masuk).getTime()\n\t\t\t\t\t\t\tsortedEd = _.sortBy sortedIn, (l) -> new Date(l.kadaluarsa).getTime()\n\t\t\t\t\t\t\tsortedEd[0].diapotik -= 1\n\t\t\t\t\t\t\tkey = findStock.nama +';'+ sortedEd[0].nobatch\n\t\t\t\t\t\t\tgive[key] or= 0; give[key] += 1\n\t\t\t\t\t\tselector = _id: findStock._id\n\t\t\t\t\t\tmodifier = $set: batch: findStock.batch\n\t\t\t\t\t\tcoll.gudang.update selector, modifier\n\t\t\tgive if jenis is 'obat'\n\n\t\ttransfer: (idbarang, idbatch, amount) ->\n\t\t\tselector = idbarang: idbarang, 'batch.idbatch': idbatch\n\t\t\tmodifier = $inc: 'batch.$.digudang': -amount, 'batch.$.diapotik': amount\n\t\t\tcoll.gudang.update selector, modifier\n\n\t\trmPasien: (no_mr) ->\n\t\t\tcoll.pasien.remove no_mr: parseInt no_mr\n\n\t\trmRawat: (no_mr, idbayar) ->\n\t\t\tselector = no_mr: parseInt no_mr\n\t\t\tmodifier = $pull: rawat: idbayar: idbayar\n\t\t\tcoll.pasien.update selector, modifier\n\n\t\taddRole: (id, roles, group, poli) ->\n\t\t\trole = poli or roles\n\t\t\tRoles.addUsersToRoles id, role, group\n\n\t\trmRole: (id) ->\n\t\t\tselector = _id: id\n\t\t\tmodifier = $set: roles: {}\n\t\t\tMeteor.users.update selector, modifier\n\n\t\tnewUser: (doc) ->\n\t\t\tfind = Accounts.findUserByUsername doc.username\n\t\t\tif find\n\t\t\t\tAccounts.setUsername find._id, doc.username\n\t\t\t\tAccounts.setPassword find._id, doc.password\n\t\t\telse\n\t\t\t\tAccounts.createUser doc\n\n\t\trmBarang: (idbarang) ->\n\t\t\tcoll.gudang.remove idbarang: idbarang\n\n\t\tinactive: (name, id) ->\n\t\t\tsel = _id: id; mod = $set: active: false\n\t\t\tcoll[name].update sel, mod\n\n\t\tpindah: (no_mr) ->\n\t\t\tfind = coll.pasien.findOne 'no_mr': parseInt no_mr\n\t\t\t[..., last] = find.rawat\n\t\t\tif last.pindah\n\t\t\t\tselector = _id: find._id\n\t\t\t\tmodifier = $push: rawat:\n\t\t\t\t\tidbayar: randomId()\n\t\t\t\t\ttanggal: new Date()\n\t\t\t\t\tcara_bayar: last.cara_bayar\n\t\t\t\t\tklinik: last.pindah\n\t\t\t\t\tbillRegis: true\n\t\t\t\t\ttotal: semua: 0\n\t\t\t\tcoll.pasien.update selector, modifier\n\n\t\treport: (jenis, start, end) ->\n\t\t\tfilter = (arr) -> _.filter arr, (i) ->\n\t\t\t\tnew Date(start) < new Date(i.tanggal) < new Date(end)\n\t\t\tdocs = _.flatMap coll.pasien.find().fetch(), (i) -> _.map filter(i.rawat), (j) ->\n\t\t\t\tobj =\n\t\t\t\t\tno_mr: i.no_mr\n\t\t\t\t\tnama_lengkap: _.startCase i.regis.nama_lengkap\n\t\t\t\t\tno_bill: j.nobill\n\t\t\t\t\tcara_bayar: look('cara_bayar', j.cara_bayar).label\n\t\t\t\t\trujukan: if j.rujukan then look('rujukan', j.rujukan).label else ''\n\t\t\t\t\tklinik: look('klinik', j.klinik).label\n\t\t\t\t\tdiagnosa: j.diagnosa or '-'\n\t\t\t\t\ttindakan: _.flatMap ['tindakan', 'labor', 'radio'], (k) ->\n\t\t\t\t\t\tsaring = _.filter j[k], (l) -> l\n\t\t\t\t\t\t_.map saring, (l) -> '/' + _.startCase look2('tarif', l.nama).nama\n\t\t\t\t\tharga: 'Rp ' + j.total.semua\n\t\t\t\t\tpetugas: Meteor.users.findOne(_id: j.petugas).username\n\t\t\t\t\tkeluar: if j.keluar then look('keluar', j.keluar).label else '-'\n\t\t\t\t\tbaru_lama: 'L'\n\t\t\t\tif jenis is 'pendaftaran'\n\t\t\t\t\t_.pick obj, ['no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']\n\t\t\t\telse if jenis is 'pembayaran'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'tindakan', 'harga', 'petugas']\n\t\t\t\telse if jenis is 'rawat_jalan'\n\t\t\t\t\t_.pick obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']\n\t\t\theaders: _.map _.keys(docs[0]), (i) -> _.startCase i\n\t\t\trows: _.map docs, (i) -> _.values i\n\t\t\tcsv: docs\n","if (Meteor.isServer) {\n  Meteor.startup(function() {\n    return coll.pasien._ensureIndex({\n      'regis.nama_lengkap': 1\n    });\n  });\n  Meteor.publish('coll', function(name, selector, options) {\n    return coll[name].find(selector, options);\n  });\n  Meteor.publish('users', function() {\n    return Meteor.users.find({});\n  });\n  Meteor.methods({\n    \"import\": function(name, selector, modifier, arrName) {\n      var find, obj, sel;\n      find = coll[name].findOne(selector);\n      if (!find) {\n        return coll[name].upsert(selector, {\n          $set: modifier\n        });\n      } else if (arrName) {\n        sel = {\n          _id: find._id\n        };\n        obj = {};\n        obj[arrName] = modifier[arrName][0];\n        return coll[name].update(sel, {\n          $push: obj\n        });\n      }\n    },\n    \"export\": function(jenis) {\n      var arr, find;\n      if (jenis === 'regis') {\n        arr = _.map(coll.pasien.find().fetch(), function(i) {\n          return {\n            no_mr: i.no_mr,\n            nama_lengkap: i.regis.nama_lengkap\n          };\n        });\n      } else if (jenis === 'jalan') {\n        find = function(type, value) {\n          var doc;\n          doc = _.find(selects[type], function(i) {\n            return i.value === value;\n          });\n          return doc.label;\n        };\n        arr = _.flatMap(coll.pasien.find().fetch(), function(i) {\n          if (i.rawat) {\n            return _.map(i.rawat, function(j) {\n              return {\n                no_mr: i.no_mr,\n                nama_lengkap: i.regis.nama_lengkap,\n                idbayar: j.idbayar,\n                cara_bayar: find('cara_bayar', j.cara_bayar),\n                klinik: find('klinik', j.klinik)\n              };\n            });\n          }\n        });\n      }\n      return exportcsv.exportToCSV(arr, true, ';');\n    },\n    billCard: function(no_mr, state) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'regis.billCard': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    billRegis: function(no_mr, idbayar, state) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $set: {\n          'rawat.$.billRegis': state\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    bayar: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        'rawat.idbayar': idbayar,\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        'rawat.$.status_bayar': true\n      };\n      return coll.pasien.update(selector, {\n        $set: modifier\n      });\n    },\n    request: function(no_mr, idbayar, jenis, idjenis, hasil) {\n      var filtered, findPasien, findStock, give, i, j, k, key, len, len1, len2, len3, m, modifier, n, o, p, q, ref, ref1, ref2, ref3, ref4, selector, sortedEd, sortedIn;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      findPasien = coll.pasien.findOne(selector);\n      ref = findPasien.rawat;\n      for (m = 0, len = ref.length; m < len; m++) {\n        i = ref[m];\n        if (i.idbayar === idbayar) {\n          if (i[jenis]) {\n            ref1 = i[jenis];\n            for (n = 0, len1 = ref1.length; n < len1; n++) {\n              j = ref1[n];\n              if (j['id' + jenis] === idjenis) {\n                j.hasil = hasil;\n              }\n            }\n          }\n        }\n      }\n      modifier = {\n        rawat: findPasien.rawat\n      };\n      coll.pasien.update(selector, {\n        $set: modifier\n      });\n      give = {};\n      if (jenis === 'obat') {\n        ref2 = findPasien.rawat;\n        for (o = 0, len2 = ref2.length; o < len2; o++) {\n          i = ref2[o];\n          if (i.idbayar === idbayar) {\n            if (i.obat) {\n              ref3 = i.obat;\n              for (p = 0, len3 = ref3.length; p < len3; p++) {\n                j = ref3[p];\n                if (j.idobat === idjenis) {\n                  findStock = coll.gudang.findOne({\n                    _id: j.nama\n                  });\n                  for (k = q = 1, ref4 = j.jumlah; 1 <= ref4 ? q <= ref4 : q >= ref4; k = 1 <= ref4 ? ++q : --q) {\n                    filtered = _.filter(findStock.batch, function(l) {\n                      return l.diapotik > 0;\n                    });\n                    sortedIn = _.sortBy(filtered, function(l) {\n                      return new Date(l.masuk).getTime();\n                    });\n                    sortedEd = _.sortBy(sortedIn, function(l) {\n                      return new Date(l.kadaluarsa).getTime();\n                    });\n                    sortedEd[0].diapotik -= 1;\n                    key = findStock.nama(+';' + sortedEd[0].nobatch);\n                    give[key] || (give[key] = 0);\n                    give[key] += 1;\n                  }\n                  selector = {\n                    _id: findStock._id\n                  };\n                  modifier = {\n                    $set: {\n                      batch: findStock.batch\n                    }\n                  };\n                  coll.gudang.update(selector, modifier);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (jenis === 'obat') {\n        return give;\n      }\n    },\n    transfer: function(idbarang, idbatch, amount) {\n      var modifier, selector;\n      selector = {\n        idbarang: idbarang,\n        'batch.idbatch': idbatch\n      };\n      modifier = {\n        $inc: {\n          'batch.$.digudang': -amount,\n          'batch.$.diapotik': amount\n        }\n      };\n      return coll.gudang.update(selector, modifier);\n    },\n    rmPasien: function(no_mr) {\n      return coll.pasien.remove({\n        no_mr: parseInt(no_mr)\n      });\n    },\n    rmRawat: function(no_mr, idbayar) {\n      var modifier, selector;\n      selector = {\n        no_mr: parseInt(no_mr)\n      };\n      modifier = {\n        $pull: {\n          rawat: {\n            idbayar: idbayar\n          }\n        }\n      };\n      return coll.pasien.update(selector, modifier);\n    },\n    addRole: function(id, roles, group, poli) {\n      var role;\n      role = poli || roles;\n      return Roles.addUsersToRoles(id, role, group);\n    },\n    rmRole: function(id) {\n      var modifier, selector;\n      selector = {\n        _id: id\n      };\n      modifier = {\n        $set: {\n          roles: {}\n        }\n      };\n      return Meteor.users.update(selector, modifier);\n    },\n    newUser: function(doc) {\n      var find;\n      find = Accounts.findUserByUsername(doc.username);\n      if (find) {\n        Accounts.setUsername(find._id, doc.username);\n        return Accounts.setPassword(find._id, doc.password);\n      } else {\n        return Accounts.createUser(doc);\n      }\n    },\n    rmBarang: function(idbarang) {\n      return coll.gudang.remove({\n        idbarang: idbarang\n      });\n    },\n    inactive: function(name, id) {\n      var mod, sel;\n      sel = {\n        _id: id\n      };\n      mod = {\n        $set: {\n          active: false\n        }\n      };\n      return coll[name].update(sel, mod);\n    },\n    pindah: function(no_mr) {\n      var find, last, modifier, ref, selector;\n      find = coll.pasien.findOne({\n        'no_mr': parseInt(no_mr)\n      });\n      ref = find.rawat, last = ref[ref.length - 1];\n      if (last.pindah) {\n        selector = {\n          _id: find._id\n        };\n        modifier = {\n          $push: {\n            rawat: {\n              idbayar: randomId(),\n              tanggal: new Date(),\n              cara_bayar: last.cara_bayar,\n              klinik: last.pindah,\n              billRegis: true,\n              total: {\n                semua: 0\n              }\n            }\n          }\n        };\n        return coll.pasien.update(selector, modifier);\n      }\n    },\n    report: function(jenis, start, end) {\n      var docs, filter;\n      filter = function(arr) {\n        return _.filter(arr, function(i) {\n          var ref;\n          return (new Date(start) < (ref = new Date(i.tanggal)) && ref < new Date(end));\n        });\n      };\n      docs = _.flatMap(coll.pasien.find().fetch(), function(i) {\n        return _.map(filter(i.rawat), function(j) {\n          var obj;\n          obj = {\n            no_mr: i.no_mr,\n            nama_lengkap: _.startCase(i.regis.nama_lengkap),\n            no_bill: j.nobill,\n            cara_bayar: look('cara_bayar', j.cara_bayar).label,\n            rujukan: j.rujukan ? look('rujukan', j.rujukan).label : '',\n            klinik: look('klinik', j.klinik).label,\n            diagnosa: j.diagnosa || '-',\n            tindakan: _.flatMap(['tindakan', 'labor', 'radio'], function(k) {\n              var saring;\n              saring = _.filter(j[k], function(l) {\n                return l;\n              });\n              return _.map(saring, function(l) {\n                return '/' + _.startCase(look2('tarif', l.nama).nama);\n              });\n            }),\n            harga: 'Rp ' + j.total.semua,\n            petugas: Meteor.users.findOne({\n              _id: j.petugas\n            }).username,\n            keluar: j.keluar ? look('keluar', j.keluar).label : '-',\n            baru_lama: 'L'\n          };\n          if (jenis === 'pendaftaran') {\n            return _.pick(obj, ['no_mr', 'nama_lengkap', 'cara_bayar', 'rujukan', 'klinik', 'baru_lama']);\n          } else if (jenis === 'pembayaran') {\n            return _.pick(obj, ['tanggal', 'no_bill', 'no_mr', 'nama_lengkap', 'klinik', 'tindakan', 'harga', 'petugas']);\n          } else if (jenis === 'rawat_jalan') {\n            return _.pick(obj, ['tanggal', 'no_mr', 'nama_lengkap', 'kelamin', 'umur', 'cara_bayar', 'diagnosa', 'tindakan', 'petugas', 'keluar', 'rujukan']);\n          }\n        });\n      });\n      return {\n        headers: _.map(_.keys(docs[0]), function(i) {\n          return _.startCase(i);\n        }),\n        rows: _.map(docs, function(i) {\n          return _.values(i);\n        }),\n        csv: docs\n      };\n    }\n  });\n}\n"]}